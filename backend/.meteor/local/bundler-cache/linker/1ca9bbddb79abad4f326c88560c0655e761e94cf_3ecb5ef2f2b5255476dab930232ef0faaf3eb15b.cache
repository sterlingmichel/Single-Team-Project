[{"type":"js","data":"Package[\"core-runtime\"].queue(\"webapp\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EmitterPromise = Package.meteor.EmitterPromise;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Log = Package.logging.Log;\nvar _ = Package.underscore._;\nvar RoutePolicy = Package.routepolicy.RoutePolicy;\nvar Boilerplate = Package['boilerplate-generator'].Boilerplate;\nvar WebAppHashing = Package['webapp-hashing'].WebAppHashing;\nvar Hook = Package['callback-hook'].Hook;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar WebApp, WebAppInternals, main;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"webapp\":{\"webapp_server.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/webapp/webapp_server.js                                                                         //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module1.export({\n      WebApp: () => WebApp,\n      WebAppInternals: () => WebAppInternals,\n      getGroupInfo: () => getGroupInfo\n    });\n    let assert;\n    module1.link(\"assert\", {\n      default(v) {\n        assert = v;\n      }\n    }, 0);\n    let readFileSync, chmodSync, chownSync;\n    module1.link(\"fs\", {\n      readFileSync(v) {\n        readFileSync = v;\n      },\n      chmodSync(v) {\n        chmodSync = v;\n      },\n      chownSync(v) {\n        chownSync = v;\n      }\n    }, 1);\n    let createServer;\n    module1.link(\"http\", {\n      createServer(v) {\n        createServer = v;\n      }\n    }, 2);\n    let userInfo;\n    module1.link(\"os\", {\n      userInfo(v) {\n        userInfo = v;\n      }\n    }, 3);\n    let pathJoin, pathDirname;\n    module1.link(\"path\", {\n      join(v) {\n        pathJoin = v;\n      },\n      dirname(v) {\n        pathDirname = v;\n      }\n    }, 4);\n    let parseUrl;\n    module1.link(\"url\", {\n      parse(v) {\n        parseUrl = v;\n      }\n    }, 5);\n    let createHash;\n    module1.link(\"crypto\", {\n      createHash(v) {\n        createHash = v;\n      }\n    }, 6);\n    let express;\n    module1.link(\"express\", {\n      default(v) {\n        express = v;\n      }\n    }, 7);\n    let compress;\n    module1.link(\"compression\", {\n      default(v) {\n        compress = v;\n      }\n    }, 8);\n    let cookieParser;\n    module1.link(\"cookie-parser\", {\n      default(v) {\n        cookieParser = v;\n      }\n    }, 9);\n    let qs;\n    module1.link(\"qs\", {\n      default(v) {\n        qs = v;\n      }\n    }, 10);\n    let parseRequest;\n    module1.link(\"parseurl\", {\n      default(v) {\n        parseRequest = v;\n      }\n    }, 11);\n    let lookupUserAgent;\n    module1.link(\"useragent\", {\n      lookup(v) {\n        lookupUserAgent = v;\n      }\n    }, 12);\n    let isModern;\n    module1.link(\"meteor/modern-browsers\", {\n      isModern(v) {\n        isModern = v;\n      }\n    }, 13);\n    let send;\n    module1.link(\"send\", {\n      default(v) {\n        send = v;\n      }\n    }, 14);\n    let removeExistingSocketFile, registerSocketFileCleanup;\n    module1.link(\"./socket_file.js\", {\n      removeExistingSocketFile(v) {\n        removeExistingSocketFile = v;\n      },\n      registerSocketFileCleanup(v) {\n        registerSocketFileCleanup = v;\n      }\n    }, 15);\n    let cluster;\n    module1.link(\"cluster\", {\n      default(v) {\n        cluster = v;\n      }\n    }, 16);\n    let execSync;\n    module1.link(\"child_process\", {\n      execSync(v) {\n        execSync = v;\n      }\n    }, 17);\n    let onMessage;\n    module1.link(\"meteor/inter-process-messaging\", {\n      onMessage(v) {\n        onMessage = v;\n      }\n    }, 18);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    var SHORT_SOCKET_TIMEOUT = 5 * 1000;\n    var LONG_SOCKET_TIMEOUT = 120 * 1000;\n    const createExpressApp = () => {\n      const app = express();\n      // Security and performace headers\n      // these headers come from these docs: https://expressjs.com/en/api.html#app.settings.table\n      app.set('x-powered-by', false);\n      app.set('etag', false);\n      return app;\n    };\n    const WebApp = {};\n    const WebAppInternals = {};\n    const hasOwn = Object.prototype.hasOwnProperty;\n    WebAppInternals.NpmModules = {\n      express: {\n        version: Npm.require('express/package.json').version,\n        module: express\n      }\n    };\n\n    // More of a convenience for the end user\n    WebApp.express = express;\n\n    // Though we might prefer to use web.browser (modern) as the default\n    // architecture, safety requires a more compatible defaultArch.\n    WebApp.defaultArch = 'web.browser.legacy';\n\n    // XXX maps archs to manifests\n    WebApp.clientPrograms = {};\n\n    // XXX maps archs to program path on filesystem\n    var archPath = {};\n    var bundledJsCssUrlRewriteHook = function (url) {\n      var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n      return bundledPrefix + url;\n    };\n    var sha1 = function (contents) {\n      var hash = createHash('sha1');\n      hash.update(contents);\n      return hash.digest('hex');\n    };\n    function shouldCompress(req, res) {\n      if (req.headers['x-no-compression']) {\n        // don't compress responses with this request header\n        return false;\n      }\n\n      // fallback to standard filter function\n      return compress.filter(req, res);\n    }\n\n    // #BrowserIdentification\n    //\n    // We have multiple places that want to identify the browser: the\n    // unsupported browser page, the appcache package, and, eventually\n    // delivering browser polyfills only as needed.\n    //\n    // To avoid detecting the browser in multiple places ad-hoc, we create a\n    // Meteor \"browser\" object. It uses but does not expose the npm\n    // useragent module (we could choose a different mechanism to identify\n    // the browser in the future if we wanted to).  The browser object\n    // contains\n    //\n    // * `name`: the name of the browser in camel case\n    // * `major`, `minor`, `patch`: integers describing the browser version\n    //\n    // Also here is an early version of a Meteor `request` object, intended\n    // to be a high-level description of the request without exposing\n    // details of Express's low-level `req`.  Currently it contains:\n    //\n    // * `browser`: browser identification object described above\n    // * `url`: parsed url, including parsed query params\n    //\n    // As a temporary hack there is a `categorizeRequest` function on WebApp which\n    // converts a Express `req` to a Meteor `request`. This can go away once smart\n    // packages such as appcache are being passed a `request` object directly when\n    // they serve content.\n    //\n    // This allows `request` to be used uniformly: it is passed to the html\n    // attributes hook, and the appcache package can use it when deciding\n    // whether to generate a 404 for the manifest.\n    //\n    // Real routing / server side rendering will probably refactor this\n    // heavily.\n\n    // e.g. \"Mobile Safari\" => \"mobileSafari\"\n    var camelCase = function (name) {\n      var parts = name.split(' ');\n      parts[0] = parts[0].toLowerCase();\n      for (var i = 1; i < parts.length; ++i) {\n        parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n      }\n      return parts.join('');\n    };\n    var identifyBrowser = function (userAgentString) {\n      var userAgent = lookupUserAgent(userAgentString);\n      return {\n        name: camelCase(userAgent.family),\n        major: +userAgent.major,\n        minor: +userAgent.minor,\n        patch: +userAgent.patch\n      };\n    };\n\n    // XXX Refactor as part of implementing real routing.\n    WebAppInternals.identifyBrowser = identifyBrowser;\n    WebApp.categorizeRequest = function (req) {\n      if (req.browser && req.arch && typeof req.modern === 'boolean') {\n        // Already categorized.\n        return req;\n      }\n      const browser = identifyBrowser(req.headers['user-agent']);\n      const modern = isModern(browser);\n      const path = typeof req.pathname === 'string' ? req.pathname : parseRequest(req).pathname;\n      const categorized = {\n        browser,\n        modern,\n        path,\n        arch: WebApp.defaultArch,\n        url: parseUrl(req.url, true),\n        dynamicHead: req.dynamicHead,\n        dynamicBody: req.dynamicBody,\n        headers: req.headers,\n        cookies: req.cookies\n      };\n      const pathParts = path.split('/');\n      const archKey = pathParts[1];\n      if (archKey.startsWith('__')) {\n        const archCleaned = 'web.' + archKey.slice(2);\n        if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n          pathParts.splice(1, 1); // Remove the archKey part.\n          return Object.assign(categorized, {\n            arch: archCleaned,\n            path: pathParts.join('/')\n          });\n        }\n      }\n\n      // TODO Perhaps one day we could infer Cordova clients here, so that we\n      // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n      const preferredArchOrder = isModern(browser) ? ['web.browser', 'web.browser.legacy'] : ['web.browser.legacy', 'web.browser'];\n      for (const arch of preferredArchOrder) {\n        // If our preferred arch is not available, it's better to use another\n        // client arch that is available than to guarantee the site won't work\n        // by returning an unknown arch. For example, if web.browser.legacy is\n        // excluded using the --exclude-archs command-line option, legacy\n        // clients are better off receiving web.browser (which might actually\n        // work) than receiving an HTTP 404 response. If none of the archs in\n        // preferredArchOrder are defined, only then should we send a 404.\n        if (hasOwn.call(WebApp.clientPrograms, arch)) {\n          return Object.assign(categorized, {\n            arch\n          });\n        }\n      }\n      return categorized;\n    };\n\n    // HTML attribute hooks: functions to be called to determine any attributes to\n    // be added to the '<html>' tag. Each function is passed a 'request' object (see\n    // #BrowserIdentification) and should return null or object.\n    var htmlAttributeHooks = [];\n    var getHtmlAttributes = function (request) {\n      var combinedAttributes = {};\n      _.each(htmlAttributeHooks || [], function (hook) {\n        var attributes = hook(request);\n        if (attributes === null) return;\n        if (typeof attributes !== 'object') throw Error('HTML attribute hook must return null or object');\n        _.extend(combinedAttributes, attributes);\n      });\n      return combinedAttributes;\n    };\n    WebApp.addHtmlAttributeHook = function (hook) {\n      htmlAttributeHooks.push(hook);\n    };\n\n    // Serve app HTML for this URL?\n    var appUrl = function (url) {\n      if (url === '/favicon.ico' || url === '/robots.txt') return false;\n\n      // NOTE: app.manifest is not a web standard like favicon.ico and\n      // robots.txt. It is a file name we have chosen to use for HTML5\n      // appcache URLs. It is included here to prevent using an appcache\n      // then removing it from poisoning an app permanently. Eventually,\n      // once we have server side routing, this won't be needed as\n      // unknown URLs with return a 404 automatically.\n      if (url === '/app.manifest') return false;\n\n      // Avoid serving app HTML for declared routes such as /sockjs/.\n      if (RoutePolicy.classify(url)) return false;\n\n      // we currently return app HTML on all URLs by default\n      return true;\n    };\n\n    // We need to calculate the client hash after all packages have loaded\n    // to give them a chance to populate __meteor_runtime_config__.\n    //\n    // Calculating the hash during startup means that packages can only\n    // populate __meteor_runtime_config__ during load, not during startup.\n    //\n    // Calculating instead it at the beginning of main after all startup\n    // hooks had run would allow packages to also populate\n    // __meteor_runtime_config__ during startup, but that's too late for\n    // autoupdate because it needs to have the client hash at startup to\n    // insert the auto update version itself into\n    // __meteor_runtime_config__ to get it to the client.\n    //\n    // An alternative would be to give autoupdate a \"post-start,\n    // pre-listen\" hook to allow it to insert the auto update version at\n    // the right moment.\n\n    Meteor.startup(function () {\n      function getter(key) {\n        return function (arch) {\n          arch = arch || WebApp.defaultArch;\n          const program = WebApp.clientPrograms[arch];\n          const value = program && program[key];\n          // If this is the first time we have calculated this hash,\n          // program[key] will be a thunk (lazy function with no parameters)\n          // that we should call to do the actual computation.\n          return typeof value === 'function' ? program[key] = value() : value;\n        };\n      }\n      WebApp.calculateClientHash = WebApp.clientHash = getter('version');\n      WebApp.calculateClientHashRefreshable = getter('versionRefreshable');\n      WebApp.calculateClientHashNonRefreshable = getter('versionNonRefreshable');\n      WebApp.calculateClientHashReplaceable = getter('versionReplaceable');\n      WebApp.getRefreshableAssets = getter('refreshableAssets');\n    });\n\n    // When we have a request pending, we want the socket timeout to be long, to\n    // give ourselves a while to serve it, and to allow sockjs long polls to\n    // complete.  On the other hand, we want to close idle sockets relatively\n    // quickly, so that we can shut down relatively promptly but cleanly, without\n    // cutting off anyone's response.\n    WebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n      // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n      req.setTimeout(LONG_SOCKET_TIMEOUT);\n      // Insert our new finish listener to run BEFORE the existing one which removes\n      // the response from the socket.\n      var finishListeners = res.listeners('finish');\n      // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n      // https://github.com/joyent/node/commit/7c9b6070\n      // But it has switched back to 'finish' in Node v4:\n      // https://github.com/nodejs/node/pull/1411\n      res.removeAllListeners('finish');\n      res.on('finish', function () {\n        res.setTimeout(SHORT_SOCKET_TIMEOUT);\n      });\n      _.each(finishListeners, function (l) {\n        res.on('finish', l);\n      });\n    };\n\n    // Will be updated by main before we listen.\n    // Map from client arch to boilerplate object.\n    // Boilerplate object has:\n    //   - func: XXX\n    //   - baseData: XXX\n    var boilerplateByArch = {};\n\n    // Register a callback function that can selectively modify boilerplate\n    // data given arguments (request, data, arch). The key should be a unique\n    // identifier, to prevent accumulating duplicate callbacks from the same\n    // call site over time. Callbacks will be called in the order they were\n    // registered. A callback should return false if it did not make any\n    // changes affecting the boilerplate. Passing null deletes the callback.\n    // Any previous callback registered for this key will be returned.\n    const boilerplateDataCallbacks = Object.create(null);\n    WebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n      const previousCallback = boilerplateDataCallbacks[key];\n      if (typeof callback === 'function') {\n        boilerplateDataCallbacks[key] = callback;\n      } else {\n        assert.strictEqual(callback, null);\n        delete boilerplateDataCallbacks[key];\n      }\n\n      // Return the previous callback in case the new callback needs to call\n      // it; for example, when the new callback is a wrapper for the old.\n      return previousCallback || null;\n    };\n\n    // Given a request (as returned from `categorizeRequest`), return the\n    // boilerplate HTML to serve for that request.\n    //\n    // If a previous Express middleware has rendered content for the head or body,\n    // returns the boilerplate with that content patched in otherwise\n    // memoizes on HTML attributes (used by, eg, appcache) and whether inline\n    // scripts are currently allowed.\n    // XXX so far this function is always called with arch === 'web.browser'\n    function getBoilerplate(request, arch) {\n      return getBoilerplateAsync(request, arch);\n    }\n\n    /**\n     * @summary Takes a runtime configuration object and\n     * returns an encoded runtime string.\n     * @locus Server\n     * @param {Object} rtimeConfig\n     * @returns {String}\n     */\n    WebApp.encodeRuntimeConfig = function (rtimeConfig) {\n      return JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n    };\n\n    /**\n     * @summary Takes an encoded runtime string and returns\n     * a runtime configuration object.\n     * @locus Server\n     * @param {String} rtimeConfigString\n     * @returns {Object}\n     */\n    WebApp.decodeRuntimeConfig = function (rtimeConfigStr) {\n      return JSON.parse(decodeURIComponent(JSON.parse(rtimeConfigStr)));\n    };\n    const runtimeConfig = {\n      // hooks will contain the callback functions\n      // set by the caller to addRuntimeConfigHook\n      hooks: new Hook(),\n      // updateHooks will contain the callback functions\n      // set by the caller to addUpdatedNotifyHook\n      updateHooks: new Hook(),\n      // isUpdatedByArch is an object containing fields for each arch\n      // that this server supports.\n      // - Each field will be true when the server updates the runtimeConfig for that arch.\n      // - When the hook callback is called the update field in the callback object will be\n      // set to isUpdatedByArch[arch].\n      // = isUpdatedyByArch[arch] is reset to false after the callback.\n      // This enables the caller to cache data efficiently so they do not need to\n      // decode & update data on every callback when the runtimeConfig is not changing.\n      isUpdatedByArch: {}\n    };\n\n    /**\n     * @name addRuntimeConfigHookCallback(options)\n     * @locus Server\n     * @isprototype true\n     * @summary Callback for `addRuntimeConfigHook`.\n     *\n     * If the handler returns a _falsy_ value the hook will not\n     * modify the runtime configuration.\n     *\n     * If the handler returns a _String_ the hook will substitute\n     * the string for the encoded configuration string.\n     *\n     * **Warning:** the hook does not check the return value at all it is\n     * the responsibility of the caller to get the formatting correct using\n     * the helper functions.\n     *\n     * `addRuntimeConfigHookCallback` takes only one `Object` argument\n     * with the following fields:\n     * @param {Object} options\n     * @param {String} options.arch The architecture of the client\n     * requesting a new runtime configuration. This can be one of\n     * `web.browser`, `web.browser.legacy` or `web.cordova`.\n     * @param {Object} options.request\n     * A NodeJs [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n     * https://nodejs.org/api/http.html#http_class_http_incomingmessage\n     * `Object` that can be used to get information about the incoming request.\n     * @param {String} options.encodedCurrentConfig The current configuration object\n     * encoded as a string for inclusion in the root html.\n     * @param {Boolean} options.updated `true` if the config for this architecture\n     * has been updated since last called, otherwise `false`. This flag can be used\n     * to cache the decoding/encoding for each architecture.\n     */\n\n    /**\n     * @summary Hook that calls back when the meteor runtime configuration,\n     * `__meteor_runtime_config__` is being sent to any client.\n     *\n     * **returns**: <small>_Object_</small> `{ stop: function, callback: function }`\n     * - `stop` <small>_Function_</small> Call `stop()` to stop getting callbacks.\n     * - `callback` <small>_Function_</small> The passed in `callback`.\n     * @locus Server\n     * @param {addRuntimeConfigHookCallback} callback\n     * See `addRuntimeConfigHookCallback` description.\n     * @returns {Object} {{ stop: function, callback: function }}\n     * Call the returned `stop()` to stop getting callbacks.\n     * The passed in `callback` is returned also.\n     */\n    WebApp.addRuntimeConfigHook = function (callback) {\n      return runtimeConfig.hooks.register(callback);\n    };\n    async function getBoilerplateAsync(request, arch) {\n      let boilerplate = boilerplateByArch[arch];\n      await runtimeConfig.hooks.forEachAsync(async hook => {\n        const meteorRuntimeConfig = await hook({\n          arch,\n          request,\n          encodedCurrentConfig: boilerplate.baseData.meteorRuntimeConfig,\n          updated: runtimeConfig.isUpdatedByArch[arch]\n        });\n        if (!meteorRuntimeConfig) return true;\n        boilerplate.baseData = Object.assign({}, boilerplate.baseData, {\n          meteorRuntimeConfig\n        });\n        return true;\n      });\n      runtimeConfig.isUpdatedByArch[arch] = false;\n      const data = Object.assign({}, boilerplate.baseData, {\n        htmlAttributes: getHtmlAttributes(request)\n      }, _.pick(request, 'dynamicHead', 'dynamicBody'));\n      let madeChanges = false;\n      let promise = Promise.resolve();\n      Object.keys(boilerplateDataCallbacks).forEach(key => {\n        promise = promise.then(() => {\n          const callback = boilerplateDataCallbacks[key];\n          return callback(request, data, arch);\n        }).then(result => {\n          // Callbacks should return false if they did not make any changes.\n          if (result !== false) {\n            madeChanges = true;\n          }\n        });\n      });\n      return promise.then(() => ({\n        stream: boilerplate.toHTMLStream(data),\n        statusCode: data.statusCode,\n        headers: data.headers\n      }));\n    }\n\n    /**\n     * @name addUpdatedNotifyHookCallback(options)\n     * @summary callback handler for `addupdatedNotifyHook`\n     * @isprototype true\n     * @locus Server\n     * @param {Object} options\n     * @param {String} options.arch The architecture that is being updated.\n     * This can be one of `web.browser`, `web.browser.legacy` or `web.cordova`.\n     * @param {Object} options.manifest The new updated manifest object for\n     * this `arch`.\n     * @param {Object} options.runtimeConfig The new updated configuration\n     * object for this `arch`.\n     */\n\n    /**\n     * @summary Hook that runs when the meteor runtime configuration\n     * is updated.  Typically the configuration only changes during development mode.\n     * @locus Server\n     * @param {addUpdatedNotifyHookCallback} handler\n     * The `handler` is called on every change to an `arch` runtime configuration.\n     * See `addUpdatedNotifyHookCallback`.\n     * @returns {Object} {{ stop: function, callback: function }}\n     */\n    WebApp.addUpdatedNotifyHook = function (handler) {\n      return runtimeConfig.updateHooks.register(handler);\n    };\n    WebAppInternals.generateBoilerplateInstance = function (arch, manifest, additionalOptions) {\n      additionalOptions = additionalOptions || {};\n      runtimeConfig.isUpdatedByArch[arch] = true;\n      const rtimeConfig = _objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || {});\n      runtimeConfig.updateHooks.forEach(cb => {\n        cb({\n          arch,\n          manifest,\n          runtimeConfig: rtimeConfig\n        });\n        return true;\n      });\n      const meteorRuntimeConfig = JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n      return new Boilerplate(arch, manifest, Object.assign({\n        pathMapper(itemPath) {\n          return pathJoin(archPath[arch], itemPath);\n        },\n        baseDataExtension: {\n          additionalStaticJs: _.map(additionalStaticJs || [], function (contents, pathname) {\n            return {\n              pathname: pathname,\n              contents: contents\n            };\n          }),\n          // Convert to a JSON string, then get rid of most weird characters, then\n          // wrap in double quotes. (The outermost JSON.stringify really ought to\n          // just be \"wrap in double quotes\" but we use it to be safe.) This might\n          // end up inside a <script> tag so we need to be careful to not include\n          // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n          // https://github.com/meteor/meteor/issues/3730\n          meteorRuntimeConfig,\n          meteorRuntimeHash: sha1(meteorRuntimeConfig),\n          rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n          bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n          sriMode: sriMode,\n          inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n          inline: additionalOptions.inline\n        }\n      }, additionalOptions));\n    };\n\n    // A mapping from url path to architecture (e.g. \"web.browser\") to static\n    // file information with the following fields:\n    // - type: the type of file to be served\n    // - cacheable: optionally, whether the file should be cached or not\n    // - sourceMapUrl: optionally, the url of the source map\n    //\n    // Info also contains one of the following:\n    // - content: the stringified content that should be served at this path\n    // - absolutePath: the absolute path on disk to the file\n\n    // Serve static files from the manifest or added with\n    // `addStaticJs`. Exported for tests.\n    WebAppInternals.staticFilesMiddleware = async function (staticFilesByArch, req, res, next) {\n      var _Meteor$settings$pack3, _Meteor$settings$pack4;\n      var pathname = parseRequest(req).pathname;\n      try {\n        pathname = decodeURIComponent(pathname);\n      } catch (e) {\n        next();\n        return;\n      }\n      var serveStaticJs = function (s) {\n        var _Meteor$settings$pack, _Meteor$settings$pack2;\n        if (req.method === 'GET' || req.method === 'HEAD' || (_Meteor$settings$pack = Meteor.settings.packages) !== null && _Meteor$settings$pack !== void 0 && (_Meteor$settings$pack2 = _Meteor$settings$pack.webapp) !== null && _Meteor$settings$pack2 !== void 0 && _Meteor$settings$pack2.alwaysReturnContent) {\n          res.writeHead(200, {\n            'Content-type': 'application/javascript; charset=UTF-8',\n            'Content-Length': Buffer.byteLength(s)\n          });\n          res.write(s);\n          res.end();\n        } else {\n          const status = req.method === 'OPTIONS' ? 200 : 405;\n          res.writeHead(status, {\n            Allow: 'OPTIONS, GET, HEAD',\n            'Content-Length': '0'\n          });\n          res.end();\n        }\n      };\n      if (_.has(additionalStaticJs, pathname) && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(additionalStaticJs[pathname]);\n        return;\n      }\n      const {\n        arch,\n        path\n      } = WebApp.categorizeRequest(req);\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        next();\n        return;\n      }\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      const program = WebApp.clientPrograms[arch];\n      await program.paused;\n      if (path === '/meteor_runtime_config.js' && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(\"__meteor_runtime_config__ = \".concat(program.meteorRuntimeConfig, \";\"));\n        return;\n      }\n      const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n      if (!info) {\n        next();\n        return;\n      }\n      // \"send\" will handle HEAD & GET requests\n      if (req.method !== 'HEAD' && req.method !== 'GET' && !((_Meteor$settings$pack3 = Meteor.settings.packages) !== null && _Meteor$settings$pack3 !== void 0 && (_Meteor$settings$pack4 = _Meteor$settings$pack3.webapp) !== null && _Meteor$settings$pack4 !== void 0 && _Meteor$settings$pack4.alwaysReturnContent)) {\n        const status = req.method === 'OPTIONS' ? 200 : 405;\n        res.writeHead(status, {\n          Allow: 'OPTIONS, GET, HEAD',\n          'Content-Length': '0'\n        });\n        res.end();\n        return;\n      }\n\n      // We don't need to call pause because, unlike 'static', once we call into\n      // 'send' and yield to the event loop, we never call another handler with\n      // 'next'.\n\n      // Cacheable files are files that should never change. Typically\n      // named by their hash (eg meteor bundled js and css files).\n      // We cache them ~forever (1yr).\n      const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n      if (info.cacheable) {\n        // Since we use req.headers[\"user-agent\"] to determine whether the\n        // client should receive modern or legacy resources, tell the client\n        // to invalidate cached resources when/if its user agent string\n        // changes in the future.\n        res.setHeader('Vary', 'User-Agent');\n      }\n\n      // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n      // understand.  (The SourceMap header is slightly more spec-correct but FF\n      // doesn't understand it.)\n      //\n      // You may also need to enable source maps in Chrome: open dev tools, click\n      // the gear in the bottom right corner, and select \"enable source maps\".\n      if (info.sourceMapUrl) {\n        res.setHeader('X-SourceMap', __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl);\n      }\n      if (info.type === 'js' || info.type === 'dynamic js') {\n        res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n      } else if (info.type === 'css') {\n        res.setHeader('Content-Type', 'text/css; charset=UTF-8');\n      } else if (info.type === 'json') {\n        res.setHeader('Content-Type', 'application/json; charset=UTF-8');\n      }\n      if (info.hash) {\n        res.setHeader('ETag', '\"' + info.hash + '\"');\n      }\n      if (info.content) {\n        res.setHeader('Content-Length', Buffer.byteLength(info.content));\n        res.write(info.content);\n        res.end();\n      } else {\n        send(req, info.absolutePath, {\n          maxage: maxAge,\n          dotfiles: 'allow',\n          // if we specified a dotfile in the manifest, serve it\n          lastModified: false // don't set last-modified based on the file date\n        }).on('error', function (err) {\n          Log.error('Error serving static file ' + err);\n          res.writeHead(500);\n          res.end();\n        }).on('directory', function () {\n          Log.error('Unexpected directory ' + info.absolutePath);\n          res.writeHead(500);\n          res.end();\n        }).pipe(res);\n      }\n    };\n    function getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        return null;\n      }\n\n      // Get a list of all available static file architectures, with arch\n      // first in the list if it exists.\n      const staticArchList = Object.keys(staticFilesByArch);\n      const archIndex = staticArchList.indexOf(arch);\n      if (archIndex > 0) {\n        staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n      }\n      let info = null;\n      staticArchList.some(arch => {\n        const staticFiles = staticFilesByArch[arch];\n        function finalize(path) {\n          info = staticFiles[path];\n          // Sometimes we register a lazy function instead of actual data in\n          // the staticFiles manifest.\n          if (typeof info === 'function') {\n            info = staticFiles[path] = info();\n          }\n          return info;\n        }\n\n        // If staticFiles contains originalPath with the arch inferred above,\n        // use that information.\n        if (hasOwn.call(staticFiles, originalPath)) {\n          return finalize(originalPath);\n        }\n\n        // If categorizeRequest returned an alternate path, try that instead.\n        if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n          return finalize(path);\n        }\n      });\n      return info;\n    }\n\n    // Parse the passed in port value. Return the port as-is if it's a String\n    // (e.g. a Windows Server style named pipe), otherwise return the port as an\n    // integer.\n    //\n    // DEPRECATED: Direct use of this function is not recommended; it is no\n    // longer used internally, and will be removed in a future release.\n    WebAppInternals.parsePort = port => {\n      let parsedPort = parseInt(port);\n      if (Number.isNaN(parsedPort)) {\n        parsedPort = port;\n      }\n      return parsedPort;\n    };\n    onMessage('webapp-pause-client', async _ref => {\n      let {\n        arch\n      } = _ref;\n      await WebAppInternals.pauseClient(arch);\n    });\n    onMessage('webapp-reload-client', async _ref2 => {\n      let {\n        arch\n      } = _ref2;\n      await WebAppInternals.generateClientProgram(arch);\n    });\n    async function runWebAppServer() {\n      var shuttingDown = false;\n      var syncQueue = new Meteor._AsynchronousQueue();\n      var getItemPathname = function (itemUrl) {\n        return decodeURIComponent(parseUrl(itemUrl).pathname);\n      };\n      WebAppInternals.reloadClientPrograms = async function () {\n        await syncQueue.runTask(function () {\n          const staticFilesByArch = Object.create(null);\n          const {\n            configJson\n          } = __meteor_bootstrap__;\n          const clientArchs = configJson.clientArchs || Object.keys(configJson.clientPaths);\n          try {\n            clientArchs.forEach(arch => {\n              generateClientProgram(arch, staticFilesByArch);\n            });\n            WebAppInternals.staticFilesByArch = staticFilesByArch;\n          } catch (e) {\n            Log.error('Error reloading the client program: ' + e.stack);\n            process.exit(1);\n          }\n        });\n      };\n\n      // Pause any incoming requests and make them wait for the program to be\n      // unpaused the next time generateClientProgram(arch) is called.\n      WebAppInternals.pauseClient = async function (arch) {\n        await syncQueue.runTask(() => {\n          const program = WebApp.clientPrograms[arch];\n          const {\n            unpause\n          } = program;\n          program.paused = new Promise(resolve => {\n            if (typeof unpause === 'function') {\n              // If there happens to be an existing program.unpause function,\n              // compose it with the resolve function.\n              program.unpause = function () {\n                unpause();\n                resolve();\n              };\n            } else {\n              program.unpause = resolve;\n            }\n          });\n        });\n      };\n      WebAppInternals.generateClientProgram = async function (arch) {\n        await syncQueue.runTask(() => generateClientProgram(arch));\n      };\n      function generateClientProgram(arch) {\n        let staticFilesByArch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebAppInternals.staticFilesByArch;\n        const clientDir = pathJoin(pathDirname(__meteor_bootstrap__.serverDir), arch);\n\n        // read the control for the client we'll be serving up\n        const programJsonPath = pathJoin(clientDir, 'program.json');\n        let programJson;\n        try {\n          programJson = JSON.parse(readFileSync(programJsonPath));\n        } catch (e) {\n          if (e.code === 'ENOENT') return;\n          throw e;\n        }\n        if (programJson.format !== 'web-program-pre1') {\n          throw new Error('Unsupported format for client assets: ' + JSON.stringify(programJson.format));\n        }\n        if (!programJsonPath || !clientDir || !programJson) {\n          throw new Error('Client config file not parsed.');\n        }\n        archPath[arch] = clientDir;\n        const staticFiles = staticFilesByArch[arch] = Object.create(null);\n        const {\n          manifest\n        } = programJson;\n        manifest.forEach(item => {\n          if (item.url && item.where === 'client') {\n            staticFiles[getItemPathname(item.url)] = {\n              absolutePath: pathJoin(clientDir, item.path),\n              cacheable: item.cacheable,\n              hash: item.hash,\n              // Link from source to its map\n              sourceMapUrl: item.sourceMapUrl,\n              type: item.type\n            };\n            if (item.sourceMap) {\n              // Serve the source map too, under the specified URL. We assume\n              // all source maps are cacheable.\n              staticFiles[getItemPathname(item.sourceMapUrl)] = {\n                absolutePath: pathJoin(clientDir, item.sourceMap),\n                cacheable: true\n              };\n            }\n          }\n        });\n        const {\n          PUBLIC_SETTINGS\n        } = __meteor_runtime_config__;\n        const configOverrides = {\n          PUBLIC_SETTINGS\n        };\n        const oldProgram = WebApp.clientPrograms[arch];\n        const newProgram = WebApp.clientPrograms[arch] = {\n          format: 'web-program-pre1',\n          manifest: manifest,\n          // Use arrow functions so that these versions can be lazily\n          // calculated later, and so that they will not be included in the\n          // staticFiles[manifestUrl].content string below.\n          //\n          // Note: these version calculations must be kept in agreement with\n          // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n          // code push will reload Cordova apps unnecessarily.\n          version: () => WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n          versionRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type === 'css', configOverrides),\n          versionNonRefreshable: () => WebAppHashing.calculateClientHash(manifest, (type, replaceable) => type !== 'css' && !replaceable, configOverrides),\n          versionReplaceable: () => WebAppHashing.calculateClientHash(manifest, (_type, replaceable) => replaceable, configOverrides),\n          cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n          PUBLIC_SETTINGS,\n          hmrVersion: programJson.hmrVersion\n        };\n\n        // Expose program details as a string reachable via the following URL.\n        const manifestUrlPrefix = '/__' + arch.replace(/^web\\./, '');\n        const manifestUrl = manifestUrlPrefix + getItemPathname('/manifest.json');\n        staticFiles[manifestUrl] = () => {\n          if (Package.autoupdate) {\n            const {\n              AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion\n            } = process.env;\n            if (AUTOUPDATE_VERSION) {\n              newProgram.version = AUTOUPDATE_VERSION;\n            }\n          }\n          if (typeof newProgram.version === 'function') {\n            newProgram.version = newProgram.version();\n          }\n          return {\n            content: JSON.stringify(newProgram),\n            cacheable: false,\n            hash: newProgram.version,\n            type: 'json'\n          };\n        };\n        generateBoilerplateForArch(arch);\n\n        // If there are any requests waiting on oldProgram.paused, let them\n        // continue now (using the new program).\n        if (oldProgram && oldProgram.paused) {\n          oldProgram.unpause();\n        }\n      }\n      const defaultOptionsForArch = {\n        'web.cordova': {\n          runtimeConfigOverrides: {\n            // XXX We use absoluteUrl() here so that we serve https://\n            // URLs to cordova clients if force-ssl is in use. If we were\n            // to use __meteor_runtime_config__.ROOT_URL instead of\n            // absoluteUrl(), then Cordova clients would immediately get a\n            // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n            // http://example.meteor.com. This breaks the app, because\n            // force-ssl doesn't serve CORS headers on 302\n            // redirects. (Plus it's undesirable to have clients\n            // connecting to http://example.meteor.com when force-ssl is\n            // in use.)\n            DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n            ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl()\n          }\n        },\n        'web.browser': {\n          runtimeConfigOverrides: {\n            isModern: true\n          }\n        },\n        'web.browser.legacy': {\n          runtimeConfigOverrides: {\n            isModern: false\n          }\n        }\n      };\n      WebAppInternals.generateBoilerplate = async function () {\n        // This boilerplate will be served to the mobile devices when used with\n        // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n        // the device's server, it is important to set the DDP url to the actual\n        // Meteor server accepting DDP connections and not the device's file server.\n        await syncQueue.runTask(function () {\n          Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n        });\n      };\n      function generateBoilerplateForArch(arch) {\n        const program = WebApp.clientPrograms[arch];\n        const additionalOptions = defaultOptionsForArch[arch] || {};\n        const {\n          baseData\n        } = boilerplateByArch[arch] = WebAppInternals.generateBoilerplateInstance(arch, program.manifest, additionalOptions);\n        // We need the runtime config with overrides for meteor_runtime_config.js:\n        program.meteorRuntimeConfig = JSON.stringify(_objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || null));\n        program.refreshableAssets = baseData.css.map(file => ({\n          url: bundledJsCssUrlRewriteHook(file.url)\n        }));\n      }\n      await WebAppInternals.reloadClientPrograms();\n\n      // webserver\n      var app = createExpressApp();\n\n      // Packages and apps can add handlers that run before any other Meteor\n      // handlers via WebApp.rawExpressHandlers.\n      var rawExpressHandlers = createExpressApp();\n      app.use(rawExpressHandlers);\n\n      // Auto-compress any json, javascript, or text.\n      app.use(compress({\n        filter: shouldCompress\n      }));\n\n      // parse cookies into an object\n      app.use(cookieParser());\n\n      // We're not a proxy; reject (without crashing) attempts to treat us like\n      // one. (See #1212.)\n      app.use(function (req, res, next) {\n        if (RoutePolicy.isValidUrl(req.url)) {\n          next();\n          return;\n        }\n        res.writeHead(400);\n        res.write('Not a proxy');\n        res.end();\n      });\n\n      // Parse the query string into res.query. Used by oauth_server, but it's\n      // generally pretty handy..\n      //\n      // Do this before the next middleware destroys req.url if a path prefix\n      // is set to close #10111.\n      app.use(function (request, response, next) {\n        request.query = qs.parse(parseUrl(request.url).query);\n        next();\n      });\n      function getPathParts(path) {\n        const parts = path.split('/');\n        while (parts[0] === '') parts.shift();\n        return parts;\n      }\n      function isPrefixOf(prefix, array) {\n        return prefix.length <= array.length && prefix.every((part, i) => part === array[i]);\n      }\n\n      // Strip off the path prefix, if it exists.\n      app.use(function (request, response, next) {\n        const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n        const {\n          pathname,\n          search\n        } = parseUrl(request.url);\n\n        // check if the path in the url starts with the path prefix\n        if (pathPrefix) {\n          const prefixParts = getPathParts(pathPrefix);\n          const pathParts = getPathParts(pathname);\n          if (isPrefixOf(prefixParts, pathParts)) {\n            request.url = '/' + pathParts.slice(prefixParts.length).join('/');\n            if (search) {\n              request.url += search;\n            }\n            return next();\n          }\n        }\n        if (pathname === '/favicon.ico' || pathname === '/robots.txt') {\n          return next();\n        }\n        if (pathPrefix) {\n          response.writeHead(404);\n          response.write('Unknown path');\n          response.end();\n          return;\n        }\n        next();\n      });\n\n      // Serve static files from the manifest.\n      // This is inspired by the 'static' middleware.\n      app.use(function (req, res, next) {\n        // console.log(String(arguments.callee));\n        WebAppInternals.staticFilesMiddleware(WebAppInternals.staticFilesByArch, req, res, next);\n      });\n\n      // Core Meteor packages like dynamic-import can add handlers before\n      // other handlers added by package and application code.\n      app.use(WebAppInternals.meteorInternalHandlers = createExpressApp());\n\n      /**\n       * @name expressHandlersCallback(req, res, next)\n       * @locus Server\n       * @isprototype true\n       * @summary callback handler for `WebApp.expressHandlers`\n       * @param {Object} req\n       * a Node.js\n       * [IncomingMessage](https://nodejs.org/api/http.html#class-httpincomingmessage)\n       * object with some extra properties. This argument can be used\n       *  to get information about the incoming request.\n       * @param {Object} res\n       * a Node.js\n       * [ServerResponse](https://nodejs.org/api/http.html#class-httpserverresponse)\n       * object. Use this to write data that should be sent in response to the\n       * request, and call `res.end()` when you are done.\n       * @param {Function} next\n       * Calling this function will pass on the handling of\n       * this request to the next relevant handler.\n       *\n       */\n\n      /**\n       * @method handlers\n       * @memberof WebApp\n       * @locus Server\n       * @summary Register a handler for all HTTP requests.\n       * @param {String} [path]\n       * This handler will only be called on paths that match\n       * this string. The match has to border on a `/` or a `.`.\n       *\n       * For example, `/hello` will match `/hello/world` and\n       * `/hello.world`, but not `/hello_world`.\n       * @param {expressHandlersCallback} handler\n       * A handler function that will be called on HTTP requests.\n       * See `expressHandlersCallback`\n       *\n       */\n      // Packages and apps can add handlers to this via WebApp.expressHandlers.\n      // They are inserted before our default handler.\n      var packageAndAppHandlers = createExpressApp();\n      app.use(packageAndAppHandlers);\n      let suppressExpressErrors = false;\n      // Express knows it is an error handler because it has 4 arguments instead of\n      // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n      // inside packageAndAppHandlers.)\n      app.use(function (err, req, res, next) {\n        if (!err || !suppressExpressErrors || !req.headers['x-suppress-error']) {\n          next(err);\n          return;\n        }\n        res.writeHead(err.status, {\n          'Content-Type': 'text/plain'\n        });\n        res.end('An error message');\n      });\n      app.use(async function (req, res, next) {\n        var _Meteor$settings$pack5, _Meteor$settings$pack6;\n        if (!appUrl(req.url)) {\n          return next();\n        } else if (req.method !== 'HEAD' && req.method !== 'GET' && !((_Meteor$settings$pack5 = Meteor.settings.packages) !== null && _Meteor$settings$pack5 !== void 0 && (_Meteor$settings$pack6 = _Meteor$settings$pack5.webapp) !== null && _Meteor$settings$pack6 !== void 0 && _Meteor$settings$pack6.alwaysReturnContent)) {\n          const status = req.method === 'OPTIONS' ? 200 : 405;\n          res.writeHead(status, {\n            Allow: 'OPTIONS, GET, HEAD',\n            'Content-Length': '0'\n          });\n          res.end();\n        } else {\n          var headers = {\n            'Content-Type': 'text/html; charset=utf-8'\n          };\n          if (shuttingDown) {\n            headers['Connection'] = 'Close';\n          }\n          var request = WebApp.categorizeRequest(req);\n          if (request.url.query && request.url.query['meteor_css_resource']) {\n            // In this case, we're requesting a CSS resource in the meteor-specific\n            // way, but we don't have it.  Serve a static css file that indicates that\n            // we didn't have it, so we can detect that and refresh.  Make sure\n            // that any proxies or CDNs don't cache this error!  (Normally proxies\n            // or CDNs are smart enough not to cache error pages, but in order to\n            // make this hack work, we need to return the CSS file as a 200, which\n            // would otherwise be cached.)\n            headers['Content-Type'] = 'text/css; charset=utf-8';\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(200, headers);\n            res.write('.meteor-css-not-found-error { width: 0px;}');\n            res.end();\n            return;\n          }\n          if (request.url.query && request.url.query['meteor_js_resource']) {\n            // Similarly, we're requesting a JS resource that we don't have.\n            // Serve an uncached 404. (We can't use the same hack we use for CSS,\n            // because actually acting on that hack requires us to have the JS\n            // already!)\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end('404 Not Found');\n            return;\n          }\n          if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n            // When downloading files during a Cordova hot code push, we need\n            // to detect if a file is not available instead of inadvertently\n            // downloading the default index page.\n            // So similar to the situation above, we serve an uncached 404.\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end('404 Not Found');\n            return;\n          }\n          const {\n            arch\n          } = request;\n          assert.strictEqual(typeof arch, 'string', {\n            arch\n          });\n          if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n            // We could come here in case we run with some architectures excluded\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            if (Meteor.isDevelopment) {\n              res.end(\"No client program found for the \".concat(arch, \" architecture.\"));\n            } else {\n              // Safety net, but this branch should not be possible.\n              res.end('404 Not Found');\n            }\n            return;\n          }\n\n          // If pauseClient(arch) has been called, program.paused will be a\n          // Promise that will be resolved when the program is unpaused.\n          await WebApp.clientPrograms[arch].paused;\n          return getBoilerplateAsync(request, arch).then(_ref3 => {\n            let {\n              stream,\n              statusCode,\n              headers: newHeaders\n            } = _ref3;\n            if (!statusCode) {\n              statusCode = res.statusCode ? res.statusCode : 200;\n            }\n            if (newHeaders) {\n              Object.assign(headers, newHeaders);\n            }\n            res.writeHead(statusCode, headers);\n            stream.pipe(res, {\n              // End the response when the stream ends.\n              end: true\n            });\n          }).catch(error => {\n            Log.error('Error running template: ' + error.stack);\n            res.writeHead(500, headers);\n            res.end();\n          });\n        }\n      });\n\n      // Return 404 by default, if no other handlers serve this URL.\n      app.use(function (req, res) {\n        res.writeHead(404);\n        res.end();\n      });\n      var httpServer = createServer(app);\n      var onListeningCallbacks = [];\n\n      // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n      // there's an outstanding request, give it a higher timeout instead (to avoid\n      // killing long-polling requests)\n      httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n      // Do this here, and then also in livedata/stream_server.js, because\n      // stream_server.js kills all the current request handlers when installing its\n      // own.\n      httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n      // If the client gave us a bad request, tell it instead of just closing the\n      // socket. This lets load balancers in front of us differentiate between \"a\n      // server is randomly closing sockets for no reason\" and \"client sent a bad\n      // request\".\n      //\n      // This will only work on Node 6; Node 4 destroys the socket before calling\n      // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n      httpServer.on('clientError', (err, socket) => {\n        // Pre-Node-6, do nothing.\n        if (socket.destroyed) {\n          return;\n        }\n        if (err.message === 'Parse Error') {\n          socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n        } else {\n          // For other errors, use the default behavior as if we had no clientError\n          // handler.\n          socket.destroy(err);\n        }\n      });\n      const suppressErrors = function () {\n        suppressExpressErrors = true;\n      };\n      let warnedAboutConnectUsage = false;\n\n      // start up app\n      _.extend(WebApp, {\n        connectHandlers: packageAndAppHandlers,\n        handlers: packageAndAppHandlers,\n        rawConnectHandlers: rawExpressHandlers,\n        rawHandlers: rawExpressHandlers,\n        httpServer: httpServer,\n        expressApp: app,\n        // For testing.\n        suppressConnectErrors: () => {\n          if (!warnedAboutConnectUsage) {\n            Meteor._debug(\"WebApp.suppressConnectErrors has been renamed to Meteor._suppressExpressErrors and it should be used only in tests.\");\n            warnedAboutConnectUsage = true;\n          }\n          suppressErrors();\n        },\n        _suppressExpressErrors: suppressErrors,\n        onListening: function (f) {\n          if (onListeningCallbacks) onListeningCallbacks.push(f);else f();\n        },\n        // This can be overridden by users who want to modify how listening works\n        // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n        startListening: function (httpServer, listenOptions, cb) {\n          httpServer.listen(listenOptions, cb);\n        }\n      });\n\n      /**\n      * @name main\n      * @locus Server\n      * @summary Starts the HTTP server.\n      *  If `UNIX_SOCKET_PATH` is present Meteor's HTTP server will use that socket file for inter-process communication, instead of TCP.\n      * If you choose to not include webapp package in your application this method still must be defined for your Meteor application to work.\n      */\n      // Let the rest of the packages (and Meteor.startup hooks) insert Express\n      // middlewares and update __meteor_runtime_config__, then keep going to set up\n      // actually serving HTML.\n      exports.main = async argv => {\n        await WebAppInternals.generateBoilerplate();\n        const startHttpServer = listenOptions => {\n          WebApp.startListening((argv === null || argv === void 0 ? void 0 : argv.httpServer) || httpServer, listenOptions, Meteor.bindEnvironment(() => {\n            if (process.env.METEOR_PRINT_ON_LISTEN) {\n              console.log('LISTENING');\n            }\n            const callbacks = onListeningCallbacks;\n            onListeningCallbacks = null;\n            callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(callback => {\n              callback();\n            });\n          }, e => {\n            console.error('Error listening:', e);\n            console.error(e && e.stack);\n          }));\n        };\n        let localPort = process.env.PORT || 0;\n        let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n        if (unixSocketPath) {\n          if (cluster.isWorker) {\n            const workerName = cluster.worker.process.env.name || cluster.worker.id;\n            unixSocketPath += '.' + workerName + '.sock';\n          }\n          // Start the HTTP server using a socket file.\n          removeExistingSocketFile(unixSocketPath);\n          startHttpServer({\n            path: unixSocketPath\n          });\n          const unixSocketPermissions = (process.env.UNIX_SOCKET_PERMISSIONS || '').trim();\n          if (unixSocketPermissions) {\n            if (/^[0-7]{3}$/.test(unixSocketPermissions)) {\n              chmodSync(unixSocketPath, parseInt(unixSocketPermissions, 8));\n            } else {\n              throw new Error('Invalid UNIX_SOCKET_PERMISSIONS specified');\n            }\n          }\n          const unixSocketGroup = (process.env.UNIX_SOCKET_GROUP || '').trim();\n          if (unixSocketGroup) {\n            const unixSocketGroupInfo = getGroupInfo(unixSocketGroup);\n            if (unixSocketGroupInfo === null) {\n              throw new Error('Invalid UNIX_SOCKET_GROUP name specified');\n            }\n            chownSync(unixSocketPath, userInfo().uid, unixSocketGroupInfo.gid);\n          }\n          registerSocketFileCleanup(unixSocketPath);\n        } else {\n          localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n          if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n            // Start the HTTP server using Windows Server style named pipe.\n            startHttpServer({\n              path: localPort\n            });\n          } else if (typeof localPort === 'number') {\n            // Start the HTTP server using TCP.\n            startHttpServer({\n              port: localPort,\n              host: process.env.BIND_IP || '0.0.0.0'\n            });\n          } else {\n            throw new Error('Invalid PORT specified');\n          }\n        }\n        return 'DAEMON';\n      };\n    }\n    const isGetentAvailable = () => {\n      try {\n        execSync('which getent');\n        return true;\n      } catch (_unused) {\n        return false;\n      }\n    };\n    const getGroupInfoUsingGetent = groupName => {\n      try {\n        const stdout = execSync(\"getent group \".concat(groupName), {\n          encoding: 'utf8'\n        });\n        if (!stdout) return null;\n        const [name,, gid] = stdout.trim().split(':');\n        if (name == null || gid == null) return null;\n        return {\n          name,\n          gid: Number(gid)\n        };\n      } catch (error) {\n        return null;\n      }\n    };\n    const getGroupInfoFromFile = groupName => {\n      try {\n        const data = readFileSync('/etc/group', 'utf8');\n        const groupLine = data.trim().split('\\n').find(line => line.startsWith(\"\".concat(groupName, \":\")));\n        if (!groupLine) return null;\n        const [name,, gid] = groupLine.trim().split(':');\n        if (name == null || gid == null) return null;\n        return {\n          name,\n          gid: Number(gid)\n        };\n      } catch (error) {\n        return null;\n      }\n    };\n    const getGroupInfo = groupName => {\n      let groupInfo = getGroupInfoFromFile(groupName);\n      if (!groupInfo && isGetentAvailable()) {\n        groupInfo = getGroupInfoUsingGetent(groupName);\n      }\n      return groupInfo;\n    };\n    var inlineScriptsAllowed = true;\n    WebAppInternals.inlineScriptsAllowed = function () {\n      return inlineScriptsAllowed;\n    };\n    WebAppInternals.setInlineScriptsAllowed = async function (value) {\n      inlineScriptsAllowed = value;\n      await WebAppInternals.generateBoilerplate();\n    };\n    var sriMode;\n    WebAppInternals.enableSubresourceIntegrity = async function () {\n      let use_credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n      await WebAppInternals.generateBoilerplate();\n    };\n    WebAppInternals.setBundledJsCssUrlRewriteHook = async function (hookFn) {\n      bundledJsCssUrlRewriteHook = hookFn;\n      await WebAppInternals.generateBoilerplate();\n    };\n    WebAppInternals.setBundledJsCssPrefix = async function (prefix) {\n      var self = this;\n      await self.setBundledJsCssUrlRewriteHook(function (url) {\n        return prefix + url;\n      });\n    };\n\n    // Packages can call `WebAppInternals.addStaticJs` to specify static\n    // JavaScript to be included in the app. This static JS will be inlined,\n    // unless inline scripts have been disabled, in which case it will be\n    // served under `/<sha1 of contents>`.\n    var additionalStaticJs = {};\n    WebAppInternals.addStaticJs = function (contents) {\n      additionalStaticJs['/' + sha1(contents) + '.js'] = contents;\n    };\n\n    // Exported for tests\n    WebAppInternals.getBoilerplate = getBoilerplate;\n    WebAppInternals.additionalStaticJs = additionalStaticJs;\n    await runWebAppServer();\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: true\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"socket_file.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/webapp/socket_file.js                                                                           //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      removeExistingSocketFile: () => removeExistingSocketFile,\n      registerSocketFileCleanup: () => registerSocketFileCleanup\n    });\n    let statSync, unlinkSync, existsSync;\n    module.link(\"fs\", {\n      statSync(v) {\n        statSync = v;\n      },\n      unlinkSync(v) {\n        unlinkSync = v;\n      },\n      existsSync(v) {\n        existsSync = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const removeExistingSocketFile = socketPath => {\n      try {\n        if (statSync(socketPath).isSocket()) {\n          // Since a new socket file will be created, remove the existing\n          // file.\n          unlinkSync(socketPath);\n        } else {\n          throw new Error(\"An existing file was found at \\\"\".concat(socketPath, \"\\\" and it is not \") + 'a socket file. Please confirm PORT is pointing to valid and ' + 'un-used socket file path.');\n        }\n      } catch (error) {\n        // If there is no existing socket file to cleanup, great, we'll\n        // continue normally. If the caught exception represents any other\n        // issue, re-throw.\n        if (error.code !== 'ENOENT') {\n          throw error;\n        }\n      }\n    };\n    const registerSocketFileCleanup = function (socketPath) {\n      let eventEmitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n      ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n        eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n          if (existsSync(socketPath)) {\n            unlinkSync(socketPath);\n          }\n        }));\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"node_modules\":{\"express\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/express/package.json                                             //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"express\",\n  \"version\": \"4.21.0\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/express/index.js                                                 //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"compression\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/compression/package.json                                         //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"compression\",\n  \"version\": \"1.7.4\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/compression/index.js                                             //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cookie-parser\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/cookie-parser/package.json                                       //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"cookie-parser\",\n  \"version\": \"1.4.6\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/cookie-parser/index.js                                           //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"qs\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/qs/package.json                                                  //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"qs\",\n  \"version\": \"6.13.0\",\n  \"main\": \"lib/index.js\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/qs/lib/index.js                                                  //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"parseurl\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/parseurl/package.json                                            //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"parseurl\",\n  \"version\": \"1.3.3\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/parseurl/index.js                                                //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"useragent\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/useragent/package.json                                           //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"useragent\",\n  \"version\": \"2.3.0\",\n  \"main\": \"./index.js\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/useragent/index.js                                               //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"send\":{\"package.json\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/send/package.json                                                //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.exports = {\n  \"name\": \"send\",\n  \"version\": \"1.1.0\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// node_modules/meteor/webapp/node_modules/send/index.js                                                    //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nmodule.useNode();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  export: function () { return {\n      WebApp: WebApp,\n      WebAppInternals: WebAppInternals,\n      main: main\n    };},\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/webapp/webapp_server.js\"\n  ],\n  mainModulePath: \"/node_modules/meteor/webapp/webapp_server.js\"\n}});\n","servePath":"/packages/webapp.js","sourceMap":{"version":3,"sources":["packages/webapp/webapp_server.js","packages/webapp/socket_file.js"],"names":["_objectSpread","module1","link","default","v","export","WebApp","WebAppInternals","getGroupInfo","assert","readFileSync","chmodSync","chownSync","createServer","userInfo","pathJoin","pathDirname","join","dirname","parseUrl","parse","createHash","express","compress","cookieParser","qs","parseRequest","lookupUserAgent","lookup","isModern","send","removeExistingSocketFile","registerSocketFileCleanup","cluster","execSync","onMessage","__reifyWaitForDeps__","SHORT_SOCKET_TIMEOUT","LONG_SOCKET_TIMEOUT","createExpressApp","app","set","hasOwn","Object","prototype","hasOwnProperty","NpmModules","version","Npm","require","module","defaultArch","clientPrograms","archPath","bundledJsCssUrlRewriteHook","url","bundledPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","sha1","contents","hash","update","digest","shouldCompress","req","res","headers","filter","camelCase","name","parts","split","toLowerCase","i","length","charAt","toUpperCase","substr","identifyBrowser","userAgentString","userAgent","family","major","minor","patch","categorizeRequest","browser","arch","modern","path","pathname","categorized","dynamicHead","dynamicBody","cookies","pathParts","archKey","startsWith","archCleaned","slice","call","splice","assign","preferredArchOrder","htmlAttributeHooks","getHtmlAttributes","request","combinedAttributes","_","each","hook","attributes","Error","extend","addHtmlAttributeHook","push","appUrl","RoutePolicy","classify","Meteor","startup","getter","key","program","value","calculateClientHash","clientHash","calculateClientHashRefreshable","calculateClientHashNonRefreshable","calculateClientHashReplaceable","getRefreshableAssets","_timeoutAdjustmentRequestCallback","setTimeout","finishListeners","listeners","removeAllListeners","on","l","boilerplateByArch","boilerplateDataCallbacks","create","registerBoilerplateDataCallback","callback","previousCallback","strictEqual","getBoilerplate","getBoilerplateAsync","encodeRuntimeConfig","rtimeConfig","JSON","stringify","encodeURIComponent","decodeRuntimeConfig","rtimeConfigStr","decodeURIComponent","runtimeConfig","hooks","Hook","updateHooks","isUpdatedByArch","addRuntimeConfigHook","register","boilerplate","forEachAsync","meteorRuntimeConfig","encodedCurrentConfig","baseData","updated","data","htmlAttributes","pick","madeChanges","promise","Promise","resolve","keys","forEach","then","result","stream","toHTMLStream","statusCode","addUpdatedNotifyHook","handler","generateBoilerplateInstance","manifest","additionalOptions","runtimeConfigOverrides","cb","Boilerplate","pathMapper","itemPath","baseDataExtension","additionalStaticJs","map","meteorRuntimeHash","rootUrlPathPrefix","sriMode","inlineScriptsAllowed","inline","staticFilesMiddleware","staticFilesByArch","next","_Meteor$settings$pack3","_Meteor$settings$pack4","e","serveStaticJs","s","_Meteor$settings$pack","_Meteor$settings$pack2","method","settings","packages","webapp","alwaysReturnContent","writeHead","Buffer","byteLength","write","end","status","Allow","has","paused","concat","info","getStaticFileInfo","maxAge","cacheable","setHeader","sourceMapUrl","type","content","absolutePath","maxage","dotfiles","lastModified","err","Log","error","pipe","originalPath","staticArchList","archIndex","indexOf","unshift","some","staticFiles","finalize","parsePort","port","parsedPort","parseInt","Number","isNaN","_ref","pauseClient","_ref2","generateClientProgram","runWebAppServer","shuttingDown","syncQueue","_AsynchronousQueue","getItemPathname","itemUrl","reloadClientPrograms","runTask","configJson","__meteor_bootstrap__","clientArchs","clientPaths","stack","process","exit","unpause","arguments","undefined","clientDir","serverDir","programJsonPath","programJson","code","format","item","where","sourceMap","PUBLIC_SETTINGS","configOverrides","oldProgram","newProgram","WebAppHashing","versionRefreshable","versionNonRefreshable","replaceable","versionReplaceable","_type","cordovaCompatibilityVersions","hmrVersion","manifestUrlPrefix","replace","manifestUrl","Package","autoupdate","AUTOUPDATE_VERSION","Autoupdate","autoupdateVersion","env","generateBoilerplateForArch","defaultOptionsForArch","DDP_DEFAULT_CONNECTION_URL","MOBILE_DDP_URL","absoluteUrl","ROOT_URL","MOBILE_ROOT_URL","generateBoilerplate","refreshableAssets","css","file","rawExpressHandlers","use","isValidUrl","response","query","getPathParts","shift","isPrefixOf","prefix","array","every","part","pathPrefix","search","prefixParts","meteorInternalHandlers","packageAndAppHandlers","suppressExpressErrors","_Meteor$settings$pack5","_Meteor$settings$pack6","isDevelopment","_ref3","newHeaders","catch","httpServer","onListeningCallbacks","socket","destroyed","message","destroy","suppressErrors","warnedAboutConnectUsage","connectHandlers","handlers","rawConnectHandlers","rawHandlers","expressApp","suppressConnectErrors","_debug","_suppressExpressErrors","onListening","f","startListening","listenOptions","listen","exports","main","argv","startHttpServer","bindEnvironment","METEOR_PRINT_ON_LISTEN","console","log","callbacks","localPort","PORT","unixSocketPath","UNIX_SOCKET_PATH","isWorker","workerName","worker","id","unixSocketPermissions","UNIX_SOCKET_PERMISSIONS","trim","test","unixSocketGroup","UNIX_SOCKET_GROUP","unixSocketGroupInfo","uid","gid","host","BIND_IP","isGetentAvailable","_unused","getGroupInfoUsingGetent","groupName","stdout","encoding","getGroupInfoFromFile","groupLine","find","line","groupInfo","setInlineScriptsAllowed","enableSubresourceIntegrity","use_credentials","setBundledJsCssUrlRewriteHook","hookFn","setBundledJsCssPrefix","self","addStaticJs","__reify_async_result__","_reifyError","async","statSync","unlinkSync","existsSync","socketPath","isSocket","eventEmitter","signal"],"mappings":"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MACA,OAAOqB,gBAAgB,IAAI,IAAI;IACjC,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASE,cAAcA,CAACvC,OAAO,EAAEnB,IAAI,EAAE;MACrC,OAAO2D,mBAAmB,CAACxC,OAAO,EAAEnB,IAAI,CAAC;IAC3C;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;IACAlF,MAAM,CAAC8I,mBAAmB,GAAG,UAASC,WAAW,EAAE;MACjD,OAAOC,IAAI,CAACC,SAAS,CAACC,kBAAkB,CAACF,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC,CAAC,CAAC;IACxE,CAAC;;IAED;AACA;AACA;AACA;AACA;AACA;AACA;IACA/I,MAAM,CAACmJ,mBAAmB,GAAG,UAASC,cAAc,EAAE;MACpD,OAAOJ,IAAI,CAAClI,KAAK,CAACuI,kBAAkB,CAACL,IAAI,CAAClI,KAAK,CAACsI,cAAc,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,MAAME,aAAa,GAAG;MACpB;MACA;MACAC,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC;MACjB;MACA;MACAC,WAAW,EAAE,IAAID,IAAI,CAAC,CAAC;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAE,eAAe,EAAE,CAAC;IACpB,CAAC;;IAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA1J,MAAM,CAAC2J,oBAAoB,GAAG,UAASlB,QAAQ,EAAE;MAC/C,OAAOa,aAAa,CAACC,KAAK,CAACK,QAAQ,CAACnB,QAAQ,CAAC;IAC/C,CAAC;IAED,eAAeI,mBAAmBA,CAACxC,OAAO,EAAEnB,IAAI,EAAE;MAChD,IAAI2E,WAAW,GAAGxB,iBAAiB,CAACnD,IAAI,CAAC;MACzC,MAAMoE,aAAa,CAACC,KAAK,CAACO,YAAY,CAAC,MAAMrD,IAAI,IAAI;QACnD,MAAMsD,mBAAmB,GAAG,MAAMtD,IAAI,CAAC;UACrCvB,IAAI;UACJmB,OAAO;UACP2D,oBAAoB,EAAEH,WAAW,CAACI,QAAQ,CAACF,mBAAmB;UAC9DG,OAAO,EAAEZ,aAAa,CAACI,eAAe,CAACxE,IAAI;QAC7C,CAAC,CAAC;QACF,IAAI,CAAC6E,mBAAmB,EAAE,OAAO,IAAI;QACrCF,WAAW,CAACI,QAAQ,GAAG5H,MAAM,CAAC4D,MAAM,CAAC,CAAC,CAAC,EAAE4D,WAAW,CAACI,QAAQ,EAAE;UAC7DF;QACF,CAAC,CAAC;QACF,OAAO,IAAI;MACb,CAAC,CAAC;MACFT,aAAa,CAACI,eAAe,CAACxE,IAAI,CAAC,GAAG,KAAK;MAC3C,MAAMiF,IAAI,GAAG9H,MAAM,CAAC4D,MAAM,CACxB,CAAC,CAAC,EACF4D,WAAW,CAACI,QAAQ,EACpB;QACEG,cAAc,EAAEhE,iBAAiB,CAACC,OAAO;MAC3C,CAAC,EACDE,CAAC,CAAC8D,IAAI,CAAChE,OAAO,EAAE,aAAa,EAAE,aAAa,CAC9C,CAAC;MAED,IAAIiE,WAAW,GAAG,KAAK;MACvB,IAAIC,OAAO,GAAGC,OAAO,CAACC,OAAO,CAAC,CAAC;MAE/BpI,MAAM,CAACqI,IAAI,CAACpC,wBAAwB,CAAC,CAACqC,OAAO,CAACtD,GAAG,IAAI;QACnDkD,OAAO,GAAGA,OAAO,CACdK,IAAI,CAAC,MAAM;UACV,MAAMnC,QAAQ,GAAGH,wBAAwB,CAACjB,GAAG,CAAC;UAC9C,OAAOoB,QAAQ,CAACpC,OAAO,EAAE8D,IAAI,EAAEjF,IAAI,CAAC;QACtC,CAAC,CAAC,CACD0F,IAAI,CAACC,MAAM,IAAI;UACd;UACA,IAAIA,MAAM,KAAK,KAAK,EAAE;YACpBP,WAAW,GAAG,IAAI;UACpB;QACF,CAAC,CAAC;MACN,CAAC,CAAC;MAEF,OAAOC,OAAO,CAACK,IAAI,CAAC,OAAO;QACzBE,MAAM,EAAEjB,WAAW,CAACkB,YAAY,CAACZ,IAAI,CAAC;QACtCa,UAAU,EAAEb,IAAI,CAACa,UAAU;QAC3BnH,OAAO,EAAEsG,IAAI,CAACtG;MAChB,CAAC,CAAC,CAAC;IACL;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA7D,MAAM,CAACiL,oBAAoB,GAAG,UAASC,OAAO,EAAE;MAC9C,OAAO5B,aAAa,CAACG,WAAW,CAACG,QAAQ,CAACsB,OAAO,CAAC;IACpD,CAAC;IAEDjL,eAAe,CAACkL,2BAA2B,GAAG,UAC5CjG,IAAI,EACJkG,QAAQ,EACRC,iBAAiB,EACjB;MACAA,iBAAiB,GAAGA,iBAAiB,IAAI,CAAC,CAAC;MAE3C/B,aAAa,CAACI,eAAe,CAACxE,IAAI,CAAC,GAAG,IAAI;MAC1C,MAAM6D,WAAW,GAAArJ,aAAA,CAAAA,aAAA,KACZyD,yBAAyB,GACxBkI,iBAAiB,CAACC,sBAAsB,IAAI,CAAC,CAAC,CACnD;MACDhC,aAAa,CAACG,WAAW,CAACkB,OAAO,CAACY,EAAE,IAAI;QACtCA,EAAE,CAAC;UAAErG,IAAI;UAAEkG,QAAQ;UAAE9B,aAAa,EAAEP;QAAY,CAAC,CAAC;QAClD,OAAO,IAAI;MACb,CAAC,CAAC;MAEF,MAAMgB,mBAAmB,GAAGf,IAAI,CAACC,SAAS,CACxCC,kBAAkB,CAACF,IAAI,CAACC,SAAS,CAACF,WAAW,CAAC,CAChD,CAAC;MAED,OAAO,IAAIyC,WAAW,CACpBtG,IAAI,EACJkG,QAAQ,EACR/I,MAAM,CAAC4D,MAAM,CACX;QACEwF,UAAUA,CAACC,QAAQ,EAAE;UACnB,OAAOjL,QAAQ,CAACsC,QAAQ,CAACmC,IAAI,CAAC,EAAEwG,QAAQ,CAAC;QAC3C,CAAC;QACDC,iBAAiB,EAAE;UACjBC,kBAAkB,EAAErF,CAAC,CAACsF,GAAG,CAACD,kBAAkB,IAAI,EAAE,EAAE,UAClDtI,QAAQ,EACR+B,QAAQ,EACR;YACA,OAAO;cACLA,QAAQ,EAAEA,QAAQ;cAClB/B,QAAQ,EAAEA;YACZ,CAAC;UACH,CAAC,CAAC;UACF;UACA;UACA;UACA;UACA;UACA;UACAyG,mBAAmB;UACnB+B,iBAAiB,EAAEzI,IAAI,CAAC0G,mBAAmB,CAAC;UAC5CgC,iBAAiB,EACf5I,yBAAyB,CAACC,oBAAoB,IAAI,EAAE;UACtDJ,0BAA0B,EAAEA,0BAA0B;UACtDgJ,OAAO,EAAEA,OAAO;UAChBC,oBAAoB,EAAEhM,eAAe,CAACgM,oBAAoB,CAAC,CAAC;UAC5DC,MAAM,EAAEb,iBAAiB,CAACa;QAC5B;MACF,CAAC,EACDb,iBACF,CACF,CAAC;IACH,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACApL,eAAe,CAACkM,qBAAqB,GAAG,gBACtCC,iBAAiB,EACjBzI,GAAG,EACHC,GAAG,EACHyI,IAAI,EACJ;MAAA,IAAAC,sBAAA,EAAAC,sBAAA;MACA,IAAIlH,QAAQ,GAAGjE,YAAY,CAACuC,GAAG,CAAC,CAAC0B,QAAQ;MACzC,IAAI;QACFA,QAAQ,GAAGgE,kBAAkB,CAAChE,QAAQ,CAAC;MACzC,CAAC,CAAC,OAAOmH,CAAC,EAAE;QACVH,IAAI,CAAC,CAAC;QACN;MACF;MAEA,IAAII,aAAa,GAAG,SAAAA,CAASC,CAAC,EAAE;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QAC9B,IACEjJ,GAAG,CAACkJ,MAAM,KAAK,KAAK,IACpBlJ,GAAG,CAACkJ,MAAM,KAAK,MAAM,KAAAF,qBAAA,GACrBzF,MAAM,CAAC4F,QAAQ,CAACC,QAAQ,cAAAJ,qBAAA,gBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BK,MAAM,cAAAJ,sBAAA,eAAhCA,sBAAA,CAAkCK,mBAAmB,EACrD;UACArJ,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAE;YACjB,cAAc,EAAE,uCAAuC;YACvD,gBAAgB,EAAEC,MAAM,CAACC,UAAU,CAACV,CAAC;UACvC,CAAC,CAAC;UACF9I,GAAG,CAACyJ,KAAK,CAACX,CAAC,CAAC;UACZ9I,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACX,CAAC,MAAM;UACL,MAAMC,MAAM,GAAG5J,GAAG,CAACkJ,MAAM,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG;UACnDjJ,GAAG,CAACsJ,SAAS,CAACK,MAAM,EAAE;YACpBC,KAAK,EAAE,oBAAoB;YAC3B,gBAAgB,EAAE;UACpB,CAAC,CAAC;UACF5J,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACX;MACF,CAAC;MAED,IACE/G,CAAC,CAACkH,GAAG,CAAC7B,kBAAkB,EAAEvG,QAAQ,CAAC,IACnC,CAACpF,eAAe,CAACgM,oBAAoB,CAAC,CAAC,EACvC;QACAQ,aAAa,CAACb,kBAAkB,CAACvG,QAAQ,CAAC,CAAC;QAC3C;MACF;MAEA,MAAM;QAAEH,IAAI;QAAEE;MAAK,CAAC,GAAGpF,MAAM,CAACgF,iBAAiB,CAACrB,GAAG,CAAC;MAEpD,IAAI,CAACvB,MAAM,CAAC2D,IAAI,CAAC/F,MAAM,CAAC8C,cAAc,EAAEoC,IAAI,CAAC,EAAE;QAC7C;QACAmH,IAAI,CAAC,CAAC;QACN;MACF;;MAEA;MACA;MACA,MAAM/E,OAAO,GAAGtH,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC;MAC3C,MAAMoC,OAAO,CAACoG,MAAM;MAEpB,IACEtI,IAAI,KAAK,2BAA2B,IACpC,CAACnF,eAAe,CAACgM,oBAAoB,CAAC,CAAC,EACvC;QACAQ,aAAa,gCAAAkB,MAAA,CACoBrG,OAAO,CAACyC,mBAAmB,MAC5D,CAAC;QACD;MACF;MAEA,MAAM6D,IAAI,GAAGC,iBAAiB,CAACzB,iBAAiB,EAAE/G,QAAQ,EAAED,IAAI,EAAEF,IAAI,CAAC;MACvE,IAAI,CAAC0I,IAAI,EAAE;QACTvB,IAAI,CAAC,CAAC;QACN;MACF;MACA;MACA,IACE1I,GAAG,CAACkJ,MAAM,KAAK,MAAM,IACrBlJ,GAAG,CAACkJ,MAAM,KAAK,KAAK,IACpB,GAAAP,sBAAA,GAACpF,MAAM,CAAC4F,QAAQ,CAACC,QAAQ,cAAAT,sBAAA,gBAAAC,sBAAA,GAAxBD,sBAAA,CAA0BU,MAAM,cAAAT,sBAAA,eAAhCA,sBAAA,CAAkCU,mBAAmB,GACtD;QACA,MAAMM,MAAM,GAAG5J,GAAG,CAACkJ,MAAM,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG;QACnDjJ,GAAG,CAACsJ,SAAS,CAACK,MAAM,EAAE;UACpBC,KAAK,EAAE,oBAAoB;UAC3B,gBAAgB,EAAE;QACpB,CAAC,CAAC;QACF5J,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACT;MACF;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA,MAAMQ,MAAM,GAAGF,IAAI,CAACG,SAAS,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC;MAE7D,IAAIH,IAAI,CAACG,SAAS,EAAE;QAClB;QACA;QACA;QACA;QACAnK,GAAG,CAACoK,SAAS,CAAC,MAAM,EAAE,YAAY,CAAC;MACrC;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIJ,IAAI,CAACK,YAAY,EAAE;QACrBrK,GAAG,CAACoK,SAAS,CACX,aAAa,EACb7K,yBAAyB,CAACC,oBAAoB,GAAGwK,IAAI,CAACK,YACxD,CAAC;MACH;MAEA,IAAIL,IAAI,CAACM,IAAI,KAAK,IAAI,IAAIN,IAAI,CAACM,IAAI,KAAK,YAAY,EAAE;QACpDtK,GAAG,CAACoK,SAAS,CAAC,cAAc,EAAE,uCAAuC,CAAC;MACxE,CAAC,MAAM,IAAIJ,IAAI,CAACM,IAAI,KAAK,KAAK,EAAE;QAC9BtK,GAAG,CAACoK,SAAS,CAAC,cAAc,EAAE,yBAAyB,CAAC;MAC1D,CAAC,MAAM,IAAIJ,IAAI,CAACM,IAAI,KAAK,MAAM,EAAE;QAC/BtK,GAAG,CAACoK,SAAS,CAAC,cAAc,EAAE,iCAAiC,CAAC;MAClE;MAEA,IAAIJ,IAAI,CAACrK,IAAI,EAAE;QACbK,GAAG,CAACoK,SAAS,CAAC,MAAM,EAAE,GAAG,GAAGJ,IAAI,CAACrK,IAAI,GAAG,GAAG,CAAC;MAC9C;MAEA,IAAIqK,IAAI,CAACO,OAAO,EAAE;QAChBvK,GAAG,CAACoK,SAAS,CAAC,gBAAgB,EAAEb,MAAM,CAACC,UAAU,CAACQ,IAAI,CAACO,OAAO,CAAC,CAAC;QAChEvK,GAAG,CAACyJ,KAAK,CAACO,IAAI,CAACO,OAAO,CAAC;QACvBvK,GAAG,CAAC0J,GAAG,CAAC,CAAC;MACX,CAAC,MAAM;QACL9L,IAAI,CAACmC,GAAG,EAAEiK,IAAI,CAACQ,YAAY,EAAE;UAC3BC,MAAM,EAAEP,MAAM;UACdQ,QAAQ,EAAE,OAAO;UAAE;UACnBC,YAAY,EAAE,KAAK,CAAE;QACvB,CAAC,CAAC,CACCpG,EAAE,CAAC,OAAO,EAAE,UAASqG,GAAG,EAAE;UACzBC,GAAG,CAACC,KAAK,CAAC,4BAA4B,GAAGF,GAAG,CAAC;UAC7C5K,GAAG,CAACsJ,SAAS,CAAC,GAAG,CAAC;UAClBtJ,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACX,CAAC,CAAC,CACDnF,EAAE,CAAC,WAAW,EAAE,YAAW;UAC1BsG,GAAG,CAACC,KAAK,CAAC,uBAAuB,GAAGd,IAAI,CAACQ,YAAY,CAAC;UACtDxK,GAAG,CAACsJ,SAAS,CAAC,GAAG,CAAC;UAClBtJ,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACX,CAAC,CAAC,CACDqB,IAAI,CAAC/K,GAAG,CAAC;MACd;IACF,CAAC;IAED,SAASiK,iBAAiBA,CAACzB,iBAAiB,EAAEwC,YAAY,EAAExJ,IAAI,EAAEF,IAAI,EAAE;MACtE,IAAI,CAAC9C,MAAM,CAAC2D,IAAI,CAAC/F,MAAM,CAAC8C,cAAc,EAAEoC,IAAI,CAAC,EAAE;QAC7C,OAAO,IAAI;MACb;;MAEA;MACA;MACA,MAAM2J,cAAc,GAAGxM,MAAM,CAACqI,IAAI,CAAC0B,iBAAiB,CAAC;MACrD,MAAM0C,SAAS,GAAGD,cAAc,CAACE,OAAO,CAAC7J,IAAI,CAAC;MAC9C,IAAI4J,SAAS,GAAG,CAAC,EAAE;QACjBD,cAAc,CAACG,OAAO,CAACH,cAAc,CAAC7I,MAAM,CAAC8I,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE;MAEA,IAAIlB,IAAI,GAAG,IAAI;MAEfiB,cAAc,CAACI,IAAI,CAAC/J,IAAI,IAAI;QAC1B,MAAMgK,WAAW,GAAG9C,iBAAiB,CAAClH,IAAI,CAAC;QAE3C,SAASiK,QAAQA,CAAC/J,IAAI,EAAE;UACtBwI,IAAI,GAAGsB,WAAW,CAAC9J,IAAI,CAAC;UACxB;UACA;UACA,IAAI,OAAOwI,IAAI,KAAK,UAAU,EAAE;YAC9BA,IAAI,GAAGsB,WAAW,CAAC9J,IAAI,CAAC,GAAGwI,IAAI,CAAC,CAAC;UACnC;UACA,OAAOA,IAAI;QACb;;QAEA;QACA;QACA,IAAIxL,MAAM,CAAC2D,IAAI,CAACmJ,WAAW,EAAEN,YAAY,CAAC,EAAE;UAC1C,OAAOO,QAAQ,CAACP,YAAY,CAAC;QAC/B;;QAEA;QACA,IAAIxJ,IAAI,KAAKwJ,YAAY,IAAIxM,MAAM,CAAC2D,IAAI,CAACmJ,WAAW,EAAE9J,IAAI,CAAC,EAAE;UAC3D,OAAO+J,QAAQ,CAAC/J,IAAI,CAAC;QACvB;MACF,CAAC,CAAC;MAEF,OAAOwI,IAAI;IACb;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA3N,eAAe,CAACmP,SAAS,GAAGC,IAAI,IAAI;MAClC,IAAIC,UAAU,GAAGC,QAAQ,CAACF,IAAI,CAAC;MAC/B,IAAIG,MAAM,CAACC,KAAK,CAACH,UAAU,CAAC,EAAE;QAC5BA,UAAU,GAAGD,IAAI;MACnB;MACA,OAAOC,UAAU;IACnB,CAAC;IAIDzN,SAAS,CAAC,qBAAqB,EAAE,MAAA6N,IAAA,IAAoB;MAAA,IAAb;QAAExK;MAAK,CAAC,GAAAwK,IAAA;MAC9C,MAAMzP,eAAe,CAAC0P,WAAW,CAACzK,IAAI,CAAC;IACzC,CAAC,CAAC;IAEFrD,SAAS,CAAC,sBAAsB,EAAE,MAAA+N,KAAA,IAAoB;MAAA,IAAb;QAAE1K;MAAK,CAAC,GAAA0K,KAAA;MAC/C,MAAM3P,eAAe,CAAC4P,qBAAqB,CAAC3K,IAAI,CAAC;IACnD,CAAC,CAAC;IAEF,eAAe4K,eAAeA,CAAA,EAAG;MAC/B,IAAIC,YAAY,GAAG,KAAK;MACxB,IAAIC,SAAS,GAAG,IAAI9I,MAAM,CAAC+I,kBAAkB,CAAC,CAAC;MAE/C,IAAIC,eAAe,GAAG,SAAAA,CAASC,OAAO,EAAE;QACtC,OAAO9G,kBAAkB,CAACxI,QAAQ,CAACsP,OAAO,CAAC,CAAC9K,QAAQ,CAAC;MACvD,CAAC;MAEDpF,eAAe,CAACmQ,oBAAoB,GAAG,kBAAiB;QACtD,MAAMJ,SAAS,CAACK,OAAO,CAAC,YAAW;UACjC,MAAMjE,iBAAiB,GAAG/J,MAAM,CAACkG,MAAM,CAAC,IAAI,CAAC;UAE7C,MAAM;YAAE+H;UAAW,CAAC,GAAGC,oBAAoB;UAC3C,MAAMC,WAAW,GACfF,UAAU,CAACE,WAAW,IAAInO,MAAM,CAACqI,IAAI,CAAC4F,UAAU,CAACG,WAAW,CAAC;UAE/D,IAAI;YACFD,WAAW,CAAC7F,OAAO,CAACzF,IAAI,IAAI;cAC1B2K,qBAAqB,CAAC3K,IAAI,EAAEkH,iBAAiB,CAAC;YAChD,CAAC,CAAC;YACFnM,eAAe,CAACmM,iBAAiB,GAAGA,iBAAiB;UACvD,CAAC,CAAC,OAAOI,CAAC,EAAE;YACViC,GAAG,CAACC,KAAK,CAAC,sCAAsC,GAAGlC,CAAC,CAACkE,KAAK,CAAC;YAC3DC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;UACjB;QACF,CAAC,CAAC;MACJ,CAAC;;MAED;MACA;MACA3Q,eAAe,CAAC0P,WAAW,GAAG,gBAAezK,IAAI,EAAE;QACjD,MAAM8K,SAAS,CAACK,OAAO,CAAC,MAAM;UAC5B,MAAM/I,OAAO,GAAGtH,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC;UAC3C,MAAM;YAAE2L;UAAQ,CAAC,GAAGvJ,OAAO;UAC3BA,OAAO,CAACoG,MAAM,GAAG,IAAIlD,OAAO,CAACC,OAAO,IAAI;YACtC,IAAI,OAAOoG,OAAO,KAAK,UAAU,EAAE;cACjC;cACA;cACAvJ,OAAO,CAACuJ,OAAO,GAAG,YAAW;gBAC3BA,OAAO,CAAC,CAAC;gBACTpG,OAAO,CAAC,CAAC;cACX,CAAC;YACH,CAAC,MAAM;cACLnD,OAAO,CAACuJ,OAAO,GAAGpG,OAAO;YAC3B;UACF,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC;MAEDxK,eAAe,CAAC4P,qBAAqB,GAAG,gBAAe3K,IAAI,EAAE;QAC3D,MAAM8K,SAAS,CAACK,OAAO,CAAC,MAAMR,qBAAqB,CAAC3K,IAAI,CAAC,CAAC;MAC5D,CAAC;MAED,SAAS2K,qBAAqBA,CAC5B3K,IAAI,EAEJ;QAAA,IADAkH,iBAAiB,GAAA0E,SAAA,CAAAzM,MAAA,QAAAyM,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG7Q,eAAe,CAACmM,iBAAiB;QAErD,MAAM4E,SAAS,GAAGvQ,QAAQ,CACxBC,WAAW,CAAC6P,oBAAoB,CAACU,SAAS,CAAC,EAC3C/L,IACF,CAAC;;QAED;QACA,MAAMgM,eAAe,GAAGzQ,QAAQ,CAACuQ,SAAS,EAAE,cAAc,CAAC;QAE3D,IAAIG,WAAW;QACf,IAAI;UACFA,WAAW,GAAGnI,IAAI,CAAClI,KAAK,CAACV,YAAY,CAAC8Q,eAAe,CAAC,CAAC;QACzD,CAAC,CAAC,OAAO1E,CAAC,EAAE;UACV,IAAIA,CAAC,CAAC4E,IAAI,KAAK,QAAQ,EAAE;UACzB,MAAM5E,CAAC;QACT;QAEA,IAAI2E,WAAW,CAACE,MAAM,KAAK,kBAAkB,EAAE;UAC7C,MAAM,IAAI1K,KAAK,CACb,wCAAwC,GACtCqC,IAAI,CAACC,SAAS,CAACkI,WAAW,CAACE,MAAM,CACrC,CAAC;QACH;QAEA,IAAI,CAACH,eAAe,IAAI,CAACF,SAAS,IAAI,CAACG,WAAW,EAAE;UAClD,MAAM,IAAIxK,KAAK,CAAC,gCAAgC,CAAC;QACnD;QAEA5D,QAAQ,CAACmC,IAAI,CAAC,GAAG8L,SAAS;QAC1B,MAAM9B,WAAW,GAAI9C,iBAAiB,CAAClH,IAAI,CAAC,GAAG7C,MAAM,CAACkG,MAAM,CAAC,IAAI,CAAE;QAEnE,MAAM;UAAE6C;QAAS,CAAC,GAAG+F,WAAW;QAChC/F,QAAQ,CAACT,OAAO,CAAC2G,IAAI,IAAI;UACvB,IAAIA,IAAI,CAACrO,GAAG,IAAIqO,IAAI,CAACC,KAAK,KAAK,QAAQ,EAAE;YACvCrC,WAAW,CAACgB,eAAe,CAACoB,IAAI,CAACrO,GAAG,CAAC,CAAC,GAAG;cACvCmL,YAAY,EAAE3N,QAAQ,CAACuQ,SAAS,EAAEM,IAAI,CAAClM,IAAI,CAAC;cAC5C2I,SAAS,EAAEuD,IAAI,CAACvD,SAAS;cACzBxK,IAAI,EAAE+N,IAAI,CAAC/N,IAAI;cACf;cACA0K,YAAY,EAAEqD,IAAI,CAACrD,YAAY;cAC/BC,IAAI,EAAEoD,IAAI,CAACpD;YACb,CAAC;YAED,IAAIoD,IAAI,CAACE,SAAS,EAAE;cAClB;cACA;cACAtC,WAAW,CAACgB,eAAe,CAACoB,IAAI,CAACrD,YAAY,CAAC,CAAC,GAAG;gBAChDG,YAAY,EAAE3N,QAAQ,CAACuQ,SAAS,EAAEM,IAAI,CAACE,SAAS,CAAC;gBACjDzD,SAAS,EAAE;cACb,CAAC;YACH;UACF;QACF,CAAC,CAAC;QAEF,MAAM;UAAE0D;QAAgB,CAAC,GAAGtO,yBAAyB;QACrD,MAAMuO,eAAe,GAAG;UACtBD;QACF,CAAC;QAED,MAAME,UAAU,GAAG3R,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC;QAC9C,MAAM0M,UAAU,GAAI5R,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC,GAAG;UAChDmM,MAAM,EAAE,kBAAkB;UAC1BjG,QAAQ,EAAEA,QAAQ;UAClB;UACA;UACA;UACA;UACA;UACA;UACA;UACA3I,OAAO,EAAEA,CAAA,KACPoP,aAAa,CAACrK,mBAAmB,CAAC4D,QAAQ,EAAE,IAAI,EAAEsG,eAAe,CAAC;UACpEI,kBAAkB,EAAEA,CAAA,KAClBD,aAAa,CAACrK,mBAAmB,CAC/B4D,QAAQ,EACR8C,IAAI,IAAIA,IAAI,KAAK,KAAK,EACtBwD,eACF,CAAC;UACHK,qBAAqB,EAAEA,CAAA,KACrBF,aAAa,CAACrK,mBAAmB,CAC/B4D,QAAQ,EACR,CAAC8C,IAAI,EAAE8D,WAAW,KAAK9D,IAAI,KAAK,KAAK,IAAI,CAAC8D,WAAW,EACrDN,eACF,CAAC;UACHO,kBAAkB,EAAEA,CAAA,KAClBJ,aAAa,CAACrK,mBAAmB,CAC/B4D,QAAQ,EACR,CAAC8G,KAAK,EAAEF,WAAW,KAAKA,WAAW,EACnCN,eACF,CAAC;UACHS,4BAA4B,EAAEhB,WAAW,CAACgB,4BAA4B;UACtEV,eAAe;UACfW,UAAU,EAAEjB,WAAW,CAACiB;QAC1B,CAAE;;QAEF;QACA,MAAMC,iBAAiB,GAAG,KAAK,GAAGnN,IAAI,CAACoN,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;QAC5D,MAAMC,WAAW,GAAGF,iBAAiB,GAAGnC,eAAe,CAAC,gBAAgB,CAAC;QAEzEhB,WAAW,CAACqD,WAAW,CAAC,GAAG,MAAM;UAC/B,IAAIC,OAAO,CAACC,UAAU,EAAE;YACtB,MAAM;cACJC,kBAAkB,GAAGF,OAAO,CAACC,UAAU,CAACE,UAAU,CAACC;YACrD,CAAC,GAAGjC,OAAO,CAACkC,GAAG;YAEf,IAAIH,kBAAkB,EAAE;cACtBd,UAAU,CAACnP,OAAO,GAAGiQ,kBAAkB;YACzC;UACF;UAEA,IAAI,OAAOd,UAAU,CAACnP,OAAO,KAAK,UAAU,EAAE;YAC5CmP,UAAU,CAACnP,OAAO,GAAGmP,UAAU,CAACnP,OAAO,CAAC,CAAC;UAC3C;UAEA,OAAO;YACL0L,OAAO,EAAEnF,IAAI,CAACC,SAAS,CAAC2I,UAAU,CAAC;YACnC7D,SAAS,EAAE,KAAK;YAChBxK,IAAI,EAAEqO,UAAU,CAACnP,OAAO;YACxByL,IAAI,EAAE;UACR,CAAC;QACH,CAAC;QAED4E,0BAA0B,CAAC5N,IAAI,CAAC;;QAEhC;QACA;QACA,IAAIyM,UAAU,IAAIA,UAAU,CAACjE,MAAM,EAAE;UACnCiE,UAAU,CAACd,OAAO,CAAC,CAAC;QACtB;MACF;MAEA,MAAMkC,qBAAqB,GAAG;QAC5B,aAAa,EAAE;UACbzH,sBAAsB,EAAE;YACtB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA0H,0BAA0B,EACxBrC,OAAO,CAACkC,GAAG,CAACI,cAAc,IAAI/L,MAAM,CAACgM,WAAW,CAAC,CAAC;YACpDC,QAAQ,EAAExC,OAAO,CAACkC,GAAG,CAACO,eAAe,IAAIlM,MAAM,CAACgM,WAAW,CAAC;UAC9D;QACF,CAAC;QAED,aAAa,EAAE;UACb5H,sBAAsB,EAAE;YACtB/J,QAAQ,EAAE;UACZ;QACF,CAAC;QAED,oBAAoB,EAAE;UACpB+J,sBAAsB,EAAE;YACtB/J,QAAQ,EAAE;UACZ;QACF;MACF,CAAC;MAEDtB,eAAe,CAACoT,mBAAmB,GAAG,kBAAiB;QACrD;QACA;QACA;QACA;QACA,MAAMrD,SAAS,CAACK,OAAO,CAAC,YAAW;UACjChO,MAAM,CAACqI,IAAI,CAAC1K,MAAM,CAAC8C,cAAc,CAAC,CAAC6H,OAAO,CAACmI,0BAA0B,CAAC;QACxE,CAAC,CAAC;MACJ,CAAC;MAED,SAASA,0BAA0BA,CAAC5N,IAAI,EAAE;QACxC,MAAMoC,OAAO,GAAGtH,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC;QAC3C,MAAMmG,iBAAiB,GAAG0H,qBAAqB,CAAC7N,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,MAAM;UAAE+E;QAAS,CAAC,GAAI5B,iBAAiB,CACrCnD,IAAI,CACL,GAAGjF,eAAe,CAACkL,2BAA2B,CAC7CjG,IAAI,EACJoC,OAAO,CAAC8D,QAAQ,EAChBC,iBACF,CAAE;QACF;QACA/D,OAAO,CAACyC,mBAAmB,GAAGf,IAAI,CAACC,SAAS,CAAAvJ,aAAA,CAAAA,aAAA,KACvCyD,yBAAyB,GACxBkI,iBAAiB,CAACC,sBAAsB,IAAI,IAAI,CACrD,CAAC;QACFhE,OAAO,CAACgM,iBAAiB,GAAGrJ,QAAQ,CAACsJ,GAAG,CAAC1H,GAAG,CAAC2H,IAAI,KAAK;UACpDvQ,GAAG,EAAED,0BAA0B,CAACwQ,IAAI,CAACvQ,GAAG;QAC1C,CAAC,CAAC,CAAC;MACL;MAEA,MAAMhD,eAAe,CAACmQ,oBAAoB,CAAC,CAAC;;MAE5C;MACA,IAAIlO,GAAG,GAAGD,gBAAgB,CAAC,CAAC;;MAE5B;MACA;MACA,IAAIwR,kBAAkB,GAAGxR,gBAAgB,CAAC,CAAC;MAC3CC,GAAG,CAACwR,GAAG,CAACD,kBAAkB,CAAC;;MAE3B;MACAvR,GAAG,CAACwR,GAAG,CAACzS,QAAQ,CAAC;QAAE6C,MAAM,EAAEJ;MAAe,CAAC,CAAC,CAAC;;MAE7C;MACAxB,GAAG,CAACwR,GAAG,CAACxS,YAAY,CAAC,CAAC,CAAC;;MAEvB;MACA;MACAgB,GAAG,CAACwR,GAAG,CAAC,UAAS/P,GAAG,EAAEC,GAAG,EAAEyI,IAAI,EAAE;QAC/B,IAAIrF,WAAW,CAAC2M,UAAU,CAAChQ,GAAG,CAACV,GAAG,CAAC,EAAE;UACnCoJ,IAAI,CAAC,CAAC;UACN;QACF;QACAzI,GAAG,CAACsJ,SAAS,CAAC,GAAG,CAAC;QAClBtJ,GAAG,CAACyJ,KAAK,CAAC,aAAa,CAAC;QACxBzJ,GAAG,CAAC0J,GAAG,CAAC,CAAC;MACX,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACApL,GAAG,CAACwR,GAAG,CAAC,UAASrN,OAAO,EAAEuN,QAAQ,EAAEvH,IAAI,EAAE;QACxChG,OAAO,CAACwN,KAAK,GAAG1S,EAAE,CAACL,KAAK,CAACD,QAAQ,CAACwF,OAAO,CAACpD,GAAG,CAAC,CAAC4Q,KAAK,CAAC;QACrDxH,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;MAEF,SAASyH,YAAYA,CAAC1O,IAAI,EAAE;QAC1B,MAAMnB,KAAK,GAAGmB,IAAI,CAAClB,KAAK,CAAC,GAAG,CAAC;QAC7B,OAAOD,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAEA,KAAK,CAAC8P,KAAK,CAAC,CAAC;QACrC,OAAO9P,KAAK;MACd;MAEA,SAAS+P,UAAUA,CAACC,MAAM,EAAEC,KAAK,EAAE;QACjC,OACED,MAAM,CAAC5P,MAAM,IAAI6P,KAAK,CAAC7P,MAAM,IAC7B4P,MAAM,CAACE,KAAK,CAAC,CAACC,IAAI,EAAEhQ,CAAC,KAAKgQ,IAAI,KAAKF,KAAK,CAAC9P,CAAC,CAAC,CAAC;MAEhD;;MAEA;MACAlC,GAAG,CAACwR,GAAG,CAAC,UAASrN,OAAO,EAAEuN,QAAQ,EAAEvH,IAAI,EAAE;QACxC,MAAMgI,UAAU,GAAGlR,yBAAyB,CAACC,oBAAoB;QACjE,MAAM;UAAEiC,QAAQ;UAAEiP;QAAO,CAAC,GAAGzT,QAAQ,CAACwF,OAAO,CAACpD,GAAG,CAAC;;QAElD;QACA,IAAIoR,UAAU,EAAE;UACd,MAAME,WAAW,GAAGT,YAAY,CAACO,UAAU,CAAC;UAC5C,MAAM3O,SAAS,GAAGoO,YAAY,CAACzO,QAAQ,CAAC;UACxC,IAAI2O,UAAU,CAACO,WAAW,EAAE7O,SAAS,CAAC,EAAE;YACtCW,OAAO,CAACpD,GAAG,GAAG,GAAG,GAAGyC,SAAS,CAACI,KAAK,CAACyO,WAAW,CAAClQ,MAAM,CAAC,CAAC1D,IAAI,CAAC,GAAG,CAAC;YACjE,IAAI2T,MAAM,EAAE;cACVjO,OAAO,CAACpD,GAAG,IAAIqR,MAAM;YACvB;YACA,OAAOjI,IAAI,CAAC,CAAC;UACf;QACF;QAEA,IAAIhH,QAAQ,KAAK,cAAc,IAAIA,QAAQ,KAAK,aAAa,EAAE;UAC7D,OAAOgH,IAAI,CAAC,CAAC;QACf;QAEA,IAAIgI,UAAU,EAAE;UACdT,QAAQ,CAAC1G,SAAS,CAAC,GAAG,CAAC;UACvB0G,QAAQ,CAACvG,KAAK,CAAC,cAAc,CAAC;UAC9BuG,QAAQ,CAACtG,GAAG,CAAC,CAAC;UACd;QACF;QAEAjB,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;;MAEF;MACA;MACAnK,GAAG,CAACwR,GAAG,CAAC,UAAS/P,GAAG,EAAEC,GAAG,EAAEyI,IAAI,EAAE;QAC/B;QACApM,eAAe,CAACkM,qBAAqB,CACnClM,eAAe,CAACmM,iBAAiB,EACjCzI,GAAG,EACHC,GAAG,EACHyI,IACF,CAAC;MACH,CAAC,CAAC;;MAEF;MACA;MACAnK,GAAG,CAACwR,GAAG,CAAEzT,eAAe,CAACuU,sBAAsB,GAAGvS,gBAAgB,CAAC,CAAE,CAAC;;MAEtE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACE;MACA;MACA,IAAIwS,qBAAqB,GAAGxS,gBAAgB,CAAC,CAAC;MAC9CC,GAAG,CAACwR,GAAG,CAACe,qBAAqB,CAAC;MAE9B,IAAIC,qBAAqB,GAAG,KAAK;MACjC;MACA;MACA;MACAxS,GAAG,CAACwR,GAAG,CAAC,UAASlF,GAAG,EAAE7K,GAAG,EAAEC,GAAG,EAAEyI,IAAI,EAAE;QACpC,IAAI,CAACmC,GAAG,IAAI,CAACkG,qBAAqB,IAAI,CAAC/Q,GAAG,CAACE,OAAO,CAAC,kBAAkB,CAAC,EAAE;UACtEwI,IAAI,CAACmC,GAAG,CAAC;UACT;QACF;QACA5K,GAAG,CAACsJ,SAAS,CAACsB,GAAG,CAACjB,MAAM,EAAE;UAAE,cAAc,EAAE;QAAa,CAAC,CAAC;QAC3D3J,GAAG,CAAC0J,GAAG,CAAC,kBAAkB,CAAC;MAC7B,CAAC,CAAC;MAEFpL,GAAG,CAACwR,GAAG,CAAC,gBAAe/P,GAAG,EAAEC,GAAG,EAAEyI,IAAI,EAAE;QAAA,IAAAsI,sBAAA,EAAAC,sBAAA;QACrC,IAAI,CAAC7N,MAAM,CAACpD,GAAG,CAACV,GAAG,CAAC,EAAE;UACpB,OAAOoJ,IAAI,CAAC,CAAC;QACf,CAAC,MAAM,IACL1I,GAAG,CAACkJ,MAAM,KAAK,MAAM,IACrBlJ,GAAG,CAACkJ,MAAM,KAAK,KAAK,IACpB,GAAA8H,sBAAA,GAACzN,MAAM,CAAC4F,QAAQ,CAACC,QAAQ,cAAA4H,sBAAA,gBAAAC,sBAAA,GAAxBD,sBAAA,CAA0B3H,MAAM,cAAA4H,sBAAA,eAAhCA,sBAAA,CAAkC3H,mBAAmB,GACtD;UACA,MAAMM,MAAM,GAAG5J,GAAG,CAACkJ,MAAM,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG;UACnDjJ,GAAG,CAACsJ,SAAS,CAACK,MAAM,EAAE;YACpBC,KAAK,EAAE,oBAAoB;YAC3B,gBAAgB,EAAE;UACpB,CAAC,CAAC;UACF5J,GAAG,CAAC0J,GAAG,CAAC,CAAC;QACX,CAAC,MAAM;UACL,IAAIzJ,OAAO,GAAG;YACZ,cAAc,EAAE;UAClB,CAAC;UAED,IAAIkM,YAAY,EAAE;YAChBlM,OAAO,CAAC,YAAY,CAAC,GAAG,OAAO;UACjC;UAEA,IAAIwC,OAAO,GAAGrG,MAAM,CAACgF,iBAAiB,CAACrB,GAAG,CAAC;UAE3C,IAAI0C,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,IAAIxN,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,CAAC,qBAAqB,CAAC,EAAE;YACjE;YACA;YACA;YACA;YACA;YACA;YACA;YACAhQ,OAAO,CAAC,cAAc,CAAC,GAAG,yBAAyB;YACnDA,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;YACrCD,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAErJ,OAAO,CAAC;YAC3BD,GAAG,CAACyJ,KAAK,CAAC,4CAA4C,CAAC;YACvDzJ,GAAG,CAAC0J,GAAG,CAAC,CAAC;YACT;UACF;UAEA,IAAIjH,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,IAAIxN,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,CAAC,oBAAoB,CAAC,EAAE;YAChE;YACA;YACA;YACA;YACAhQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;YACrCD,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAErJ,OAAO,CAAC;YAC3BD,GAAG,CAAC0J,GAAG,CAAC,eAAe,CAAC;YACxB;UACF;UAEA,IAAIjH,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,IAAIxN,OAAO,CAACpD,GAAG,CAAC4Q,KAAK,CAAC,yBAAyB,CAAC,EAAE;YACrE;YACA;YACA;YACA;YACAhQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;YACrCD,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAErJ,OAAO,CAAC;YAC3BD,GAAG,CAAC0J,GAAG,CAAC,eAAe,CAAC;YACxB;UACF;UAEA,MAAM;YAAEpI;UAAK,CAAC,GAAGmB,OAAO;UACxBlG,MAAM,CAACwI,WAAW,CAAC,OAAOzD,IAAI,EAAE,QAAQ,EAAE;YAAEA;UAAK,CAAC,CAAC;UAEnD,IAAI,CAAC9C,MAAM,CAAC2D,IAAI,CAAC/F,MAAM,CAAC8C,cAAc,EAAEoC,IAAI,CAAC,EAAE;YAC7C;YACArB,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;YACrCD,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAErJ,OAAO,CAAC;YAC3B,IAAIqD,MAAM,CAAC2N,aAAa,EAAE;cACxBjR,GAAG,CAAC0J,GAAG,oCAAAK,MAAA,CAAoCzI,IAAI,mBAAgB,CAAC;YAClE,CAAC,MAAM;cACL;cACAtB,GAAG,CAAC0J,GAAG,CAAC,eAAe,CAAC;YAC1B;YACA;UACF;;UAEA;UACA;UACA,MAAMtN,MAAM,CAAC8C,cAAc,CAACoC,IAAI,CAAC,CAACwI,MAAM;UAExC,OAAO7E,mBAAmB,CAACxC,OAAO,EAAEnB,IAAI,CAAC,CACtC0F,IAAI,CAACkK,KAAA,IAAiD;YAAA,IAAhD;cAAEhK,MAAM;cAAEE,UAAU;cAAEnH,OAAO,EAAEkR;YAAW,CAAC,GAAAD,KAAA;YAChD,IAAI,CAAC9J,UAAU,EAAE;cACfA,UAAU,GAAGpH,GAAG,CAACoH,UAAU,GAAGpH,GAAG,CAACoH,UAAU,GAAG,GAAG;YACpD;YAEA,IAAI+J,UAAU,EAAE;cACd1S,MAAM,CAAC4D,MAAM,CAACpC,OAAO,EAAEkR,UAAU,CAAC;YACpC;YAEAnR,GAAG,CAACsJ,SAAS,CAAClC,UAAU,EAAEnH,OAAO,CAAC;YAElCiH,MAAM,CAAC6D,IAAI,CAAC/K,GAAG,EAAE;cACf;cACA0J,GAAG,EAAE;YACP,CAAC,CAAC;UACJ,CAAC,CAAC,CACD0H,KAAK,CAACtG,KAAK,IAAI;YACdD,GAAG,CAACC,KAAK,CAAC,0BAA0B,GAAGA,KAAK,CAACgC,KAAK,CAAC;YACnD9M,GAAG,CAACsJ,SAAS,CAAC,GAAG,EAAErJ,OAAO,CAAC;YAC3BD,GAAG,CAAC0J,GAAG,CAAC,CAAC;UACX,CAAC,CAAC;QACN;MACF,CAAC,CAAC;;MAEF;MACApL,GAAG,CAACwR,GAAG,CAAC,UAAS/P,GAAG,EAAEC,GAAG,EAAE;QACzBA,GAAG,CAACsJ,SAAS,CAAC,GAAG,CAAC;QAClBtJ,GAAG,CAAC0J,GAAG,CAAC,CAAC;MACX,CAAC,CAAC;MAEF,IAAI2H,UAAU,GAAG1U,YAAY,CAAC2B,GAAG,CAAC;MAClC,IAAIgT,oBAAoB,GAAG,EAAE;;MAE7B;MACA;MACA;MACAD,UAAU,CAAClN,UAAU,CAAChG,oBAAoB,CAAC;;MAE3C;MACA;MACA;MACAkT,UAAU,CAAC9M,EAAE,CAAC,SAAS,EAAEnI,MAAM,CAAC8H,iCAAiC,CAAC;;MAElE;MACA;MACA;MACA;MACA;MACA;MACA;MACAmN,UAAU,CAAC9M,EAAE,CAAC,aAAa,EAAE,CAACqG,GAAG,EAAE2G,MAAM,KAAK;QAC5C;QACA,IAAIA,MAAM,CAACC,SAAS,EAAE;UACpB;QACF;QAEA,IAAI5G,GAAG,CAAC6G,OAAO,KAAK,aAAa,EAAE;UACjCF,MAAM,CAAC7H,GAAG,CAAC,kCAAkC,CAAC;QAChD,CAAC,MAAM;UACL;UACA;UACA6H,MAAM,CAACG,OAAO,CAAC9G,GAAG,CAAC;QACrB;MACF,CAAC,CAAC;MAEF,MAAM+G,cAAc,GAAG,SAAAA,CAAA,EAAW;QAChCb,qBAAqB,GAAG,IAAI;MAC9B,CAAC;MAED,IAAIc,uBAAuB,GAAG,KAAK;;MAEnC;MACAjP,CAAC,CAACK,MAAM,CAAC5G,MAAM,EAAE;QACfyV,eAAe,EAAEhB,qBAAqB;QACtCiB,QAAQ,EAAEjB,qBAAqB;QAC/BkB,kBAAkB,EAAElC,kBAAkB;QACtCmC,WAAW,EAAEnC,kBAAkB;QAC/BwB,UAAU,EAAEA,UAAU;QACtBY,UAAU,EAAE3T,GAAG;QACf;QACA4T,qBAAqB,EAAEA,CAAA,KAAM;UAC3B,IAAI,CAAEN,uBAAuB,EAAE;YAC7BtO,MAAM,CAAC6O,MAAM,CAAC,qHAAqH,CAAC;YACpIP,uBAAuB,GAAG,IAAI;UAChC;UACAD,cAAc,CAAC,CAAC;QAClB,CAAC;QACDS,sBAAsB,EAAET,cAAc;QACtCU,WAAW,EAAE,SAAAA,CAASC,CAAC,EAAE;UACvB,IAAIhB,oBAAoB,EAAEA,oBAAoB,CAACpO,IAAI,CAACoP,CAAC,CAAC,CAAC,KAClDA,CAAC,CAAC,CAAC;QACV,CAAC;QACD;QACA;QACAC,cAAc,EAAE,SAAAA,CAASlB,UAAU,EAAEmB,aAAa,EAAE7K,EAAE,EAAE;UACtD0J,UAAU,CAACoB,MAAM,CAACD,aAAa,EAAE7K,EAAE,CAAC;QACtC;MACF,CAAC,CAAC;;MAEA;AACJ;AACA;AACA;AACA;AACA;AACA;MACE;MACA;MACA;MACA+K,OAAO,CAACC,IAAI,GAAG,MAAMC,IAAI,IAAI;QAC3B,MAAMvW,eAAe,CAACoT,mBAAmB,CAAC,CAAC;QAE3C,MAAMoD,eAAe,GAAGL,aAAa,IAAI;UACvCpW,MAAM,CAACmW,cAAc,CACnB,CAAAK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEvB,UAAU,KAAIA,UAAU,EAC9BmB,aAAa,EACblP,MAAM,CAACwP,eAAe,CACpB,MAAM;YACJ,IAAI/F,OAAO,CAACkC,GAAG,CAAC8D,sBAAsB,EAAE;cACtCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;YAC1B;YACA,MAAMC,SAAS,GAAG5B,oBAAoB;YACtCA,oBAAoB,GAAG,IAAI;YAC3B4B,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEnM,OAAO,CAAClC,QAAQ,IAAI;cAC7BA,QAAQ,CAAC,CAAC;YACZ,CAAC,CAAC;UACJ,CAAC,EACD+D,CAAC,IAAI;YACHoK,OAAO,CAAClI,KAAK,CAAC,kBAAkB,EAAElC,CAAC,CAAC;YACpCoK,OAAO,CAAClI,KAAK,CAAClC,CAAC,IAAIA,CAAC,CAACkE,KAAK,CAAC;UAC7B,CACF,CACF,CAAC;QACH,CAAC;QAED,IAAIqG,SAAS,GAAGpG,OAAO,CAACkC,GAAG,CAACmE,IAAI,IAAI,CAAC;QACrC,IAAIC,cAAc,GAAGtG,OAAO,CAACkC,GAAG,CAACqE,gBAAgB;QAEjD,IAAID,cAAc,EAAE;UAClB,IAAItV,OAAO,CAACwV,QAAQ,EAAE;YACpB,MAAMC,UAAU,GAAGzV,OAAO,CAAC0V,MAAM,CAAC1G,OAAO,CAACkC,GAAG,CAAC7O,IAAI,IAAIrC,OAAO,CAAC0V,MAAM,CAACC,EAAE;YACvEL,cAAc,IAAI,GAAG,GAAGG,UAAU,GAAG,OAAO;UAC9C;UACA;UACA3V,wBAAwB,CAACwV,cAAc,CAAC;UACxCR,eAAe,CAAC;YAAErR,IAAI,EAAE6R;UAAe,CAAC,CAAC;UAEzC,MAAMM,qBAAqB,GAAG,CAC5B5G,OAAO,CAACkC,GAAG,CAAC2E,uBAAuB,IAAI,EAAE,EACzCC,IAAI,CAAC,CAAC;UACR,IAAIF,qBAAqB,EAAE;YACzB,IAAI,YAAY,CAACG,IAAI,CAACH,qBAAqB,CAAC,EAAE;cAC5ClX,SAAS,CAAC4W,cAAc,EAAE1H,QAAQ,CAACgI,qBAAqB,EAAE,CAAC,CAAC,CAAC;YAC/D,CAAC,MAAM;cACL,MAAM,IAAI5Q,KAAK,CAAC,2CAA2C,CAAC;YAC9D;UACF;UAEA,MAAMgR,eAAe,GAAG,CAAChH,OAAO,CAACkC,GAAG,CAAC+E,iBAAiB,IAAI,EAAE,EAAEH,IAAI,CAAC,CAAC;UACpE,IAAIE,eAAe,EAAE;YACnB,MAAME,mBAAmB,GAAG3X,YAAY,CAACyX,eAAe,CAAC;YACzD,IAAIE,mBAAmB,KAAK,IAAI,EAAE;cAChC,MAAM,IAAIlR,KAAK,CAAC,0CAA0C,CAAC;YAC7D;YACArG,SAAS,CAAC2W,cAAc,EAAEzW,QAAQ,CAAC,CAAC,CAACsX,GAAG,EAAED,mBAAmB,CAACE,GAAG,CAAC;UACpE;UAEArW,yBAAyB,CAACuV,cAAc,CAAC;QAC3C,CAAC,MAAM;UACLF,SAAS,GAAGtH,KAAK,CAACD,MAAM,CAACuH,SAAS,CAAC,CAAC,GAAGA,SAAS,GAAGvH,MAAM,CAACuH,SAAS,CAAC;UACpE,IAAI,oBAAoB,CAACW,IAAI,CAACX,SAAS,CAAC,EAAE;YACxC;YACAN,eAAe,CAAC;cAAErR,IAAI,EAAE2R;YAAU,CAAC,CAAC;UACtC,CAAC,MAAM,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;YACxC;YACAN,eAAe,CAAC;cACdpH,IAAI,EAAE0H,SAAS;cACfiB,IAAI,EAAErH,OAAO,CAACkC,GAAG,CAACoF,OAAO,IAAI;YAC/B,CAAC,CAAC;UACJ,CAAC,MAAM;YACL,MAAM,IAAItR,KAAK,CAAC,wBAAwB,CAAC;UAC3C;QACF;QAEA,OAAO,QAAQ;MACjB,CAAC;IACH;IAEA,MAAMuR,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAI;QACFtW,QAAQ,CAAC,cAAc,CAAC;QACxB,OAAO,IAAI;MACb,CAAC,CAAC,OAAAuW,OAAA,EAAM;QACN,OAAO,KAAK;MACd;IACF,CAAC;IAED,MAAMC,uBAAuB,GAAIC,SAAS,IAAK;MAC7C,IAAI;QACF,MAAMC,MAAM,GAAG1W,QAAQ,iBAAA+L,MAAA,CAAiB0K,SAAS,GAAI;UAAEE,QAAQ,EAAE;QAAO,CAAC,CAAC;QAC1E,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;QACxB,MAAM,CAACtU,IAAI,GAAI+T,GAAG,CAAC,GAAGO,MAAM,CAACb,IAAI,CAAC,CAAC,CAACvT,KAAK,CAAC,GAAG,CAAC;QAC9C,IAAIF,IAAI,IAAI,IAAI,IAAI+T,GAAG,IAAI,IAAI,EAAE,OAAO,IAAI;QAC5C,OAAO;UAAE/T,IAAI;UAAE+T,GAAG,EAAEvI,MAAM,CAACuI,GAAG;QAAE,CAAC;MACnC,CAAC,CAAC,OAAOrJ,KAAK,EAAE;QACd,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAM8J,oBAAoB,GAAIH,SAAS,IAAK;MAC1C,IAAI;QACF,MAAMlO,IAAI,GAAG/J,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;QAC/C,MAAMqY,SAAS,GAAGtO,IAAI,CAACsN,IAAI,CAAC,CAAC,CAACvT,KAAK,CAAC,IAAI,CAAC,CAACwU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC/S,UAAU,IAAA+H,MAAA,CAAI0K,SAAS,MAAG,CAAC,CAAC;QACxF,IAAI,CAACI,SAAS,EAAE,OAAO,IAAI;QAC3B,MAAM,CAACzU,IAAI,GAAI+T,GAAG,CAAC,GAAGU,SAAS,CAAChB,IAAI,CAAC,CAAC,CAACvT,KAAK,CAAC,GAAG,CAAC;QACjD,IAAIF,IAAI,IAAI,IAAI,IAAI+T,GAAG,IAAI,IAAI,EAAE,OAAO,IAAI;QAC5C,OAAO;UAAE/T,IAAI;UAAE+T,GAAG,EAAEvI,MAAM,CAACuI,GAAG;QAAE,CAAC;MACnC,CAAC,CAAC,OAAOrJ,KAAK,EAAE;QACd,OAAO,IAAI;MACb;IACF,CAAC;IAEM,MAAMxO,YAAY,GAAImY,SAAS,IAAK;MACzC,IAAIO,SAAS,GAAGJ,oBAAoB,CAACH,SAAS,CAAC;MAC/C,IAAI,CAACO,SAAS,IAAIV,iBAAiB,CAAC,CAAC,EAAE;QACrCU,SAAS,GAAGR,uBAAuB,CAACC,SAAS,CAAC;MAChD;MACA,OAAOO,SAAS;IAClB,CAAC;IAED,IAAI3M,oBAAoB,GAAG,IAAI;IAE/BhM,eAAe,CAACgM,oBAAoB,GAAG,YAAW;MAChD,OAAOA,oBAAoB;IAC7B,CAAC;IAEDhM,eAAe,CAAC4Y,uBAAuB,GAAG,gBAAetR,KAAK,EAAE;MAC9D0E,oBAAoB,GAAG1E,KAAK;MAC5B,MAAMtH,eAAe,CAACoT,mBAAmB,CAAC,CAAC;IAC7C,CAAC;IAED,IAAIrH,OAAO;IAEX/L,eAAe,CAAC6Y,0BAA0B,GAAG,kBAAwC;MAAA,IAAzBC,eAAe,GAAAjI,SAAA,CAAAzM,MAAA,QAAAyM,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;MACjF9E,OAAO,GAAG+M,eAAe,GAAG,iBAAiB,GAAG,WAAW;MAC3D,MAAM9Y,eAAe,CAACoT,mBAAmB,CAAC,CAAC;IAC7C,CAAC;IAEDpT,eAAe,CAAC+Y,6BAA6B,GAAG,gBAAeC,MAAM,EAAE;MACrEjW,0BAA0B,GAAGiW,MAAM;MACnC,MAAMhZ,eAAe,CAACoT,mBAAmB,CAAC,CAAC;IAC7C,CAAC;IAEDpT,eAAe,CAACiZ,qBAAqB,GAAG,gBAAejF,MAAM,EAAE;MAC7D,IAAIkF,IAAI,GAAG,IAAI;MACf,MAAMA,IAAI,CAACH,6BAA6B,CAAC,UAAS/V,GAAG,EAAE;QACrD,OAAOgR,MAAM,GAAGhR,GAAG;MACrB,CAAC,CAAC;IACJ,CAAC;;IAED;IACA;IACA;IACA;IACA,IAAI2I,kBAAkB,GAAG,CAAC,CAAC;IAC3B3L,eAAe,CAACmZ,WAAW,GAAG,UAAS9V,QAAQ,EAAE;MAC/CsI,kBAAkB,CAAC,GAAG,GAAGvI,IAAI,CAACC,QAAQ,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ;IAC7D,CAAC;;IAED;IACArD,eAAe,CAAC2I,cAAc,GAAGA,cAAc;IAC/C3I,eAAe,CAAC2L,kBAAkB,GAAGA,kBAAkB;IAEvD,MAAMkE,eAAe,CAAC,CAAC;IAACuJ,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAF,IAAA;EAAAI,KAAA;AAAA,G;;;;;;;;;;;;;;ICthDxB3W,MAAM,CAAC7C,MAAM,CAAC;MAAC0B,wBAAwB,EAACA,CAAA,KAAIA,wBAAwB;MAACC,yBAAyB,EAACA,CAAA,KAAIA;IAAyB,CAAC,CAAC;IAAC,IAAI8X,QAAQ,EAACC,UAAU,EAACC,UAAU;IAAC9W,MAAM,CAAChD,IAAI,CAAC,IAAI,EAAC;MAAC4Z,QAAQA,CAAC1Z,CAAC,EAAC;QAAC0Z,QAAQ,GAAC1Z,CAAC;MAAA,CAAC;MAAC2Z,UAAUA,CAAC3Z,CAAC,EAAC;QAAC2Z,UAAU,GAAC3Z,CAAC;MAAA,CAAC;MAAC4Z,UAAUA,CAAC5Z,CAAC,EAAC;QAAC4Z,UAAU,GAAC5Z,CAAC;MAAA;IAAC,CAAC,EAAC,CAAC,CAAC;IAAC,IAAIgC,oBAAoB,CAAC,CAAC,EAAE,CAAC,MAAMA,oBAAoB,CAAC,CAAC,EAAE,CAAC;IAyB7T,MAAML,wBAAwB,GAAIkY,UAAU,IAAK;MACtD,IAAI;QACF,IAAIH,QAAQ,CAACG,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE;UACnC;UACA;UACAH,UAAU,CAACE,UAAU,CAAC;QACxB,CAAC,MAAM;UACL,MAAM,IAAIhT,KAAK,CACb,mCAAAgH,MAAA,CAAkCgM,UAAU,yBAC5C,8DAA8D,GAC9D,2BACF,CAAC;QACH;MACF,CAAC,CAAC,OAAOjL,KAAK,EAAE;QACd;QACA;QACA;QACA,IAAIA,KAAK,CAAC0C,IAAI,KAAK,QAAQ,EAAE;UAC3B,MAAM1C,KAAK;QACb;MACF;IACF,CAAC;IAKM,MAAMhN,yBAAyB,GACpC,SAAAA,CAACiY,UAAU,EAA6B;MAAA,IAA3BE,YAAY,GAAA/I,SAAA,CAAAzM,MAAA,QAAAyM,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAGH,OAAO;MACjC,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAChG,OAAO,CAACmP,MAAM,IAAI;QACxDD,YAAY,CAAC1R,EAAE,CAAC2R,MAAM,EAAE5S,MAAM,CAACwP,eAAe,CAAC,MAAM;UACnD,IAAIgD,UAAU,CAACC,UAAU,CAAC,EAAE;YAC1BF,UAAU,CAACE,UAAU,CAAC;UACxB;QACF,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC;IAACN,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAF,IAAA;EAAAI,KAAA;AAAA,G","file":"/packages/webapp.js","sourcesContent":["import assert from 'assert';\nimport { readFileSync, chmodSync, chownSync } from 'fs';\nimport { createServer } from 'http';\nimport { userInfo } from 'os';\nimport { join as pathJoin, dirname as pathDirname } from 'path';\nimport { parse as parseUrl } from 'url';\nimport { createHash } from 'crypto';\nimport express from 'express';\nimport compress from 'compression';\nimport cookieParser from 'cookie-parser';\nimport qs from 'qs';\nimport parseRequest from 'parseurl';\nimport { lookup as lookupUserAgent } from 'useragent';\nimport { isModern } from 'meteor/modern-browsers';\nimport send from 'send';\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\nimport cluster from 'cluster';\nimport { execSync } from 'child_process';\n\nvar SHORT_SOCKET_TIMEOUT = 5 * 1000;\nvar LONG_SOCKET_TIMEOUT = 120 * 1000;\n\nconst createExpressApp = () => {\n  const app = express();\n  // Security and performace headers\n  // these headers come from these docs: https://expressjs.com/en/api.html#app.settings.table\n  app.set('x-powered-by', false);\n  app.set('etag', false);\n  return app;\n}\nexport const WebApp = {};\nexport const WebAppInternals = {};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n\nWebAppInternals.NpmModules = {\n  express : {\n    version: Npm.require('express/package.json').version,\n    module: express,\n  }\n};\n\n// More of a convenience for the end user\nWebApp.express = express;\n\n// Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\nWebApp.defaultArch = 'web.browser.legacy';\n\n// XXX maps archs to manifests\nWebApp.clientPrograms = {};\n\n// XXX maps archs to program path on filesystem\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function(url) {\n  var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function(contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\nfunction shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n\n  // fallback to standard filter function\n  return compress.filter(req, res);\n}\n\n// #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of Express's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a Express `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\nvar camelCase = function(name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n  for (var i = 1; i < parts.length; ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n  return parts.join('');\n};\n\nvar identifyBrowser = function(userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch,\n  };\n};\n\n// XXX Refactor as part of implementing real routing.\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function(req) {\n  if (req.browser && req.arch && typeof req.modern === 'boolean') {\n    // Already categorized.\n    return req;\n  }\n\n  const browser = identifyBrowser(req.headers['user-agent']);\n  const modern = isModern(browser);\n  const path =\n    typeof req.pathname === 'string'\n      ? req.pathname\n      : parseRequest(req).pathname;\n\n  const categorized = {\n    browser,\n    modern,\n    path,\n    arch: WebApp.defaultArch,\n    url: parseUrl(req.url, true),\n    dynamicHead: req.dynamicHead,\n    dynamicBody: req.dynamicBody,\n    headers: req.headers,\n    cookies: req.cookies,\n  };\n\n  const pathParts = path.split('/');\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith('__')) {\n    const archCleaned = 'web.' + archKey.slice(2);\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n      return Object.assign(categorized, {\n        arch: archCleaned,\n        path: pathParts.join('/'),\n      });\n    }\n  }\n\n  // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n  const preferredArchOrder = isModern(browser)\n    ? ['web.browser', 'web.browser.legacy']\n    : ['web.browser.legacy', 'web.browser'];\n\n  for (const arch of preferredArchOrder) {\n    // If our preferred arch is not available, it's better to use another\n    // client arch that is available than to guarantee the site won't work\n    // by returning an unknown arch. For example, if web.browser.legacy is\n    // excluded using the --exclude-archs command-line option, legacy\n    // clients are better off receiving web.browser (which might actually\n    // work) than receiving an HTTP 404 response. If none of the archs in\n    // preferredArchOrder are defined, only then should we send a 404.\n    if (hasOwn.call(WebApp.clientPrograms, arch)) {\n      return Object.assign(categorized, { arch });\n    }\n  }\n\n  return categorized;\n};\n\n// HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\nvar htmlAttributeHooks = [];\nvar getHtmlAttributes = function(request) {\n  var combinedAttributes = {};\n  _.each(htmlAttributeHooks || [], function(hook) {\n    var attributes = hook(request);\n    if (attributes === null) return;\n    if (typeof attributes !== 'object')\n      throw Error('HTML attribute hook must return null or object');\n    _.extend(combinedAttributes, attributes);\n  });\n  return combinedAttributes;\n};\nWebApp.addHtmlAttributeHook = function(hook) {\n  htmlAttributeHooks.push(hook);\n};\n\n// Serve app HTML for this URL?\nvar appUrl = function(url) {\n  if (url === '/favicon.ico' || url === '/robots.txt') return false;\n\n  // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n  if (url === '/app.manifest') return false;\n\n  // Avoid serving app HTML for declared routes such as /sockjs/.\n  if (RoutePolicy.classify(url)) return false;\n\n  // we currently return app HTML on all URLs by default\n  return true;\n};\n\n// We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\nMeteor.startup(function() {\n  function getter(key) {\n    return function(arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key];\n      // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n      return typeof value === 'function' ? (program[key] = value()) : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter('version');\n  WebApp.calculateClientHashRefreshable = getter('versionRefreshable');\n  WebApp.calculateClientHashNonRefreshable = getter('versionNonRefreshable');\n  WebApp.calculateClientHashReplaceable = getter('versionReplaceable');\n  WebApp.getRefreshableAssets = getter('refreshableAssets');\n});\n\n// When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\nWebApp._timeoutAdjustmentRequestCallback = function(req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT);\n  // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n  var finishListeners = res.listeners('finish');\n  // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n  res.removeAllListeners('finish');\n  res.on('finish', function() {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n  _.each(finishListeners, function(l) {\n    res.on('finish', l);\n  });\n};\n\n// Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\nvar boilerplateByArch = {};\n\n// Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\nconst boilerplateDataCallbacks = Object.create(null);\nWebAppInternals.registerBoilerplateDataCallback = function(key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === 'function') {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  }\n\n  // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n  return previousCallback || null;\n};\n\n// Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous Express middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch);\n}\n\n/**\n * @summary Takes a runtime configuration object and\n * returns an encoded runtime string.\n * @locus Server\n * @param {Object} rtimeConfig\n * @returns {String}\n */\nWebApp.encodeRuntimeConfig = function(rtimeConfig) {\n  return JSON.stringify(encodeURIComponent(JSON.stringify(rtimeConfig)));\n};\n\n/**\n * @summary Takes an encoded runtime string and returns\n * a runtime configuration object.\n * @locus Server\n * @param {String} rtimeConfigString\n * @returns {Object}\n */\nWebApp.decodeRuntimeConfig = function(rtimeConfigStr) {\n  return JSON.parse(decodeURIComponent(JSON.parse(rtimeConfigStr)));\n};\n\nconst runtimeConfig = {\n  // hooks will contain the callback functions\n  // set by the caller to addRuntimeConfigHook\n  hooks: new Hook(),\n  // updateHooks will contain the callback functions\n  // set by the caller to addUpdatedNotifyHook\n  updateHooks: new Hook(),\n  // isUpdatedByArch is an object containing fields for each arch\n  // that this server supports.\n  // - Each field will be true when the server updates the runtimeConfig for that arch.\n  // - When the hook callback is called the update field in the callback object will be\n  // set to isUpdatedByArch[arch].\n  // = isUpdatedyByArch[arch] is reset to false after the callback.\n  // This enables the caller to cache data efficiently so they do not need to\n  // decode & update data on every callback when the runtimeConfig is not changing.\n  isUpdatedByArch: {},\n};\n\n/**\n * @name addRuntimeConfigHookCallback(options)\n * @locus Server\n * @isprototype true\n * @summary Callback for `addRuntimeConfigHook`.\n *\n * If the handler returns a _falsy_ value the hook will not\n * modify the runtime configuration.\n *\n * If the handler returns a _String_ the hook will substitute\n * the string for the encoded configuration string.\n *\n * **Warning:** the hook does not check the return value at all it is\n * the responsibility of the caller to get the formatting correct using\n * the helper functions.\n *\n * `addRuntimeConfigHookCallback` takes only one `Object` argument\n * with the following fields:\n * @param {Object} options\n * @param {String} options.arch The architecture of the client\n * requesting a new runtime configuration. This can be one of\n * `web.browser`, `web.browser.legacy` or `web.cordova`.\n * @param {Object} options.request\n * A NodeJs [IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage)\n * https://nodejs.org/api/http.html#http_class_http_incomingmessage\n * `Object` that can be used to get information about the incoming request.\n * @param {String} options.encodedCurrentConfig The current configuration object\n * encoded as a string for inclusion in the root html.\n * @param {Boolean} options.updated `true` if the config for this architecture\n * has been updated since last called, otherwise `false`. This flag can be used\n * to cache the decoding/encoding for each architecture.\n */\n\n/**\n * @summary Hook that calls back when the meteor runtime configuration,\n * `__meteor_runtime_config__` is being sent to any client.\n *\n * **returns**: <small>_Object_</small> `{ stop: function, callback: function }`\n * - `stop` <small>_Function_</small> Call `stop()` to stop getting callbacks.\n * - `callback` <small>_Function_</small> The passed in `callback`.\n * @locus Server\n * @param {addRuntimeConfigHookCallback} callback\n * See `addRuntimeConfigHookCallback` description.\n * @returns {Object} {{ stop: function, callback: function }}\n * Call the returned `stop()` to stop getting callbacks.\n * The passed in `callback` is returned also.\n */\nWebApp.addRuntimeConfigHook = function(callback) {\n  return runtimeConfig.hooks.register(callback);\n};\n\nasync function getBoilerplateAsync(request, arch) {\n  let boilerplate = boilerplateByArch[arch];\n  await runtimeConfig.hooks.forEachAsync(async hook => {\n    const meteorRuntimeConfig = await hook({\n      arch,\n      request,\n      encodedCurrentConfig: boilerplate.baseData.meteorRuntimeConfig,\n      updated: runtimeConfig.isUpdatedByArch[arch],\n    });\n    if (!meteorRuntimeConfig) return true;\n    boilerplate.baseData = Object.assign({}, boilerplate.baseData, {\n      meteorRuntimeConfig,\n    });\n    return true;\n  });\n  runtimeConfig.isUpdatedByArch[arch] = false;\n  const data = Object.assign(\n    {},\n    boilerplate.baseData,\n    {\n      htmlAttributes: getHtmlAttributes(request),\n    },\n    _.pick(request, 'dynamicHead', 'dynamicBody')\n  );\n\n  let madeChanges = false;\n  let promise = Promise.resolve();\n\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise\n      .then(() => {\n        const callback = boilerplateDataCallbacks[key];\n        return callback(request, data, arch);\n      })\n      .then(result => {\n        // Callbacks should return false if they did not make any changes.\n        if (result !== false) {\n          madeChanges = true;\n        }\n      });\n  });\n\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers,\n  }));\n}\n\n/**\n * @name addUpdatedNotifyHookCallback(options)\n * @summary callback handler for `addupdatedNotifyHook`\n * @isprototype true\n * @locus Server\n * @param {Object} options\n * @param {String} options.arch The architecture that is being updated.\n * This can be one of `web.browser`, `web.browser.legacy` or `web.cordova`.\n * @param {Object} options.manifest The new updated manifest object for\n * this `arch`.\n * @param {Object} options.runtimeConfig The new updated configuration\n * object for this `arch`.\n */\n\n/**\n * @summary Hook that runs when the meteor runtime configuration\n * is updated.  Typically the configuration only changes during development mode.\n * @locus Server\n * @param {addUpdatedNotifyHookCallback} handler\n * The `handler` is called on every change to an `arch` runtime configuration.\n * See `addUpdatedNotifyHookCallback`.\n * @returns {Object} {{ stop: function, callback: function }}\n */\nWebApp.addUpdatedNotifyHook = function(handler) {\n  return runtimeConfig.updateHooks.register(handler);\n};\n\nWebAppInternals.generateBoilerplateInstance = function(\n  arch,\n  manifest,\n  additionalOptions\n) {\n  additionalOptions = additionalOptions || {};\n\n  runtimeConfig.isUpdatedByArch[arch] = true;\n  const rtimeConfig = {\n    ...__meteor_runtime_config__,\n    ...(additionalOptions.runtimeConfigOverrides || {}),\n  };\n  runtimeConfig.updateHooks.forEach(cb => {\n    cb({ arch, manifest, runtimeConfig: rtimeConfig });\n    return true;\n  });\n\n  const meteorRuntimeConfig = JSON.stringify(\n    encodeURIComponent(JSON.stringify(rtimeConfig))\n  );\n\n  return new Boilerplate(\n    arch,\n    manifest,\n    Object.assign(\n      {\n        pathMapper(itemPath) {\n          return pathJoin(archPath[arch], itemPath);\n        },\n        baseDataExtension: {\n          additionalStaticJs: _.map(additionalStaticJs || [], function(\n            contents,\n            pathname\n          ) {\n            return {\n              pathname: pathname,\n              contents: contents,\n            };\n          }),\n          // Convert to a JSON string, then get rid of most weird characters, then\n          // wrap in double quotes. (The outermost JSON.stringify really ought to\n          // just be \"wrap in double quotes\" but we use it to be safe.) This might\n          // end up inside a <script> tag so we need to be careful to not include\n          // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n          // https://github.com/meteor/meteor/issues/3730\n          meteorRuntimeConfig,\n          meteorRuntimeHash: sha1(meteorRuntimeConfig),\n          rootUrlPathPrefix:\n            __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n          bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n          sriMode: sriMode,\n          inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n          inline: additionalOptions.inline,\n        },\n      },\n      additionalOptions\n    )\n  );\n};\n\n// A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\nWebAppInternals.staticFilesMiddleware = async function(\n  staticFilesByArch,\n  req,\n  res,\n  next\n) {\n  var pathname = parseRequest(req).pathname;\n  try {\n    pathname = decodeURIComponent(pathname);\n  } catch (e) {\n    next();\n    return;\n  }\n\n  var serveStaticJs = function(s) {\n    if (\n      req.method === 'GET' ||\n      req.method === 'HEAD' ||\n      Meteor.settings.packages?.webapp?.alwaysReturnContent\n    ) {\n      res.writeHead(200, {\n        'Content-type': 'application/javascript; charset=UTF-8',\n        'Content-Length': Buffer.byteLength(s),\n      });\n      res.write(s);\n      res.end();\n    } else {\n      const status = req.method === 'OPTIONS' ? 200 : 405;\n      res.writeHead(status, {\n        Allow: 'OPTIONS, GET, HEAD',\n        'Content-Length': '0',\n      });\n      res.end();\n    }\n  };\n\n  if (\n    _.has(additionalStaticJs, pathname) &&\n    !WebAppInternals.inlineScriptsAllowed()\n  ) {\n    serveStaticJs(additionalStaticJs[pathname]);\n    return;\n  }\n\n  const { arch, path } = WebApp.categorizeRequest(req);\n\n  if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n    // We could come here in case we run with some architectures excluded\n    next();\n    return;\n  }\n\n  // If pauseClient(arch) has been called, program.paused will be a\n  // Promise that will be resolved when the program is unpaused.\n  const program = WebApp.clientPrograms[arch];\n  await program.paused;\n\n  if (\n    path === '/meteor_runtime_config.js' &&\n    !WebAppInternals.inlineScriptsAllowed()\n  ) {\n    serveStaticJs(\n      `__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`\n    );\n    return;\n  }\n\n  const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n  if (!info) {\n    next();\n    return;\n  }\n  // \"send\" will handle HEAD & GET requests\n  if (\n    req.method !== 'HEAD' &&\n    req.method !== 'GET' &&\n    !Meteor.settings.packages?.webapp?.alwaysReturnContent\n  ) {\n    const status = req.method === 'OPTIONS' ? 200 : 405;\n    res.writeHead(status, {\n      Allow: 'OPTIONS, GET, HEAD',\n      'Content-Length': '0',\n    });\n    res.end();\n    return;\n  }\n\n  // We don't need to call pause because, unlike 'static', once we call into\n  // 'send' and yield to the event loop, we never call another handler with\n  // 'next'.\n\n  // Cacheable files are files that should never change. Typically\n  // named by their hash (eg meteor bundled js and css files).\n  // We cache them ~forever (1yr).\n  const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n\n  if (info.cacheable) {\n    // Since we use req.headers[\"user-agent\"] to determine whether the\n    // client should receive modern or legacy resources, tell the client\n    // to invalidate cached resources when/if its user agent string\n    // changes in the future.\n    res.setHeader('Vary', 'User-Agent');\n  }\n\n  // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n  // understand.  (The SourceMap header is slightly more spec-correct but FF\n  // doesn't understand it.)\n  //\n  // You may also need to enable source maps in Chrome: open dev tools, click\n  // the gear in the bottom right corner, and select \"enable source maps\".\n  if (info.sourceMapUrl) {\n    res.setHeader(\n      'X-SourceMap',\n      __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl\n    );\n  }\n\n  if (info.type === 'js' || info.type === 'dynamic js') {\n    res.setHeader('Content-Type', 'application/javascript; charset=UTF-8');\n  } else if (info.type === 'css') {\n    res.setHeader('Content-Type', 'text/css; charset=UTF-8');\n  } else if (info.type === 'json') {\n    res.setHeader('Content-Type', 'application/json; charset=UTF-8');\n  }\n\n  if (info.hash) {\n    res.setHeader('ETag', '\"' + info.hash + '\"');\n  }\n\n  if (info.content) {\n    res.setHeader('Content-Length', Buffer.byteLength(info.content));\n    res.write(info.content);\n    res.end();\n  } else {\n    send(req, info.absolutePath, {\n      maxage: maxAge,\n      dotfiles: 'allow', // if we specified a dotfile in the manifest, serve it\n      lastModified: false, // don't set last-modified based on the file date\n    })\n      .on('error', function(err) {\n        Log.error('Error serving static file ' + err);\n        res.writeHead(500);\n        res.end();\n      })\n      .on('directory', function() {\n        Log.error('Unexpected directory ' + info.absolutePath);\n        res.writeHead(500);\n        res.end();\n      })\n      .pipe(res);\n  }\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  }\n\n  // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path];\n      // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n      if (typeof info === 'function') {\n        info = staticFiles[path] = info();\n      }\n      return info;\n    }\n\n    // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    }\n\n    // If categorizeRequest returned an alternate path, try that instead.\n    if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n\n  return info;\n}\n\n// Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n  return parsedPort;\n};\n\nimport { onMessage } from 'meteor/inter-process-messaging';\n\nonMessage('webapp-pause-client', async ({ arch }) => {\n  await WebAppInternals.pauseClient(arch);\n});\n\nonMessage('webapp-reload-client', async ({ arch }) => {\n  await WebAppInternals.generateClientProgram(arch);\n});\n\nasync function runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._AsynchronousQueue();\n\n  var getItemPathname = function(itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = async function() {\n    await syncQueue.runTask(function() {\n      const staticFilesByArch = Object.create(null);\n\n      const { configJson } = __meteor_bootstrap__;\n      const clientArchs =\n        configJson.clientArchs || Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error('Error reloading the client program: ' + e.stack);\n        process.exit(1);\n      }\n    });\n  };\n\n  // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n  WebAppInternals.pauseClient = async function(arch) {\n    await syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const { unpause } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === 'function') {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function() {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = async function(arch) {\n    await syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(\n    arch,\n    staticFilesByArch = WebAppInternals.staticFilesByArch\n  ) {\n    const clientDir = pathJoin(\n      pathDirname(__meteor_bootstrap__.serverDir),\n      arch\n    );\n\n    // read the control for the client we'll be serving up\n    const programJsonPath = pathJoin(clientDir, 'program.json');\n\n    let programJson;\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === 'ENOENT') return;\n      throw e;\n    }\n\n    if (programJson.format !== 'web-program-pre1') {\n      throw new Error(\n        'Unsupported format for client assets: ' +\n          JSON.stringify(programJson.format)\n      );\n    }\n\n    if (!programJsonPath || !clientDir || !programJson) {\n      throw new Error('Client config file not parsed.');\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = (staticFilesByArch[arch] = Object.create(null));\n\n    const { manifest } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === 'client') {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type,\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true,\n          };\n        }\n      }\n    });\n\n    const { PUBLIC_SETTINGS } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS,\n    };\n\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = (WebApp.clientPrograms[arch] = {\n      format: 'web-program-pre1',\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () =>\n        WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n      versionRefreshable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          type => type === 'css',\n          configOverrides\n        ),\n      versionNonRefreshable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          (type, replaceable) => type !== 'css' && !replaceable,\n          configOverrides\n        ),\n      versionReplaceable: () =>\n        WebAppHashing.calculateClientHash(\n          manifest,\n          (_type, replaceable) => replaceable,\n          configOverrides\n        ),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS,\n      hmrVersion: programJson.hmrVersion,\n    });\n\n    // Expose program details as a string reachable via the following URL.\n    const manifestUrlPrefix = '/__' + arch.replace(/^web\\./, '');\n    const manifestUrl = manifestUrlPrefix + getItemPathname('/manifest.json');\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion,\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === 'function') {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: 'json',\n      };\n    };\n\n    generateBoilerplateForArch(arch);\n\n    // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n    if (oldProgram && oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  }\n\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL:\n          process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl(),\n      },\n    },\n\n    'web.browser': {\n      runtimeConfigOverrides: {\n        isModern: true,\n      },\n    },\n\n    'web.browser.legacy': {\n      runtimeConfigOverrides: {\n        isModern: false,\n      },\n    },\n  };\n\n  WebAppInternals.generateBoilerplate = async function() {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    await syncQueue.runTask(function() {\n      Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const { baseData } = (boilerplateByArch[\n      arch\n    ] = WebAppInternals.generateBoilerplateInstance(\n      arch,\n      program.manifest,\n      additionalOptions\n    ));\n    // We need the runtime config with overrides for meteor_runtime_config.js:\n    program.meteorRuntimeConfig = JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || null),\n    });\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url),\n    }));\n  }\n\n  await WebAppInternals.reloadClientPrograms();\n\n  // webserver\n  var app = createExpressApp()\n\n  // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawExpressHandlers.\n  var rawExpressHandlers = createExpressApp()\n  app.use(rawExpressHandlers);\n\n  // Auto-compress any json, javascript, or text.\n  app.use(compress({ filter: shouldCompress }));\n\n  // parse cookies into an object\n  app.use(cookieParser());\n\n  // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n  app.use(function(req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n    res.writeHead(400);\n    res.write('Not a proxy');\n    res.end();\n  });\n\n  // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n  app.use(function(request, response, next) {\n    request.query = qs.parse(parseUrl(request.url).query);\n    next();\n  });\n\n  function getPathParts(path) {\n    const parts = path.split('/');\n    while (parts[0] === '') parts.shift();\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return (\n      prefix.length <= array.length &&\n      prefix.every((part, i) => part === array[i])\n    );\n  }\n\n  // Strip off the path prefix, if it exists.\n  app.use(function(request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const { pathname, search } = parseUrl(request.url);\n\n    // check if the path in the url starts with the path prefix\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = '/' + pathParts.slice(prefixParts.length).join('/');\n        if (search) {\n          request.url += search;\n        }\n        return next();\n      }\n    }\n\n    if (pathname === '/favicon.ico' || pathname === '/robots.txt') {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write('Unknown path');\n      response.end();\n      return;\n    }\n\n    next();\n  });\n\n  // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n  app.use(function(req, res, next) {\n    // console.log(String(arguments.callee));\n    WebAppInternals.staticFilesMiddleware(\n      WebAppInternals.staticFilesByArch,\n      req,\n      res,\n      next\n    );\n  });\n\n  // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n  app.use((WebAppInternals.meteorInternalHandlers = createExpressApp()));\n\n  /**\n   * @name expressHandlersCallback(req, res, next)\n   * @locus Server\n   * @isprototype true\n   * @summary callback handler for `WebApp.expressHandlers`\n   * @param {Object} req\n   * a Node.js\n   * [IncomingMessage](https://nodejs.org/api/http.html#class-httpincomingmessage)\n   * object with some extra properties. This argument can be used\n   *  to get information about the incoming request.\n   * @param {Object} res\n   * a Node.js\n   * [ServerResponse](https://nodejs.org/api/http.html#class-httpserverresponse)\n   * object. Use this to write data that should be sent in response to the\n   * request, and call `res.end()` when you are done.\n   * @param {Function} next\n   * Calling this function will pass on the handling of\n   * this request to the next relevant handler.\n   *\n   */\n\n  /**\n   * @method handlers\n   * @memberof WebApp\n   * @locus Server\n   * @summary Register a handler for all HTTP requests.\n   * @param {String} [path]\n   * This handler will only be called on paths that match\n   * this string. The match has to border on a `/` or a `.`.\n   *\n   * For example, `/hello` will match `/hello/world` and\n   * `/hello.world`, but not `/hello_world`.\n   * @param {expressHandlersCallback} handler\n   * A handler function that will be called on HTTP requests.\n   * See `expressHandlersCallback`\n   *\n   */\n  // Packages and apps can add handlers to this via WebApp.expressHandlers.\n  // They are inserted before our default handler.\n  var packageAndAppHandlers = createExpressApp()\n  app.use(packageAndAppHandlers);\n\n  let suppressExpressErrors = false;\n  // Express knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n  app.use(function(err, req, res, next) {\n    if (!err || !suppressExpressErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n    res.writeHead(err.status, { 'Content-Type': 'text/plain' });\n    res.end('An error message');\n  });\n\n  app.use(async function(req, res, next) {\n    if (!appUrl(req.url)) {\n      return next();\n    } else if (\n      req.method !== 'HEAD' &&\n      req.method !== 'GET' &&\n      !Meteor.settings.packages?.webapp?.alwaysReturnContent\n    ) {\n      const status = req.method === 'OPTIONS' ? 200 : 405;\n      res.writeHead(status, {\n        Allow: 'OPTIONS, GET, HEAD',\n        'Content-Length': '0',\n      });\n      res.end();\n    } else {\n      var headers = {\n        'Content-Type': 'text/html; charset=utf-8',\n      };\n\n      if (shuttingDown) {\n        headers['Connection'] = 'Close';\n      }\n\n      var request = WebApp.categorizeRequest(req);\n\n      if (request.url.query && request.url.query['meteor_css_resource']) {\n        // In this case, we're requesting a CSS resource in the meteor-specific\n        // way, but we don't have it.  Serve a static css file that indicates that\n        // we didn't have it, so we can detect that and refresh.  Make sure\n        // that any proxies or CDNs don't cache this error!  (Normally proxies\n        // or CDNs are smart enough not to cache error pages, but in order to\n        // make this hack work, we need to return the CSS file as a 200, which\n        // would otherwise be cached.)\n        headers['Content-Type'] = 'text/css; charset=utf-8';\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(200, headers);\n        res.write('.meteor-css-not-found-error { width: 0px;}');\n        res.end();\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_js_resource']) {\n        // Similarly, we're requesting a JS resource that we don't have.\n        // Serve an uncached 404. (We can't use the same hack we use for CSS,\n        // because actually acting on that hack requires us to have the JS\n        // already!)\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end('404 Not Found');\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n        // When downloading files during a Cordova hot code push, we need\n        // to detect if a file is not available instead of inadvertently\n        // downloading the default index page.\n        // So similar to the situation above, we serve an uncached 404.\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end('404 Not Found');\n        return;\n      }\n\n      const { arch } = request;\n      assert.strictEqual(typeof arch, 'string', { arch });\n\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        if (Meteor.isDevelopment) {\n          res.end(`No client program found for the ${arch} architecture.`);\n        } else {\n          // Safety net, but this branch should not be possible.\n          res.end('404 Not Found');\n        }\n        return;\n      }\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      await WebApp.clientPrograms[arch].paused;\n\n      return getBoilerplateAsync(request, arch)\n        .then(({ stream, statusCode, headers: newHeaders }) => {\n          if (!statusCode) {\n            statusCode = res.statusCode ? res.statusCode : 200;\n          }\n\n          if (newHeaders) {\n            Object.assign(headers, newHeaders);\n          }\n\n          res.writeHead(statusCode, headers);\n\n          stream.pipe(res, {\n            // End the response when the stream ends.\n            end: true,\n          });\n        })\n        .catch(error => {\n          Log.error('Error running template: ' + error.stack);\n          res.writeHead(500, headers);\n          res.end();\n        });\n    }\n  });\n\n  // Return 404 by default, if no other handlers serve this URL.\n  app.use(function(req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n\n  var httpServer = createServer(app);\n  var onListeningCallbacks = [];\n\n  // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n  // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  });\n\n  const suppressErrors = function() {\n    suppressExpressErrors = true;\n  };\n\n  let warnedAboutConnectUsage = false;\n\n  // start up app\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    handlers: packageAndAppHandlers,\n    rawConnectHandlers: rawExpressHandlers,\n    rawHandlers: rawExpressHandlers,\n    httpServer: httpServer,\n    expressApp: app,\n    // For testing.\n    suppressConnectErrors: () => {\n      if (! warnedAboutConnectUsage) {\n        Meteor._debug(\"WebApp.suppressConnectErrors has been renamed to Meteor._suppressExpressErrors and it should be used only in tests.\");\n        warnedAboutConnectUsage = true;\n      }\n      suppressErrors();\n    },\n    _suppressExpressErrors: suppressErrors,\n    onListening: function(f) {\n      if (onListeningCallbacks) onListeningCallbacks.push(f);\n      else f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function(httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    },\n  });\n\n    /**\n   * @name main\n   * @locus Server\n   * @summary Starts the HTTP server.\n   *  If `UNIX_SOCKET_PATH` is present Meteor's HTTP server will use that socket file for inter-process communication, instead of TCP.\n   * If you choose to not include webapp package in your application this method still must be defined for your Meteor application to work.\n   */\n  // Let the rest of the packages (and Meteor.startup hooks) insert Express\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n  exports.main = async argv => {\n    await WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(\n        argv?.httpServer || httpServer,\n        listenOptions,\n        Meteor.bindEnvironment(\n          () => {\n            if (process.env.METEOR_PRINT_ON_LISTEN) {\n              console.log('LISTENING');\n            }\n            const callbacks = onListeningCallbacks;\n            onListeningCallbacks = null;\n            callbacks?.forEach(callback => {\n              callback();\n            });\n          },\n          e => {\n            console.error('Error listening:', e);\n            console.error(e && e.stack);\n          }\n        )\n      );\n    };\n\n    let localPort = process.env.PORT || 0;\n    let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      if (cluster.isWorker) {\n        const workerName = cluster.worker.process.env.name || cluster.worker.id;\n        unixSocketPath += '.' + workerName + '.sock';\n      }\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({ path: unixSocketPath });\n\n      const unixSocketPermissions = (\n        process.env.UNIX_SOCKET_PERMISSIONS || ''\n      ).trim();\n      if (unixSocketPermissions) {\n        if (/^[0-7]{3}$/.test(unixSocketPermissions)) {\n          chmodSync(unixSocketPath, parseInt(unixSocketPermissions, 8));\n        } else {\n          throw new Error('Invalid UNIX_SOCKET_PERMISSIONS specified');\n        }\n      }\n\n      const unixSocketGroup = (process.env.UNIX_SOCKET_GROUP || '').trim();\n      if (unixSocketGroup) {\n        const unixSocketGroupInfo = getGroupInfo(unixSocketGroup);\n        if (unixSocketGroupInfo === null) {\n          throw new Error('Invalid UNIX_SOCKET_GROUP name specified');\n        }\n        chownSync(unixSocketPath, userInfo().uid, unixSocketGroupInfo.gid);\n      }\n\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({ path: localPort });\n      } else if (typeof localPort === 'number') {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || '0.0.0.0',\n        });\n      } else {\n        throw new Error('Invalid PORT specified');\n      }\n    }\n\n    return 'DAEMON';\n  };\n}\n\nconst isGetentAvailable = () => {\n  try {\n    execSync('which getent');\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst getGroupInfoUsingGetent = (groupName) => {\n  try {\n    const stdout = execSync(`getent group ${groupName}`, { encoding: 'utf8' });\n    if (!stdout) return null;\n    const [name, , gid] = stdout.trim().split(':');\n    if (name == null || gid == null) return null;\n    return { name, gid: Number(gid) };\n  } catch (error) {\n    return null;\n  }\n};\n\nconst getGroupInfoFromFile = (groupName) => {\n  try {\n    const data = readFileSync('/etc/group', 'utf8');\n    const groupLine = data.trim().split('\\n').find(line => line.startsWith(`${groupName}:`));\n    if (!groupLine) return null;\n    const [name, , gid] = groupLine.trim().split(':');\n    if (name == null || gid == null) return null;\n    return { name, gid: Number(gid) };\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const getGroupInfo = (groupName) => {\n  let groupInfo = getGroupInfoFromFile(groupName);\n  if (!groupInfo && isGetentAvailable()) {\n    groupInfo = getGroupInfoUsingGetent(groupName);\n  }\n  return groupInfo;\n};\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function() {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = async function(value) {\n  inlineScriptsAllowed = value;\n  await WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = async function(use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  await WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = async function(hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  await WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = async function(prefix) {\n  var self = this;\n  await self.setBundledJsCssUrlRewriteHook(function(url) {\n    return prefix + url;\n  });\n};\n\n// Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\nvar additionalStaticJs = {};\nWebAppInternals.addStaticJs = function(contents) {\n  additionalStaticJs['/' + sha1(contents) + '.js'] = contents;\n};\n\n// Exported for tests\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs;\n\nawait runWebAppServer();\n","import { statSync, unlinkSync, existsSync } from 'fs';\n\n// Since a new socket file will be created when the HTTP server\n// starts up, if found remove the existing file.\n//\n// WARNING:\n// This will remove the configured socket file without warning. If\n// the configured socket file is already in use by another application,\n// it will still be removed. Node does not provide a reliable way to\n// differentiate between a socket file that is already in use by\n// another application or a stale socket file that has been\n// left over after a SIGKILL. Since we have no reliable way to\n// differentiate between these two scenarios, the best course of\n// action during startup is to remove any existing socket file. This\n// is not the safest course of action as removing the existing socket\n// file could impact an application using it, but this approach helps\n// ensure the HTTP server can startup without manual\n// intervention (e.g. asking for the verification and cleanup of socket\n// files before allowing the HTTP server to be started).\n//\n// The above being said, as long as the socket file path is\n// configured carefully when the application is deployed (and extra\n// care is taken to make sure the configured path is unique and doesn't\n// conflict with another socket file path), then there should not be\n// any issues with this approach.\nexport const removeExistingSocketFile = (socketPath) => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\n        `An existing file was found at \"${socketPath}\" and it is not ` +\n        'a socket file. Please confirm PORT is pointing to valid and ' +\n        'un-used socket file path.'\n      );\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\n// Remove the socket file when done to avoid leaving behind a stale one.\n// Note - a stale socket file is still left behind if the running node\n// process is killed via signal 9 - SIGKILL.\nexport const registerSocketFileCleanup =\n  (socketPath, eventEmitter = process) => {\n    ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n      eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n        if (existsSync(socketPath)) {\n          unlinkSync(socketPath);\n        }\n      }));\n    });\n  };\n"]}}]