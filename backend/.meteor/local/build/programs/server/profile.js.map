{"version":3,"names":["module","export","Profile","filter","parseFloat","process","env","METEOR_PROFILE","bucketStats","Object","create","SPACES_STR","spaces","len","length","slice","DOTS_STR","dots","leftRightAlign","str1","str2","middle","Math","max","leftRightDots","printIndentation","isLastLeafStack","init","i","isLastLeaf","last","formatMs","n","String","round","replace","encodeEntryKey","entry","join","decodeEntryKey","key","split","globalEntry","running","bucketName","f","enabled","assign","profileWrapper","apply","arguments","name","currentEntry","push","start","hrtime","elapsed","stats","time","count","isOther","pop","_runAsync","bucket","runningName","print","concat","reportNum","report","_runSync","run","console","log","isAsyncFn","constructor","setupReport","reportHierarchy","reportHotLeaves","getTopLevelTotal","runSetters","entries","prefix","entryName","entryStats","entryTime","isTopLevelEntry","topLevelEntries","text","isChild","entry1","entry2","children","hasChildren","hasSignificantChildren","some","isLeaf","otherTime","total","forEach","child","injectOtherTime","other","reportOn","undefined","isParent","childrenList","allLeafs","set","map","keys","sort","leafTotals","leafName","leaf","totals","info","a","b","topTotal","parent"],"sources":["tools/tool-env/profile.ts"],"sourcesContent":["// Tiny profiler\n//\n// Enable by setting the environment variable `METEOR_PROFILE`.\n//\n// The main entry point is `Profile`, which wraps an existing function\n// and returns a new function which, when called, calls the original\n// function and profiles it.\n//\n// before:\n//\n//     foo: function (a) {\n//       return a + this.b;\n//     },\n//\n// after:\n//\n//     foo: Profile(\"foo\", function (a) {\n//       return a + this.b;\n//     }),\n//\n// The advantage of this form is that it doesn't change the\n// indentation of the wrapped code, which makes merging changes from\n// other code branches easier.\n//\n// If profiling is disabled (if `METEOR_PROFILE` isn't set), `Profile`\n// simply returns the original function.\n//\n// To run a profiling session and print the report, call `Profile.run`:\n//\n//     var createBundle = function () {\n//       Profile.run(\"bundle\", function () {\n//         ...code to create the bundle which includes calls to `Profile`.\n//       });\n//     };\n//\n// Code is not profiled when called outside of a `Profile.run`, so the\n// times in the report only include the time spent inside of the call\n// to `Profile.run`.\n//\n// Sometimes you'll want to use a name for the profile bucket which\n// depends on the arguments passed to the function or the value of\n// `this`.  In this case you can pass a function for the bucket\n// argument, which will be called to get the bucket name.\n//\n// before:\n//     build: function (target) {\n//       ... build target ...\n//     },\n//\n// after:\n//     build: Profile(\n//       function (target) { return \"build \" + target; },\n//       function (target) {\n//         ... build target ...\n//       }),\n//\n// But if it's easier, you can use `Profile.time` instead, which\n// immediately calls the passed function with no arguments and\n// profiles it, and returns what the function returns.\n//\n//     foo: function (a) {\n//       var self = this;\n//       return Profile.time(\"foo\", function () {\n//         return a + self.b;\n//       });\n//     },\n//\n//     build: function (target) {\n//       var self = this;\n//       self.doSomeSetup();\n//       Profile.time(\"build \" + target, function () {\n//         ... build target ...\n//       });\n//       self.doSomeCleanup();\n//     },\n//\n// The disadvantage is that you end up changing the indentation of the\n// profiled code, which makes merging branches more painful.  But you\n// can profile anywhere in the code; you don't have to just profile at\n// function boundaries.\n//\n// Note profiling code will itself add a bit of execution time.\n// If you profile in a tight loop and your total execution time is\n// going up, you're probably starting to profile how long it takes to\n// profile things :).\n//\n// If another profile (such as \"compile js\") is called while the first\n// function is currently being profiled, this creates an entry like\n// this:\n//\n//    build client : compile js\n//\n// which can continue to be nested, e.g.,\n//\n//    build client : compile js : read source files\n//\n// The total time reported for a bucket such as \"build client\" doesn't\n// change regardless of whether it has child entries or not.  However,\n// if an entry has child entries, it automatically gets an \"other\"\n// entry:\n//\n//     build client: 400.0\n//       compile js: 300.0\n//         read source files: 20.0\n//         other compile js: 280.0\n//       other build client: 100.0\n//\n// The \"other\" entry reports how much time was spent in the \"build\n// client\" entry not spent in the other child entries.\n//\n// The are two reports displayed: the hierarchical report and the\n// leaf time report.  The hierarchical report looks like the example\n// above and shows how much time was spent in each entry within its\n// parent entry.\n//\n// The primary purpose of the hierarchical report is to be able to see\n// where times are unaccounted for.  If you see a lot of time being\n// spent in an \"other\" bucket, and you don't know what it is, you can\n// add more profiling to dig deeper.\n//\n// The leaf time report shows the total time spent within leaf\n// buckets.  For example, if if multiple steps have \"read source\n// files\", the leaf time reports shows the total amount of time spent\n// in \"read source files\" across all calls.\n//\n// Once you see in the hierarchical report that you have a good handle\n// on accounting for most of the time, the leaf report shows you which\n// buckets are the most expensive.\n//\n// By only including leaf buckets, the times in the leaf report are\n// non-overlapping.  (The total of the times equals the elapsed time\n// being profiled).\n//\n// For example, suppose \"A\" is profiled for a total time of 200ms, and\n// that includes a call to \"B\" of 150ms:\n//\n//     B: 150\n//     A (without B): 50\n//\n// and suppose there's another call to \"A\" which *doesn't* include a\n// call to \"B\":\n//\n//     A: 300\n//\n// and there's a call to \"B\" directly:\n//\n//     B: 100\n//\n// All for a total time of 600ms.  In the hierarchical report, this\n// looks like:\n//\n//     A: 500.0\n//       B: 150.0\n//       other A: 350.0\n//     B: 100.0\n//\n// and in the leaf time report:\n//\n//     other A: 350.0\n//     B: 250.0\n//\n// In both reports the grand total is 600ms.\n\n\nconst filter = parseFloat(process.env.METEOR_PROFILE || \"100\"); // ms\n\ntype Stats = {\n  time: number;\n  count: number;\n  isOther: boolean;\n}\n\nlet bucketStats: Record<string, Stats> = Object.create(null);\n\nlet SPACES_STR = ' ';\n// return a string of `x` spaces\nfunction spaces(len: number) {\n  while (SPACES_STR.length < len) {\n    SPACES_STR = SPACES_STR + SPACES_STR;\n  }\n  return SPACES_STR.slice(0, len);\n}\n\nlet DOTS_STR = '.';\n// return a string of `x` dots\nfunction dots(len: number) {\n  while (DOTS_STR.length < len) {\n    DOTS_STR = DOTS_STR + DOTS_STR;\n  }\n  return DOTS_STR.slice(0, len);\n}\n\nfunction leftRightAlign(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + spaces(middle) + str2;\n}\n\nfunction leftRightDots(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + dots(middle) + str2;\n}\n\nfunction printIndentation(isLastLeafStack: boolean[]) {\n  if (!isLastLeafStack.length) {\n    return '';\n  }\n\n  const { length } = isLastLeafStack;\n  let init = '';\n  for (let i = 0; i < length - 1; ++i) {\n    const isLastLeaf = isLastLeafStack[i];\n    init += isLastLeaf ? '   ' : '│  ';\n  }\n\n  const last = isLastLeafStack[length - 1] ? '└─ ' : '├─ ';\n\n  return init + last;\n}\n\nfunction formatMs(n: number) {\n  // integer with thousands separators\n  return String(Math.round(n)).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\";\n}\n\nfunction encodeEntryKey(entry: string[]) {\n  return entry.join('\\t');\n}\n\nfunction decodeEntryKey(key: string) {\n  return key.split('\\t');\n}\n\nconst globalEntry: string[] = [];\nlet running = false;\n\nexport function Profile<\n  TArgs extends any[],\n  TResult,\n>(\n  bucketName: string | ((...args: TArgs) => string),\n  f: (...args: TArgs) => TResult,\n): typeof f {\n  if (! Profile.enabled) {\n    return f;\n  }\n\n  return Object.assign(function profileWrapper(this: any) {\n    if (! running) {\n      return f.apply(this, arguments as any);\n    }\n\n    const name = typeof bucketName === \"function\"\n      ? bucketName.apply(this, arguments as any)\n      : bucketName;\n\n    // TODO Test with Profile / use __METEOR_ASYNC_LOCAL_STORAGE\n    //const currentStore = asyncLo\n    // const currentEntry = Fiber.current\n    //   ? Fiber.current.profilerEntry || (Fiber.current.profilerEntry = [])\n    //   : globalEntry;\n    const currentEntry = globalEntry;\n\n    currentEntry.push(name);\n    const key = encodeEntryKey(currentEntry);\n    const start = process.hrtime();\n    try {\n      return f.apply(this, arguments as any);\n    } finally {\n      const elapsed = process.hrtime(start);\n      const stats = (bucketStats[key] || (bucketStats[key] = {\n        time: 0.0,\n        count: 0,\n        isOther: false,\n      }));\n      stats.time += (elapsed[0] * 1000 + elapsed[1] / 1000000);\n      stats.count++;\n      currentEntry.pop();\n    }\n  }, f) as typeof f;\n}\n\nexport namespace Profile {\n  export let enabled = !! process.env.METEOR_PROFILE;\n\n  async function _runAsync<TResult>(bucket: string, f: () => TResult) {\n    runningName = bucket;\n    print(`(#${reportNum}) Profiling: ${runningName}`);\n    start();\n    try {\n      return await time(bucket, f);\n    } finally {\n      report();\n      reportNum++;\n    }\n  }\n\n  function _runSync<TResult>(bucket: string, f: () => TResult) {\n    runningName = bucket;\n    print(`(#${reportNum}) Profiling: ${runningName}`);\n    start();\n    try {\n      return time(bucket, f);\n    } finally {\n      report();\n      reportNum++;\n    }\n  }\n\n  export function time<TResult>(bucket: string, f: () => TResult) {\n    return Profile(bucket, f)();\n  }\n\n  export function run<TResult>(bucket: string, f: () => TResult) {\n    if (! Profile.enabled) {\n      return f();\n    }\n\n    if (running) {\n      // We've kept the calls to Profile.run in the tool disjoint so far,\n      // and should probably keep doing so, but if we mess up, warn and continue.\n      console.log(\"Warning: Nested Profile.run at \" + bucket);\n      return time(bucket, f);\n    }\n\n    const isAsyncFn = f.constructor.name === \"AsyncFunction\";\n    if (!isAsyncFn) {\n      return _runSync(bucket, f);\n    }\n\n    return _runAsync(bucket, f);\n  }\n\n  function start() {\n    bucketStats = {};\n    running = true;\n  }\n\n  let runningName: string;\n  let reportNum = 1;\n  function report() {\n    if (! Profile.enabled) {\n      return;\n    }\n    running = false;\n    print('');\n    setupReport();\n    reportHierarchy();\n    print('');\n    reportHotLeaves();\n    print('');\n    print(`(#${reportNum}) Total: ${formatMs(getTopLevelTotal())}` +\n          ` (${runningName})`);\n    print('');\n  }\n}\n\ntype Entry = string[];\nlet entries: Entry[] = [];\n\nconst prefix = \"| \";\n\nfunction entryName(entry: Entry) {\n  return entry[entry.length - 1];\n}\n\nfunction entryStats(entry: Entry) {\n  return bucketStats[encodeEntryKey(entry)];\n}\n\nfunction entryTime(entry: Entry) {\n  return entryStats(entry).time;\n}\n\nfunction isTopLevelEntry(entry: Entry) {\n  return entry.length === 1;\n}\n\nfunction topLevelEntries() {\n  return entries.filter(isTopLevelEntry);\n}\n\nfunction print(text: string) {\n  console.log(prefix + text);\n}\n\nfunction isChild(entry1: Entry, entry2: Entry) {\n  if (entry2.length !== entry1.length + 1) {\n    return false;\n  }\n  for (var i = entry1.length - 1; i >= 0; i--) {\n    if (entry1[i] !== entry2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction children(entry1: Entry) {\n  return entries.filter(entry2 => isChild(entry1, entry2));\n}\n\nfunction hasChildren(entry: Entry) {\n  return children(entry).length > 0;\n}\n\nfunction hasSignificantChildren(entry: Entry) {\n  return children(entry).some(entry => entryTime(entry) >= filter);\n}\n\nfunction isLeaf(entry: Entry) {\n  return ! hasChildren(entry);\n}\n\nfunction otherTime(entry: Entry) {\n  let total = 0;\n  children(entry).forEach(child => {\n    total += entryTime(child);\n  });\n  return entryTime(entry) - total;\n}\n\nfunction injectOtherTime(entry: Entry) {\n  const other: Entry = entry.slice(0);\n  other.push(\"other \" + entryName(entry));\n  bucketStats[encodeEntryKey(other)] = {\n    time: otherTime(entry),\n    count: entryStats(entry).count,\n    isOther: true\n  };\n  entries.push(other);\n};\n\nfunction reportOn(entry: Entry, isLastLeafStack: boolean[] = []) {\n  const stats = entryStats(entry);\n  const isParent = hasSignificantChildren(entry);\n  const name = entryName(entry);\n\n  print((isParent ? leftRightDots : leftRightAlign)\n        (printIndentation(isLastLeafStack) + name, formatMs(stats.time), 70)\n        + (stats.isOther ? \"\" : (\" (\" + stats.count + \")\")));\n\n  if (isParent) {\n    const childrenList = children(entry).filter(entry => {\n      return entryStats(entry).time > filter;\n    });\n    childrenList.forEach((child, i) => {\n      const isLastLeaf = i === childrenList.length - 1;\n      reportOn(child, isLastLeafStack.concat(isLastLeaf));\n    });\n  }\n}\n\nfunction reportHierarchy() {\n  topLevelEntries().forEach(entry => reportOn(entry));\n}\n\nfunction allLeafs() {\n  const set: { [name: string]: any } = Object.create(null);\n  entries.filter(isLeaf).map(entryName).forEach(name => set[name] = true);\n  return Object.keys(set).sort();\n}\n\nfunction leafTotals(leafName: string) {\n  let time = 0;\n  let count = 0;\n\n  entries.filter(entry => {\n    return entryName(entry) === leafName && isLeaf(entry);\n  }).forEach(leaf => {\n    const stats = entryStats(leaf);\n    time += stats.time;\n    count += stats.count;\n  });\n\n  return { time, count };\n}\n\nfunction reportHotLeaves() {\n  print('Top leaves:');\n\n  const totals = allLeafs().map(leaf => {\n    const info = leafTotals(leaf);\n    return {\n      name: leaf,\n      time: info.time,\n      count: info.count,\n    };\n  }).sort((a, b) => {\n    return a.time === b.time ? 0 : a.time > b.time ? -1 : 1;\n  });\n\n  totals.forEach(total => {\n    if (total.time < 100) { // hard-coded larger filter to quality as \"hot\" here\n      return;\n    }\n    print(leftRightDots(total.name, formatMs(total.time), 65) + ` (${total.count})`);\n  });\n}\n\nfunction getTopLevelTotal() {\n  let topTotal = 0;\n  topLevelEntries().forEach(entry => {\n    topTotal += entryTime(entry);\n  });\n  return topTotal;\n}\n\nfunction setupReport() {\n  entries = Object.keys(bucketStats).map(decodeEntryKey);\n  entries.filter(hasSignificantChildren).forEach(parent => {\n    injectOtherTime(parent);\n  });\n}\n"],"mappings":"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","ignoreList":[],"file":"tools/tool-env/profile.js.map"}