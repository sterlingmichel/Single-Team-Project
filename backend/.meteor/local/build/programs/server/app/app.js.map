{"version":3,"sources":["meteor://ðŸ’»app/imports/api/links.ts","meteor://ðŸ’»app/server/main.ts"],"names":["module","export","LinksCollection","Mongo","link","v","__reifyWaitForDeps__","Collection","__reify_async_result__","_reifyError","self","async","Meteor","insertLink","_ref","title","url","insertAsync","createdAt","Date","startup","find","countAsync","publish"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAAA,MAAA,CAAOC,MAAE,CAAK;MAAAC,eAAQ,EAAAA,CAAA,KAAAA;IAAe;IAAA,IAAAC,KAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAS9B,MAAMJ,eAAe,GAAG,IAAIC,KAAK,CAACI,UAAU,CAAO,OAAO,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA,G;;;;;;;;;;;;;;ICTnE,IAAAC,MAAS;IAAAZ,MAAQ,CAAAI,IAAA,CAAM,eAAe,EAAC;MAAAQ,OAAAP,CAAA;QAAAO,MAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAH,eAAA;IAAAF,MAAA,CAAAI,IAAA;MAAAF,gBAAAG,CAAA;QAAAH,eAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAGvC,eAAeO,UAAUA,CAAAC,IAAA,EAA4C;MAAA,IAA3C;QAAEC,KAAK;QAAEC;MAAG,CAA+B,GAAAF,IAAA;MACnE,MAAMZ,eAAe,CAACe,WAAW,CAAC;QAAEF,KAAK;QAAEC,GAAG;QAAEE,SAAS,EAAE,IAAIC,IAAI;MAAE,CAAE,CAAC;IAC1E;IAEAP,MAAM,CAACQ,OAAO,CAAC,YAAW;MACxB;MACA,IAAI,OAAMlB,eAAe,CAACmB,IAAI,EAAE,CAACC,UAAU,EAAE,MAAK,CAAC,EAAE;QACnD,MAAMT,UAAU,CAAC;UACfE,KAAK,EAAE,iBAAiB;UACxBC,GAAG,EAAE;SACN,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,kBAAkB;UACzBC,GAAG,EAAE;SACN,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,eAAe;UACtBC,GAAG,EAAE;SACN,CAAC;QAEF,MAAMH,UAAU,CAAC;UACfE,KAAK,EAAE,aAAa;UACpBC,GAAG,EAAE;SACN,CAAC;MACJ;MAEA;MACA;MACAJ,MAAM,CAACW,OAAO,CAAC,OAAO,EAAE;QACtB,OAAOrB,eAAe,CAACmB,IAAI,EAAE;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;IAACb,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA,G","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport interface Link {\n  _id?: string;\n  title: string;\n  url: string;\n  createdAt: Date;\n}\n\nexport const LinksCollection = new Mongo.Collection<Link>('links');\n","import { Meteor } from 'meteor/meteor';\nimport { Link, LinksCollection } from '/imports/api/links';\n\nasync function insertLink({ title, url }: Pick<Link, 'title' | 'url'>) {\n  await LinksCollection.insertAsync({ title, url, createdAt: new Date() });\n}\n\nMeteor.startup(async () => {\n  // If the Links collection is empty, add some data.\n  if (await LinksCollection.find().countAsync() === 0) {\n    await insertLink({\n      title: 'Do the Tutorial',\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app',\n    });\n\n    await insertLink({\n      title: 'Follow the Guide',\n      url: 'https://guide.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Read the Docs',\n      url: 'https://docs.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Discussions',\n      url: 'https://forums.meteor.com',\n    });\n  }\n\n  // We publish the entire Links collection to all clients.\n  // In order to be fetched in real-time to the clients\n  Meteor.publish(\"links\", function () {\n    return LinksCollection.find();\n  });\n});\n"]}