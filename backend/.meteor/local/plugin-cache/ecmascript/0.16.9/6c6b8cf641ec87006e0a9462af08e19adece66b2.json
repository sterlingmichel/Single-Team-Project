{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/smichel/Projects/Team-5-Project/database/packages/minimongo/matcher.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/minimongo/matcher.js","filename":"/Users/smichel/Projects/Team-5-Project/database/packages/minimongo/matcher.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/smichel/Projects/Team-5-Project/database","root":"/Users/smichel/Projects/Team-5-Project/database","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/smichel/Projects/Team-5-Project/database/packages/minimongo/matcher.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/minimongo/matcher.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    var _Package$mongoDecima;\n    module.export({\n      default: () => Matcher\n    });\n    let LocalCollection;\n    module.link(\"./local_collection.js\", {\n      default(v) {\n        LocalCollection = v;\n      }\n    }, 0);\n    let compileDocumentSelector, hasOwn, nothingMatcher;\n    module.link(\"./common.js\", {\n      compileDocumentSelector(v) {\n        compileDocumentSelector = v;\n      },\n      hasOwn(v) {\n        hasOwn = v;\n      },\n      nothingMatcher(v) {\n        nothingMatcher = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const Decimal = ((_Package$mongoDecima = Package['mongo-decimal']) === null || _Package$mongoDecima === void 0 ? void 0 : _Package$mongoDecima.Decimal) || class DecimalStub {};\n\n    // The minimongo selector compiler!\n\n    // Terminology:\n    //  - a 'selector' is the EJSON object representing a selector\n    //  - a 'matcher' is its compiled form (whether a full Minimongo.Matcher\n    //    object or one of the component lambdas that matches parts of it)\n    //  - a 'result object' is an object with a 'result' field and maybe\n    //    distance and arrayIndices.\n    //  - a 'branched value' is an object with a 'value' field and maybe\n    //    'dontIterate' and 'arrayIndices'.\n    //  - a 'document' is a top-level object that can be stored in a collection.\n    //  - a 'lookup function' is a function that takes in a document and returns\n    //    an array of 'branched values'.\n    //  - a 'branched matcher' maps from an array of branched values to a result\n    //    object.\n    //  - an 'element matcher' maps from a single value to a bool.\n\n    // Main entry point.\n    //   var matcher = new Minimongo.Matcher({a: {$gt: 5}});\n    //   if (matcher.documentMatches({a: 7})) ...\n    class Matcher {\n      constructor(selector, isUpdate) {\n        // A set (object mapping string -> *) of all of the document paths looked\n        // at by the selector. Also includes the empty string if it may look at any\n        // path (eg, $where).\n        this._paths = {};\n        // Set to true if compilation finds a $near.\n        this._hasGeoQuery = false;\n        // Set to true if compilation finds a $where.\n        this._hasWhere = false;\n        // Set to false if compilation finds anything other than a simple equality\n        // or one or more of '$gt', '$gte', '$lt', '$lte', '$ne', '$in', '$nin' used\n        // with scalars as operands.\n        this._isSimple = true;\n        // Set to a dummy document which always matches this Matcher. Or set to null\n        // if such document is too hard to find.\n        this._matchingDocument = undefined;\n        // A clone of the original selector. It may just be a function if the user\n        // passed in a function; otherwise is definitely an object (eg, IDs are\n        // translated into {_id: ID} first. Used by canBecomeTrueByModifier and\n        // Sorter._useWithMatcher.\n        this._selector = null;\n        this._docMatcher = this._compileSelector(selector);\n        // Set to true if selection is done for an update operation\n        // Default is false\n        // Used for $near array update (issue #3599)\n        this._isUpdate = isUpdate;\n      }\n      documentMatches(doc) {\n        if (doc !== Object(doc)) {\n          throw Error('documentMatches needs a document');\n        }\n        return this._docMatcher(doc);\n      }\n      hasGeoQuery() {\n        return this._hasGeoQuery;\n      }\n      hasWhere() {\n        return this._hasWhere;\n      }\n      isSimple() {\n        return this._isSimple;\n      }\n\n      // Given a selector, return a function that takes one argument, a\n      // document. It returns a result object.\n      _compileSelector(selector) {\n        // you can pass a literal function instead of a selector\n        if (selector instanceof Function) {\n          this._isSimple = false;\n          this._selector = selector;\n          this._recordPathUsed('');\n          return doc => ({\n            result: !!selector.call(doc)\n          });\n        }\n\n        // shorthand -- scalar _id\n        if (LocalCollection._selectorIsId(selector)) {\n          this._selector = {\n            _id: selector\n          };\n          this._recordPathUsed('_id');\n          return doc => ({\n            result: EJSON.equals(doc._id, selector)\n          });\n        }\n\n        // protect against dangerous selectors.  falsey and {_id: falsey} are both\n        // likely programmer error, and not what you want, particularly for\n        // destructive operations.\n        if (!selector || hasOwn.call(selector, '_id') && !selector._id) {\n          this._isSimple = false;\n          return nothingMatcher;\n        }\n\n        // Top level can't be an array or true or binary.\n        if (Array.isArray(selector) || EJSON.isBinary(selector) || typeof selector === 'boolean') {\n          throw new Error(\"Invalid selector: \".concat(selector));\n        }\n        this._selector = EJSON.clone(selector);\n        return compileDocumentSelector(selector, this, {\n          isRoot: true\n        });\n      }\n\n      // Returns a list of key paths the given selector is looking for. It includes\n      // the empty string if there is a $where.\n      _getPaths() {\n        return Object.keys(this._paths);\n      }\n      _recordPathUsed(path) {\n        this._paths[path] = true;\n      }\n    }\n    // helpers used by compiled selector code\n    LocalCollection._f = {\n      // XXX for _all and _in, consider building 'inquery' at compile time..\n      _type(v) {\n        if (typeof v === 'number') {\n          return 1;\n        }\n        if (typeof v === 'string') {\n          return 2;\n        }\n        if (typeof v === 'boolean') {\n          return 8;\n        }\n        if (Array.isArray(v)) {\n          return 4;\n        }\n        if (v === null) {\n          return 10;\n        }\n\n        // note that typeof(/x/) === \"object\"\n        if (v instanceof RegExp) {\n          return 11;\n        }\n        if (typeof v === 'function') {\n          return 13;\n        }\n        if (v instanceof Date) {\n          return 9;\n        }\n        if (EJSON.isBinary(v)) {\n          return 5;\n        }\n        if (v instanceof MongoID.ObjectID) {\n          return 7;\n        }\n        if (v instanceof Decimal) {\n          return 1;\n        }\n\n        // object\n        return 3;\n\n        // XXX support some/all of these:\n        // 14, symbol\n        // 15, javascript code with scope\n        // 16, 18: 32-bit/64-bit integer\n        // 17, timestamp\n        // 255, minkey\n        // 127, maxkey\n      },\n      // deep equality test: use for literal document and array matches\n      _equal(a, b) {\n        return EJSON.equals(a, b, {\n          keyOrderSensitive: true\n        });\n      },\n      // maps a type code to a value that can be used to sort values of different\n      // types\n      _typeorder(t) {\n        // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n        // XXX what is the correct sort position for Javascript code?\n        // ('100' in the matrix below)\n        // XXX minkey/maxkey\n        return [-1,\n        // (not a type)\n        1,\n        // number\n        2,\n        // string\n        3,\n        // object\n        4,\n        // array\n        5,\n        // binary\n        -1,\n        // deprecated\n        6,\n        // ObjectID\n        7,\n        // bool\n        8,\n        // Date\n        0,\n        // null\n        9,\n        // RegExp\n        -1,\n        // deprecated\n        100,\n        // JS code\n        2,\n        // deprecated (symbol)\n        100,\n        // JS code\n        1,\n        // 32-bit int\n        8,\n        // Mongo timestamp\n        1 // 64-bit int\n        ][t];\n      },\n      // compare two values of unknown type according to BSON ordering\n      // semantics. (as an extension, consider 'undefined' to be less than\n      // any other value.) return negative if a is less, positive if b is\n      // less, or 0 if equal\n      _cmp(a, b) {\n        if (a === undefined) {\n          return b === undefined ? 0 : -1;\n        }\n        if (b === undefined) {\n          return 1;\n        }\n        let ta = LocalCollection._f._type(a);\n        let tb = LocalCollection._f._type(b);\n        const oa = LocalCollection._f._typeorder(ta);\n        const ob = LocalCollection._f._typeorder(tb);\n        if (oa !== ob) {\n          return oa < ob ? -1 : 1;\n        }\n\n        // XXX need to implement this if we implement Symbol or integers, or\n        // Timestamp\n        if (ta !== tb) {\n          throw Error('Missing type coercion logic in _cmp');\n        }\n        if (ta === 7) {\n          // ObjectID\n          // Convert to string.\n          ta = tb = 2;\n          a = a.toHexString();\n          b = b.toHexString();\n        }\n        if (ta === 9) {\n          // Date\n          // Convert to millis.\n          ta = tb = 1;\n          a = isNaN(a) ? 0 : a.getTime();\n          b = isNaN(b) ? 0 : b.getTime();\n        }\n        if (ta === 1) {\n          // double\n          if (a instanceof Decimal) {\n            return a.minus(b).toNumber();\n          } else {\n            return a - b;\n          }\n        }\n        if (tb === 2)\n          // string\n          return a < b ? -1 : a === b ? 0 : 1;\n        if (ta === 3) {\n          // Object\n          // this could be much more efficient in the expected case ...\n          const toArray = object => {\n            const result = [];\n            Object.keys(object).forEach(key => {\n              result.push(key, object[key]);\n            });\n            return result;\n          };\n          return LocalCollection._f._cmp(toArray(a), toArray(b));\n        }\n        if (ta === 4) {\n          // Array\n          for (let i = 0;; i++) {\n            if (i === a.length) {\n              return i === b.length ? 0 : -1;\n            }\n            if (i === b.length) {\n              return 1;\n            }\n            const s = LocalCollection._f._cmp(a[i], b[i]);\n            if (s !== 0) {\n              return s;\n            }\n          }\n        }\n        if (ta === 5) {\n          // binary\n          // Surprisingly, a small binary blob is always less than a large one in\n          // Mongo.\n          if (a.length !== b.length) {\n            return a.length - b.length;\n          }\n          for (let i = 0; i < a.length; i++) {\n            if (a[i] < b[i]) {\n              return -1;\n            }\n            if (a[i] > b[i]) {\n              return 1;\n            }\n          }\n          return 0;\n        }\n        if (ta === 8) {\n          // boolean\n          if (a) {\n            return b ? 0 : 1;\n          }\n          return b ? -1 : 0;\n        }\n        if (ta === 10)\n          // null\n          return 0;\n        if (ta === 11)\n          // regexp\n          throw Error('Sorting not supported on regular expression'); // XXX\n\n        // 13: javascript code\n        // 14: symbol\n        // 15: javascript code with scope\n        // 16: 32-bit integer\n        // 17: timestamp\n        // 18: 64-bit integer\n        // 255: minkey\n        // 127: maxkey\n        if (ta === 13)\n          // javascript code\n          throw Error('Sorting not supported on Javascript code'); // XXX\n\n        throw Error('Unknown type to sort');\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","default","Matcher","LocalCollection","link","v","compileDocumentSelector","hasOwn","nothingMatcher","__reifyWaitForDeps__","Decimal","_Package$mongoDecima","Package","DecimalStub","constructor","selector","isUpdate","_paths","_hasGeoQuery","_hasWhere","_isSimple","_matchingDocument","undefined","_selector","_docMatcher","_compileSelector","_isUpdate","documentMatches","doc","Object","Error","hasGeoQuery","hasWhere","isSimple","Function","_recordPathUsed","result","call","_selectorIsId","_id","EJSON","equals","Array","isArray","isBinary","concat","clone","isRoot","_getPaths","keys","path","_f","_type","RegExp","Date","MongoID","ObjectID","_equal","a","b","keyOrderSensitive","_typeorder","t","_cmp","ta","tb","oa","ob","toHexString","isNaN","getTime","minus","toNumber","toArray","object","forEach","key","push","i","length","s","__reify_async_result__","_reifyError","self","async"],"sources":["packages/minimongo/matcher.js"],"sourcesContent":["import LocalCollection from './local_collection.js';\nimport {\n  compileDocumentSelector,\n  hasOwn,\n  nothingMatcher,\n} from './common.js';\n\nconst Decimal = Package['mongo-decimal']?.Decimal || class DecimalStub {}\n\n// The minimongo selector compiler!\n\n// Terminology:\n//  - a 'selector' is the EJSON object representing a selector\n//  - a 'matcher' is its compiled form (whether a full Minimongo.Matcher\n//    object or one of the component lambdas that matches parts of it)\n//  - a 'result object' is an object with a 'result' field and maybe\n//    distance and arrayIndices.\n//  - a 'branched value' is an object with a 'value' field and maybe\n//    'dontIterate' and 'arrayIndices'.\n//  - a 'document' is a top-level object that can be stored in a collection.\n//  - a 'lookup function' is a function that takes in a document and returns\n//    an array of 'branched values'.\n//  - a 'branched matcher' maps from an array of branched values to a result\n//    object.\n//  - an 'element matcher' maps from a single value to a bool.\n\n// Main entry point.\n//   var matcher = new Minimongo.Matcher({a: {$gt: 5}});\n//   if (matcher.documentMatches({a: 7})) ...\nexport default class Matcher {\n  constructor(selector, isUpdate) {\n    // A set (object mapping string -> *) of all of the document paths looked\n    // at by the selector. Also includes the empty string if it may look at any\n    // path (eg, $where).\n    this._paths = {};\n    // Set to true if compilation finds a $near.\n    this._hasGeoQuery = false;\n    // Set to true if compilation finds a $where.\n    this._hasWhere = false;\n    // Set to false if compilation finds anything other than a simple equality\n    // or one or more of '$gt', '$gte', '$lt', '$lte', '$ne', '$in', '$nin' used\n    // with scalars as operands.\n    this._isSimple = true;\n    // Set to a dummy document which always matches this Matcher. Or set to null\n    // if such document is too hard to find.\n    this._matchingDocument = undefined;\n    // A clone of the original selector. It may just be a function if the user\n    // passed in a function; otherwise is definitely an object (eg, IDs are\n    // translated into {_id: ID} first. Used by canBecomeTrueByModifier and\n    // Sorter._useWithMatcher.\n    this._selector = null;\n    this._docMatcher = this._compileSelector(selector);\n    // Set to true if selection is done for an update operation\n    // Default is false\n    // Used for $near array update (issue #3599)\n    this._isUpdate = isUpdate;\n  }\n\n  documentMatches(doc) {\n    if (doc !== Object(doc)) {\n      throw Error('documentMatches needs a document');\n    }\n\n    return this._docMatcher(doc);\n  }\n\n  hasGeoQuery() {\n    return this._hasGeoQuery;\n  }\n\n  hasWhere() {\n    return this._hasWhere;\n  }\n\n  isSimple() {\n    return this._isSimple;\n  }\n\n  // Given a selector, return a function that takes one argument, a\n  // document. It returns a result object.\n  _compileSelector(selector) {\n    // you can pass a literal function instead of a selector\n    if (selector instanceof Function) {\n      this._isSimple = false;\n      this._selector = selector;\n      this._recordPathUsed('');\n\n      return doc => ({result: !!selector.call(doc)});\n    }\n\n    // shorthand -- scalar _id\n    if (LocalCollection._selectorIsId(selector)) {\n      this._selector = {_id: selector};\n      this._recordPathUsed('_id');\n\n      return doc => ({result: EJSON.equals(doc._id, selector)});\n    }\n\n    // protect against dangerous selectors.  falsey and {_id: falsey} are both\n    // likely programmer error, and not what you want, particularly for\n    // destructive operations.\n    if (!selector || hasOwn.call(selector, '_id') && !selector._id) {\n      this._isSimple = false;\n      return nothingMatcher;\n    }\n\n    // Top level can't be an array or true or binary.\n    if (Array.isArray(selector) ||\n        EJSON.isBinary(selector) ||\n        typeof selector === 'boolean') {\n      throw new Error(`Invalid selector: ${selector}`);\n    }\n\n    this._selector = EJSON.clone(selector);\n\n    return compileDocumentSelector(selector, this, {isRoot: true});\n  }\n\n  // Returns a list of key paths the given selector is looking for. It includes\n  // the empty string if there is a $where.\n  _getPaths() {\n    return Object.keys(this._paths);\n  }\n\n  _recordPathUsed(path) {\n    this._paths[path] = true;\n  }\n}\n\n// helpers used by compiled selector code\nLocalCollection._f = {\n  // XXX for _all and _in, consider building 'inquery' at compile time..\n  _type(v) {\n    if (typeof v === 'number') {\n      return 1;\n    }\n\n    if (typeof v === 'string') {\n      return 2;\n    }\n\n    if (typeof v === 'boolean') {\n      return 8;\n    }\n\n    if (Array.isArray(v)) {\n      return 4;\n    }\n\n    if (v === null) {\n      return 10;\n    }\n\n    // note that typeof(/x/) === \"object\"\n    if (v instanceof RegExp) {\n      return 11;\n    }\n\n    if (typeof v === 'function') {\n      return 13;\n    }\n\n    if (v instanceof Date) {\n      return 9;\n    }\n\n    if (EJSON.isBinary(v)) {\n      return 5;\n    }\n\n    if (v instanceof MongoID.ObjectID) {\n      return 7;\n    }\n\n    if (v instanceof Decimal) {\n      return 1;\n    }\n\n    // object\n    return 3;\n\n    // XXX support some/all of these:\n    // 14, symbol\n    // 15, javascript code with scope\n    // 16, 18: 32-bit/64-bit integer\n    // 17, timestamp\n    // 255, minkey\n    // 127, maxkey\n  },\n\n  // deep equality test: use for literal document and array matches\n  _equal(a, b) {\n    return EJSON.equals(a, b, {keyOrderSensitive: true});\n  },\n\n  // maps a type code to a value that can be used to sort values of different\n  // types\n  _typeorder(t) {\n    // http://www.mongodb.org/display/DOCS/What+is+the+Compare+Order+for+BSON+Types\n    // XXX what is the correct sort position for Javascript code?\n    // ('100' in the matrix below)\n    // XXX minkey/maxkey\n    return [\n      -1,  // (not a type)\n      1,   // number\n      2,   // string\n      3,   // object\n      4,   // array\n      5,   // binary\n      -1,  // deprecated\n      6,   // ObjectID\n      7,   // bool\n      8,   // Date\n      0,   // null\n      9,   // RegExp\n      -1,  // deprecated\n      100, // JS code\n      2,   // deprecated (symbol)\n      100, // JS code\n      1,   // 32-bit int\n      8,   // Mongo timestamp\n      1    // 64-bit int\n    ][t];\n  },\n\n  // compare two values of unknown type according to BSON ordering\n  // semantics. (as an extension, consider 'undefined' to be less than\n  // any other value.) return negative if a is less, positive if b is\n  // less, or 0 if equal\n  _cmp(a, b) {\n    if (a === undefined) {\n      return b === undefined ? 0 : -1;\n    }\n\n    if (b === undefined) {\n      return 1;\n    }\n\n    let ta = LocalCollection._f._type(a);\n    let tb = LocalCollection._f._type(b);\n\n    const oa = LocalCollection._f._typeorder(ta);\n    const ob = LocalCollection._f._typeorder(tb);\n\n    if (oa !== ob) {\n      return oa < ob ? -1 : 1;\n    }\n\n    // XXX need to implement this if we implement Symbol or integers, or\n    // Timestamp\n    if (ta !== tb) {\n      throw Error('Missing type coercion logic in _cmp');\n    }\n\n    if (ta === 7) { // ObjectID\n      // Convert to string.\n      ta = tb = 2;\n      a = a.toHexString();\n      b = b.toHexString();\n    }\n\n    if (ta === 9) { // Date\n      // Convert to millis.\n      ta = tb = 1;\n      a = isNaN(a) ? 0 : a.getTime();\n      b = isNaN(b) ? 0 : b.getTime();\n    }\n\n    if (ta === 1) { // double\n      if (a instanceof Decimal) {\n        return a.minus(b).toNumber();\n      } else {\n        return a - b;\n      }\n    }\n\n    if (tb === 2) // string\n      return a < b ? -1 : a === b ? 0 : 1;\n\n    if (ta === 3) { // Object\n      // this could be much more efficient in the expected case ...\n      const toArray = object => {\n        const result = [];\n\n        Object.keys(object).forEach(key => {\n          result.push(key, object[key]);\n        });\n\n        return result;\n      };\n\n      return LocalCollection._f._cmp(toArray(a), toArray(b));\n    }\n\n    if (ta === 4) { // Array\n      for (let i = 0; ; i++) {\n        if (i === a.length) {\n          return i === b.length ? 0 : -1;\n        }\n\n        if (i === b.length) {\n          return 1;\n        }\n\n        const s = LocalCollection._f._cmp(a[i], b[i]);\n        if (s !== 0) {\n          return s;\n        }\n      }\n    }\n\n    if (ta === 5) { // binary\n      // Surprisingly, a small binary blob is always less than a large one in\n      // Mongo.\n      if (a.length !== b.length) {\n        return a.length - b.length;\n      }\n\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] < b[i]) {\n          return -1;\n        }\n\n        if (a[i] > b[i]) {\n          return 1;\n        }\n      }\n\n      return 0;\n    }\n\n    if (ta === 8) { // boolean\n      if (a) {\n        return b ? 0 : 1;\n      }\n\n      return b ? -1 : 0;\n    }\n\n    if (ta === 10) // null\n      return 0;\n\n    if (ta === 11) // regexp\n      throw Error('Sorting not supported on regular expression'); // XXX\n\n    // 13: javascript code\n    // 14: symbol\n    // 15: javascript code with scope\n    // 16: 32-bit integer\n    // 17: timestamp\n    // 18: 64-bit integer\n    // 255: minkey\n    // 127: maxkey\n    if (ta === 13) // javascript code\n      throw Error('Sorting not supported on Javascript code'); // XXX\n\n    throw Error('Unknown type to sort');\n  },\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6c6b8cf641ec87006e0a9462af08e19adece66b2"}
