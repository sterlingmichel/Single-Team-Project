{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/smichel/Projects/Team-5-Project/database/packages/mongo/remote_collection_driver.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/mongo/remote_collection_driver.js","filename":"/Users/smichel/Projects/Team-5-Project/database/packages/mongo/remote_collection_driver.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/smichel/Projects/Team-5-Project/database","root":"/Users/smichel/Projects/Team-5-Project/database","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/smichel/Projects/Team-5-Project/database/packages/mongo/remote_collection_driver.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/remote_collection_driver.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let once;\n    module.link(\"lodash.once\", {\n      default(v) {\n        once = v;\n      }\n    }, 0);\n    let ASYNC_COLLECTION_METHODS, getAsyncMethodName, CLIENT_ONLY_METHODS;\n    module.link(\"meteor/minimongo/constants\", {\n      ASYNC_COLLECTION_METHODS(v) {\n        ASYNC_COLLECTION_METHODS = v;\n      },\n      getAsyncMethodName(v) {\n        getAsyncMethodName = v;\n      },\n      CLIENT_ONLY_METHODS(v) {\n        CLIENT_ONLY_METHODS = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    MongoInternals.RemoteCollectionDriver = function (mongo_url, options) {\n      var self = this;\n      self.mongo = new MongoConnection(mongo_url, options);\n    };\n    const REMOTE_COLLECTION_METHODS = ['createCappedCollectionAsync', 'dropIndexAsync', 'ensureIndexAsync', 'createIndexAsync', 'countDocuments', 'dropCollectionAsync', 'estimatedDocumentCount', 'find', 'findOneAsync', 'insertAsync', 'rawCollection', 'removeAsync', 'updateAsync', 'upsertAsync'];\n    Object.assign(MongoInternals.RemoteCollectionDriver.prototype, {\n      open: function (name) {\n        var self = this;\n        var ret = {};\n        REMOTE_COLLECTION_METHODS.forEach(function (m) {\n          ret[m] = self.mongo[m].bind(self.mongo, name);\n          if (!ASYNC_COLLECTION_METHODS.includes(m)) return;\n          const asyncMethodName = getAsyncMethodName(m);\n          ret[asyncMethodName] = function () {\n            try {\n              return Promise.resolve(ret[m](...arguments));\n            } catch (error) {\n              return Promise.reject(error);\n            }\n          };\n        });\n        CLIENT_ONLY_METHODS.forEach(function (m) {\n          ret[m] = _.bind(self.mongo[m], self.mongo, name);\n          ret[m] = function () {\n            throw new Error(\"\".concat(m, \" +  is not available on the server. Please use \").concat(getAsyncMethodName(m), \"() instead.\"));\n          };\n        });\n        return ret;\n      }\n    });\n\n    // Create the singleton RemoteCollectionDriver only on demand, so we\n    // only require Mongo configuration if it's actually used (eg, not if\n    // you're only trying to receive data from a remote DDP server.)\n    MongoInternals.defaultRemoteCollectionDriver = once(function () {\n      var connectionOptions = {};\n      var mongoUrl = process.env.MONGO_URL;\n      if (process.env.MONGO_OPLOG_URL) {\n        connectionOptions.oplogUrl = process.env.MONGO_OPLOG_URL;\n      }\n      if (!mongoUrl) throw new Error(\"MONGO_URL must be set in environment\");\n      const driver = new MongoInternals.RemoteCollectionDriver(mongoUrl, connectionOptions);\n      // As many deployment tools, including Meteor Up, send requests to the app in\n      // order to confirm that the deployment finished successfully, it's required\n      // to know about a database connection problem before the app starts. Doing so\n      // in a `Meteor.startup` is fine, as the `WebApp` handles requests only after\n      // all are finished.\n      Meteor.startup(async () => {\n        await driver.mongo.client.connect();\n      });\n      return driver;\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["once","module","link","default","v","ASYNC_COLLECTION_METHODS","getAsyncMethodName","CLIENT_ONLY_METHODS","__reifyWaitForDeps__","MongoInternals","RemoteCollectionDriver","mongo_url","options","self","mongo","MongoConnection","REMOTE_COLLECTION_METHODS","Object","assign","prototype","open","name","ret","forEach","m","bind","includes","asyncMethodName","Promise","resolve","arguments","error","reject","_","Error","concat","defaultRemoteCollectionDriver","connectionOptions","mongoUrl","process","env","MONGO_URL","MONGO_OPLOG_URL","oplogUrl","driver","Meteor","startup","client","connect","__reify_async_result__","_reifyError","async"],"sources":["packages/mongo/remote_collection_driver.js"],"sourcesContent":["import once from 'lodash.once';\nimport {\n  ASYNC_COLLECTION_METHODS,\n  getAsyncMethodName,\n  CLIENT_ONLY_METHODS\n} from \"meteor/minimongo/constants\";\n\nMongoInternals.RemoteCollectionDriver = function (\n  mongo_url, options) {\n  var self = this;\n  self.mongo = new MongoConnection(mongo_url, options);\n};\n\nconst REMOTE_COLLECTION_METHODS = [\n  'createCappedCollectionAsync',\n  'dropIndexAsync',\n  'ensureIndexAsync',\n  'createIndexAsync',\n  'countDocuments',\n  'dropCollectionAsync',\n  'estimatedDocumentCount',\n  'find',\n  'findOneAsync',\n  'insertAsync',\n  'rawCollection',\n  'removeAsync',\n  'updateAsync',\n  'upsertAsync',\n];\n\nObject.assign(MongoInternals.RemoteCollectionDriver.prototype, {\n  open: function (name) {\n    var self = this;\n    var ret = {};\n    REMOTE_COLLECTION_METHODS.forEach(function (m) {\n      ret[m] = self.mongo[m].bind(self.mongo, name);\n\n      if (!ASYNC_COLLECTION_METHODS.includes(m)) return;\n      const asyncMethodName = getAsyncMethodName(m);\n      ret[asyncMethodName] = function (...args) {\n        try {\n          return Promise.resolve(ret[m](...args));\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      };\n    });\n\n    CLIENT_ONLY_METHODS.forEach(function (m) {\n      ret[m] = _.bind(self.mongo[m], self.mongo, name);\n\n      ret[m] = function (...args) {\n        throw new Error(\n          `${m} +  is not available on the server. Please use ${getAsyncMethodName(\n            m\n          )}() instead.`\n        );\n      };\n    });\n    return ret;\n  },\n});\n\n\n// Create the singleton RemoteCollectionDriver only on demand, so we\n// only require Mongo configuration if it's actually used (eg, not if\n// you're only trying to receive data from a remote DDP server.)\nMongoInternals.defaultRemoteCollectionDriver = once(function () {\n  var connectionOptions = {};\n\n  var mongoUrl = process.env.MONGO_URL;\n\n  if (process.env.MONGO_OPLOG_URL) {\n    connectionOptions.oplogUrl = process.env.MONGO_OPLOG_URL;\n  }\n\n  if (! mongoUrl)\n    throw new Error(\"MONGO_URL must be set in environment\");\n\n  const driver = new MongoInternals.RemoteCollectionDriver(mongoUrl, connectionOptions);\n  // As many deployment tools, including Meteor Up, send requests to the app in\n  // order to confirm that the deployment finished successfully, it's required\n  // to know about a database connection problem before the app starts. Doing so\n  // in a `Meteor.startup` is fine, as the `WebApp` handles requests only after\n  // all are finished.\n  Meteor.startup(async () => {\n    await driver.mongo.client.connect();\n  });\n\n  return driver;\n});"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9c64ddd74b165a0f342322e1b317a7a41b158934"}
