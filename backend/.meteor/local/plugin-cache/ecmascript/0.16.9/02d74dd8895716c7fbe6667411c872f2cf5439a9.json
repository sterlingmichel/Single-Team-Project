{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/smichel/Projects/Team-5-Project/database/packages/ddp-client/client/queueStubsHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/ddp-client/client/queueStubsHelpers.js","filename":"/Users/smichel/Projects/Team-5-Project/database/packages/ddp-client/client/queueStubsHelpers.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/smichel/Projects/Team-5-Project/database","root":"/Users/smichel/Projects/Team-5-Project/database","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/smichel/Projects/Team-5-Project/database/packages/ddp-client/client/queueStubsHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-client/client/queueStubsHelpers.js"}},"code":"module.export({\n  loadAsyncStubHelpers: function () {\n    return loadAsyncStubHelpers;\n  }\n});\nvar DDP;\nmodule.link(\"../common/namespace.js\", {\n  DDP: function (v) {\n    DDP = v;\n  }\n}, 0);\nvar isEmpty, last;\nmodule.link(\"meteor/ddp-common/utils.js\", {\n  isEmpty: function (v) {\n    isEmpty = v;\n  },\n  last: function (v) {\n    last = v;\n  }\n}, 1);\nvar Connection;\nmodule.link(\"../common/livedata_connection\", {\n  Connection: function (v) {\n    Connection = v;\n  }\n}, 2);\n// https://forums.meteor.com/t/proposal-to-fix-issues-with-async-method-stubs/60826\n\nvar queueSize = 0;\nvar queue = Promise.resolve();\nvar loadAsyncStubHelpers = function () {\n  function queueFunction(fn) {\n    var promiseProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    queueSize += 1;\n    var resolve;\n    var reject;\n    var promise = new Promise(function (_resolve, _reject) {\n      resolve = _resolve;\n      reject = _reject;\n    });\n    queue = queue.finally(function () {\n      var _promise$stubPromise;\n      fn(resolve, reject);\n      return (_promise$stubPromise = promise.stubPromise) === null || _promise$stubPromise === void 0 ? void 0 : _promise$stubPromise.catch(function () {}); // silent uncaught promise\n    });\n    promise.catch(function () {}) // silent uncaught promise\n    .finally(function () {\n      queueSize -= 1;\n      if (queueSize === 0) {\n        Meteor.connection._maybeMigrate();\n      }\n    });\n    promise.stubPromise = promiseProps.stubPromise;\n    promise.serverPromise = promiseProps.serverPromise;\n    return promise;\n  }\n  var oldReadyToMigrate = Connection.prototype._readyToMigrate;\n  Connection.prototype._readyToMigrate = function () {\n    if (queueSize > 0) {\n      return false;\n    }\n    return oldReadyToMigrate.apply(this, arguments);\n  };\n  var currentMethodInvocation = null;\n\n  /**\n   * Meteor sets CurrentMethodInvocation to undefined for the reasons explained at\n   * https://github.com/meteor/meteor/blob/c9e3551b9673a7ed607f18cb1128563ff49ca96f/packages/ddp-client/common/livedata_connection.js#L578-L605\n   * The app code could call `.then` on a promise while the async stub is running,\n   * causing the `then` callback to think it is inside the stub.\n   *\n   * With the queueing we are doing, this is no longer necessary. The point\n   * of the queueing is to prevent app/package code from running while\n   * the stub is running, so we don't need to worry about this.\n   */\n\n  var oldApplyAsync = Connection.prototype.applyAsync;\n  Connection.prototype.applyAsync = function () {\n    var _this = this;\n    var args = arguments;\n    var name = args[0];\n    if (currentMethodInvocation) {\n      DDP._CurrentMethodInvocation._set(currentMethodInvocation);\n      currentMethodInvocation = null;\n    }\n    var enclosing = DDP._CurrentMethodInvocation.get();\n    var alreadyInSimulation = enclosing === null || enclosing === void 0 ? void 0 : enclosing.isSimulation;\n    var isFromCallAsync = enclosing === null || enclosing === void 0 ? void 0 : enclosing._isFromCallAsync;\n    if (Meteor.connection._getIsSimulation({\n      isFromCallAsync: isFromCallAsync,\n      alreadyInSimulation: alreadyInSimulation\n    })) {\n      // In stub - call immediately\n      return oldApplyAsync.apply(this, args);\n    }\n    var stubPromiseResolver;\n    var serverPromiseResolver;\n    var stubPromise = new Promise(function (r) {\n      return stubPromiseResolver = r;\n    });\n    var serverPromise = new Promise(function (r) {\n      return serverPromiseResolver = r;\n    });\n    return queueFunction(function (resolve, reject) {\n      var hasStub = false;\n      var finished = false;\n      Meteor._setImmediate(function () {\n        var applyAsyncPromise = oldApplyAsync.apply(_this, args);\n        stubPromiseResolver(applyAsyncPromise.stubPromise);\n        serverPromiseResolver(applyAsyncPromise.serverPromise);\n        hasStub = !!applyAsyncPromise.stubPromise;\n        if (hasStub) {\n          applyAsyncPromise.stubPromise.catch(function () {}) // silent uncaught promise\n          .finally(function () {\n            finished = true;\n          });\n        }\n        applyAsyncPromise.then(function (result) {\n          resolve(result);\n        }).catch(function (err) {\n          reject(err);\n        });\n        serverPromise.catch(function () {}); // silent uncaught promise\n      });\n      Meteor._setImmediate(function () {\n        if (hasStub && !finished) {\n          console.warn(\"Method stub (\" + name + \") took too long and could cause unexpected problems. Learn more at https://v3-migration-docs.meteor.com/breaking-changes/call-x-callAsync.html#considerations-for-effective-use-of-meteor-callasync\");\n        }\n      });\n    }, {\n      stubPromise: stubPromise,\n      serverPromise: serverPromise\n    });\n  };\n  var oldApply = Connection.prototype.apply;\n  Connection.prototype.apply = function () {\n    // [name, args, options]\n    var options = arguments[2] || {};\n    var wait = options.wait;\n\n    // Apply runs the stub before synchronously returning.\n    //\n    // However, we want the server to run the methods in the original call order\n    // so we have to queue sending the message to the server until any previous async\n    // methods run.\n    // This does mean the stubs run in a different order than the methods on the\n    // server.\n\n    var oldOutstandingMethodBlocks = Meteor.connection._outstandingMethodBlocks;\n    // Meteor only sends the method if _outstandingMethodBlocks.length is 1.\n    // Add a wait block to force Meteor to put the new method in a second block.\n    var outstandingMethodBlocks = [{\n      wait: true,\n      methods: []\n    }];\n    Meteor.connection._outstandingMethodBlocks = outstandingMethodBlocks;\n    var result;\n    try {\n      result = oldApply.apply(this, arguments);\n    } finally {\n      Meteor.connection._outstandingMethodBlocks = oldOutstandingMethodBlocks;\n    }\n    if (outstandingMethodBlocks[1]) {\n      var methodInvoker = outstandingMethodBlocks[1].methods[0];\n      if (methodInvoker) {\n        queueMethodInvoker(methodInvoker, wait);\n      }\n    }\n    return result;\n  };\n  function queueMethodInvoker(methodInvoker, wait) {\n    queueFunction(function (resolve) {\n      var self = Meteor.connection;\n      // based on https://github.com/meteor/meteor/blob/e0631738f2a8a914d8a50b1060e8f40cb0873680/packages/ddp-client/common/livedata_connection.js#L833-L853C1\n      if (wait) {\n        // It's a wait method! Wait methods go in their own block.\n        self._outstandingMethodBlocks.push({\n          wait: true,\n          methods: [methodInvoker]\n        });\n      } else {\n        // Not a wait method. Start a new block if the previous block was a wait\n        // block, and add it to the last block of methods.\n        if (isEmpty(self._outstandingMethodBlocks) || last(self._outstandingMethodBlocks).wait) {\n          self._outstandingMethodBlocks.push({\n            wait: false,\n            methods: []\n          });\n        }\n        last(self._outstandingMethodBlocks).methods.push(methodInvoker);\n      }\n\n      // If we added it to the first block, send it out now.\n      if (self._outstandingMethodBlocks.length === 1) methodInvoker.sendMessage();\n      resolve();\n    });\n  }\n\n  /**\n   * Queue subscriptions in case they rely on previous method calls\n   */\n  var queueSend = false;\n  var oldSubscribe = Connection.prototype.subscribe;\n  Connection.prototype.subscribe = function () {\n    if (this._stream._neverQueued) {\n      return oldSubscribe.apply(this, arguments);\n    }\n    queueSend = true;\n    try {\n      return oldSubscribe.apply(this, arguments);\n    } finally {\n      queueSend = false;\n    }\n  };\n  var oldSend = Connection.prototype._send;\n  Connection.prototype._send = function (params, shouldQueue) {\n    var _this2 = this;\n    if (this._stream._neverQueued) {\n      return oldSend.apply(this, arguments);\n    }\n    if (!queueSend && !shouldQueue) {\n      return oldSend.call(this, params);\n    }\n    queueSend = false;\n    queueFunction(function (resolve) {\n      try {\n        oldSend.call(_this2, params);\n      } finally {\n        resolve();\n      }\n    });\n  };\n  var _oldSendOutstandingMethodBlocksMessages = Connection.prototype._sendOutstandingMethodBlocksMessages;\n  Connection.prototype._sendOutstandingMethodBlocksMessages = function () {\n    var _arguments = arguments,\n      _this3 = this;\n    if (this._stream._neverQueued) {\n      return _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n    }\n    queueFunction(function (resolve) {\n      try {\n        _oldSendOutstandingMethodBlocksMessages.apply(_this3, _arguments);\n      } finally {\n        resolve();\n      }\n    });\n  };\n};","map":{"version":3,"names":["module","export","loadAsyncStubHelpers","DDP","link","v","isEmpty","last","Connection","queueSize","queue","Promise","resolve","queueFunction","fn","promiseProps","arguments","length","undefined","reject","promise","_resolve","_reject","finally","_promise$stubPromise","stubPromise","catch","Meteor","connection","_maybeMigrate","serverPromise","oldReadyToMigrate","prototype","_readyToMigrate","apply","currentMethodInvocation","oldApplyAsync","applyAsync","_this","args","name","_CurrentMethodInvocation","_set","enclosing","get","alreadyInSimulation","isSimulation","isFromCallAsync","_isFromCallAsync","_getIsSimulation","stubPromiseResolver","serverPromiseResolver","r","hasStub","finished","_setImmediate","applyAsyncPromise","then","result","err","console","warn","oldApply","options","wait","oldOutstandingMethodBlocks","_outstandingMethodBlocks","outstandingMethodBlocks","methods","methodInvoker","queueMethodInvoker","self","push","sendMessage","queueSend","oldSubscribe","subscribe","_stream","_neverQueued","oldSend","_send","params","shouldQueue","_this2","call","_oldSendOutstandingMethodBlocksMessages","_sendOutstandingMethodBlocksMessages","_arguments","_this3"],"sources":["packages/ddp-client/client/queueStubsHelpers.js"],"sourcesContent":["import { DDP } from \"../common/namespace.js\";\nimport { isEmpty, last } from \"meteor/ddp-common/utils.js\";\nimport { Connection } from \"../common/livedata_connection\";\n\n// https://forums.meteor.com/t/proposal-to-fix-issues-with-async-method-stubs/60826\n\nlet queueSize = 0;\nlet queue = Promise.resolve();\n\nexport const loadAsyncStubHelpers = () => {\n  function queueFunction(fn, promiseProps = {}) {\n    queueSize += 1;\n\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n      resolve = _resolve;\n      reject = _reject;\n    });\n\n    queue = queue.finally(() => {\n      fn(resolve, reject);\n\n      return promise.stubPromise?.catch(() => {}); // silent uncaught promise\n    });\n\n    promise\n      .catch(() => {}) // silent uncaught promise\n      .finally(() => {\n        queueSize -= 1;\n        if (queueSize === 0) {\n          Meteor.connection._maybeMigrate();\n        }\n      });\n\n    promise.stubPromise = promiseProps.stubPromise;\n    promise.serverPromise = promiseProps.serverPromise;\n\n    return promise;\n  }\n\n  let oldReadyToMigrate = Connection.prototype._readyToMigrate;\n  Connection.prototype._readyToMigrate = function () {\n    if (queueSize > 0) {\n      return false;\n    }\n\n    return oldReadyToMigrate.apply(this, arguments);\n  };\n\n  let currentMethodInvocation = null;\n\n  /**\n   * Meteor sets CurrentMethodInvocation to undefined for the reasons explained at\n   * https://github.com/meteor/meteor/blob/c9e3551b9673a7ed607f18cb1128563ff49ca96f/packages/ddp-client/common/livedata_connection.js#L578-L605\n   * The app code could call `.then` on a promise while the async stub is running,\n   * causing the `then` callback to think it is inside the stub.\n   *\n   * With the queueing we are doing, this is no longer necessary. The point\n   * of the queueing is to prevent app/package code from running while\n   * the stub is running, so we don't need to worry about this.\n   */\n\n  let oldApplyAsync = Connection.prototype.applyAsync;\n  Connection.prototype.applyAsync = function () {\n    let args = arguments;\n    let name = args[0];\n\n    if (currentMethodInvocation) {\n      DDP._CurrentMethodInvocation._set(currentMethodInvocation);\n      currentMethodInvocation = null;\n    }\n\n    const enclosing = DDP._CurrentMethodInvocation.get();\n    const alreadyInSimulation = enclosing?.isSimulation;\n    const isFromCallAsync = enclosing?._isFromCallAsync;\n\n    if (\n      Meteor.connection._getIsSimulation({\n        isFromCallAsync,\n        alreadyInSimulation,\n      })\n    ) {\n      // In stub - call immediately\n      return oldApplyAsync.apply(this, args);\n    }\n\n    let stubPromiseResolver;\n    let serverPromiseResolver;\n    const stubPromise = new Promise((r) => (stubPromiseResolver = r));\n    const serverPromise = new Promise((r) => (serverPromiseResolver = r));\n\n    return queueFunction(\n      (resolve, reject) => {\n        let hasStub = false;\n        let finished = false;\n\n        Meteor._setImmediate(() => {\n          const applyAsyncPromise = oldApplyAsync.apply(this, args);\n          stubPromiseResolver(applyAsyncPromise.stubPromise);\n          serverPromiseResolver(applyAsyncPromise.serverPromise);\n          hasStub = !!applyAsyncPromise.stubPromise;\n          if (hasStub) {\n            applyAsyncPromise.stubPromise\n              .catch(() => {}) // silent uncaught promise\n              .finally(() => {\n                finished = true;\n              });\n          }\n\n          applyAsyncPromise\n            .then((result) => {\n              resolve(result);\n            })\n            .catch((err) => {\n              reject(err);\n            });\n          serverPromise.catch(() => {}); // silent uncaught promise\n        });\n\n        Meteor._setImmediate(() => {\n          if (hasStub && !finished) {\n            console.warn(\n              `Method stub (${name}) took too long and could cause unexpected problems. Learn more at https://v3-migration-docs.meteor.com/breaking-changes/call-x-callAsync.html#considerations-for-effective-use-of-meteor-callasync`\n            );\n          }\n        });\n      },\n      {\n        stubPromise,\n        serverPromise,\n      }\n    );\n  };\n\n  let oldApply = Connection.prototype.apply;\n  Connection.prototype.apply = function () {\n    // [name, args, options]\n    let options = arguments[2] || {};\n    let wait = options.wait;\n\n    // Apply runs the stub before synchronously returning.\n    //\n    // However, we want the server to run the methods in the original call order\n    // so we have to queue sending the message to the server until any previous async\n    // methods run.\n    // This does mean the stubs run in a different order than the methods on the\n    // server.\n\n    let oldOutstandingMethodBlocks = Meteor.connection._outstandingMethodBlocks;\n    // Meteor only sends the method if _outstandingMethodBlocks.length is 1.\n    // Add a wait block to force Meteor to put the new method in a second block.\n    let outstandingMethodBlocks = [{ wait: true, methods: [] }];\n    Meteor.connection._outstandingMethodBlocks = outstandingMethodBlocks;\n\n    let result;\n    try {\n      result = oldApply.apply(this, arguments);\n    } finally {\n      Meteor.connection._outstandingMethodBlocks = oldOutstandingMethodBlocks;\n    }\n\n    if (outstandingMethodBlocks[1]) {\n      let methodInvoker = outstandingMethodBlocks[1].methods[0];\n\n      if (methodInvoker) {\n        queueMethodInvoker(methodInvoker, wait);\n      }\n    }\n\n    return result;\n  };\n\n  function queueMethodInvoker(methodInvoker, wait) {\n    queueFunction((resolve) => {\n      let self = Meteor.connection;\n      // based on https://github.com/meteor/meteor/blob/e0631738f2a8a914d8a50b1060e8f40cb0873680/packages/ddp-client/common/livedata_connection.js#L833-L853C1\n      if (wait) {\n        // It's a wait method! Wait methods go in their own block.\n        self._outstandingMethodBlocks.push({\n          wait: true,\n          methods: [methodInvoker],\n        });\n      } else {\n        // Not a wait method. Start a new block if the previous block was a wait\n        // block, and add it to the last block of methods.\n        if (\n          isEmpty(self._outstandingMethodBlocks) ||\n          last(self._outstandingMethodBlocks).wait\n        ) {\n          self._outstandingMethodBlocks.push({\n            wait: false,\n            methods: [],\n          });\n        }\n\n        last(self._outstandingMethodBlocks).methods.push(methodInvoker);\n      }\n\n      // If we added it to the first block, send it out now.\n      if (self._outstandingMethodBlocks.length === 1)\n        methodInvoker.sendMessage();\n\n      resolve();\n    });\n  }\n\n  /**\n   * Queue subscriptions in case they rely on previous method calls\n   */\n  let queueSend = false;\n  let oldSubscribe = Connection.prototype.subscribe;\n  Connection.prototype.subscribe = function () {\n    if (this._stream._neverQueued) {\n      return oldSubscribe.apply(this, arguments);\n    }\n\n    queueSend = true;\n    try {\n      return oldSubscribe.apply(this, arguments);\n    } finally {\n      queueSend = false;\n    }\n  };\n\n  let oldSend = Connection.prototype._send;\n  Connection.prototype._send = function (params, shouldQueue) {\n    if (this._stream._neverQueued) {\n      return oldSend.apply(this, arguments);\n    }\n\n    if (!queueSend && !shouldQueue) {\n      return oldSend.call(this, params);\n    }\n\n    queueSend = false;\n    queueFunction((resolve) => {\n      try {\n        oldSend.call(this, params);\n      } finally {\n        resolve();\n      }\n    });\n  };\n  let _oldSendOutstandingMethodBlocksMessages =\n    Connection.prototype._sendOutstandingMethodBlocksMessages;\n  Connection.prototype._sendOutstandingMethodBlocksMessages = function () {\n    if (this._stream._neverQueued) {\n      return _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n    }\n    queueFunction((resolve) => {\n      try {\n        _oldSendOutstandingMethodBlocksMessages.apply(this, arguments);\n      } finally {\n        resolve();\n      }\n    });\n  };\n};\n"],"mappings":"AAAAA,MAAM,CAACC,MAAM,CAAC;EAACC,oBAAoB,EAAC,SAAAA,CAAA,EAAU;IAAC,OAAOA,oBAAoB;EAAA;AAAC,CAAC,CAAC;AAAC,IAAIC,GAAG;AAACH,MAAM,CAACI,IAAI,CAAC,wBAAwB,EAAC;EAACD,GAAG,EAAC,SAAAA,CAASE,CAAC,EAAC;IAACF,GAAG,GAACE,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAAC,IAAIC,OAAO,EAACC,IAAI;AAACP,MAAM,CAACI,IAAI,CAAC,4BAA4B,EAAC;EAACE,OAAO,EAAC,SAAAA,CAASD,CAAC,EAAC;IAACC,OAAO,GAACD,CAAC;EAAA,CAAC;EAACE,IAAI,EAAC,SAAAA,CAASF,CAAC,EAAC;IAACE,IAAI,GAACF,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAAC,IAAIG,UAAU;AAACR,MAAM,CAACI,IAAI,CAAC,+BAA+B,EAAC;EAACI,UAAU,EAAC,SAAAA,CAASH,CAAC,EAAC;IAACG,UAAU,GAACH,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAIlX;;AAEA,IAAII,SAAS,GAAG,CAAC;AACjB,IAAIC,KAAK,GAAGC,OAAO,CAACC,OAAO,CAAC,CAAC;AAEtB,IAAMV,oBAAoB,GAAG,SAAAA,CAAA,EAAM;EACxC,SAASW,aAAaA,CAACC,EAAE,EAAqB;IAAA,IAAnBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC1CP,SAAS,IAAI,CAAC;IAEd,IAAIG,OAAO;IACX,IAAIO,MAAM;IACV,IAAMC,OAAO,GAAG,IAAIT,OAAO,CAAC,UAACU,QAAQ,EAAEC,OAAO,EAAK;MACjDV,OAAO,GAAGS,QAAQ;MAClBF,MAAM,GAAGG,OAAO;IAClB,CAAC,CAAC;IAEFZ,KAAK,GAAGA,KAAK,CAACa,OAAO,CAAC,YAAM;MAAA,IAAAC,oBAAA;MAC1BV,EAAE,CAACF,OAAO,EAAEO,MAAM,CAAC;MAEnB,QAAAK,oBAAA,GAAOJ,OAAO,CAACK,WAAW,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBE,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEFN,OAAO,CACJM,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC,CAAC;IAAA,CAChBH,OAAO,CAAC,YAAM;MACbd,SAAS,IAAI,CAAC;MACd,IAAIA,SAAS,KAAK,CAAC,EAAE;QACnBkB,MAAM,CAACC,UAAU,CAACC,aAAa,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;IAEJT,OAAO,CAACK,WAAW,GAAGV,YAAY,CAACU,WAAW;IAC9CL,OAAO,CAACU,aAAa,GAAGf,YAAY,CAACe,aAAa;IAElD,OAAOV,OAAO;EAChB;EAEA,IAAIW,iBAAiB,GAAGvB,UAAU,CAACwB,SAAS,CAACC,eAAe;EAC5DzB,UAAU,CAACwB,SAAS,CAACC,eAAe,GAAG,YAAY;IACjD,IAAIxB,SAAS,GAAG,CAAC,EAAE;MACjB,OAAO,KAAK;IACd;IAEA,OAAOsB,iBAAiB,CAACG,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;EACjD,CAAC;EAED,IAAImB,uBAAuB,GAAG,IAAI;;EAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,IAAIC,aAAa,GAAG5B,UAAU,CAACwB,SAAS,CAACK,UAAU;EACnD7B,UAAU,CAACwB,SAAS,CAACK,UAAU,GAAG,YAAY;IAAA,IAAAC,KAAA;IAC5C,IAAIC,IAAI,GAAGvB,SAAS;IACpB,IAAIwB,IAAI,GAAGD,IAAI,CAAC,CAAC,CAAC;IAElB,IAAIJ,uBAAuB,EAAE;MAC3BhC,GAAG,CAACsC,wBAAwB,CAACC,IAAI,CAACP,uBAAuB,CAAC;MAC1DA,uBAAuB,GAAG,IAAI;IAChC;IAEA,IAAMQ,SAAS,GAAGxC,GAAG,CAACsC,wBAAwB,CAACG,GAAG,CAAC,CAAC;IACpD,IAAMC,mBAAmB,GAAGF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,YAAY;IACnD,IAAMC,eAAe,GAAGJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,gBAAgB;IAEnD,IACErB,MAAM,CAACC,UAAU,CAACqB,gBAAgB,CAAC;MACjCF,eAAe,EAAfA,eAAe;MACfF,mBAAmB,EAAnBA;IACF,CAAC,CAAC,EACF;MACA;MACA,OAAOT,aAAa,CAACF,KAAK,CAAC,IAAI,EAAEK,IAAI,CAAC;IACxC;IAEA,IAAIW,mBAAmB;IACvB,IAAIC,qBAAqB;IACzB,IAAM1B,WAAW,GAAG,IAAId,OAAO,CAAC,UAACyC,CAAC;MAAA,OAAMF,mBAAmB,GAAGE,CAAC;IAAA,CAAC,CAAC;IACjE,IAAMtB,aAAa,GAAG,IAAInB,OAAO,CAAC,UAACyC,CAAC;MAAA,OAAMD,qBAAqB,GAAGC,CAAC;IAAA,CAAC,CAAC;IAErE,OAAOvC,aAAa,CAClB,UAACD,OAAO,EAAEO,MAAM,EAAK;MACnB,IAAIkC,OAAO,GAAG,KAAK;MACnB,IAAIC,QAAQ,GAAG,KAAK;MAEpB3B,MAAM,CAAC4B,aAAa,CAAC,YAAM;QACzB,IAAMC,iBAAiB,GAAGpB,aAAa,CAACF,KAAK,CAACI,KAAI,EAAEC,IAAI,CAAC;QACzDW,mBAAmB,CAACM,iBAAiB,CAAC/B,WAAW,CAAC;QAClD0B,qBAAqB,CAACK,iBAAiB,CAAC1B,aAAa,CAAC;QACtDuB,OAAO,GAAG,CAAC,CAACG,iBAAiB,CAAC/B,WAAW;QACzC,IAAI4B,OAAO,EAAE;UACXG,iBAAiB,CAAC/B,WAAW,CAC1BC,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC,CAAC;UAAA,CAChBH,OAAO,CAAC,YAAM;YACb+B,QAAQ,GAAG,IAAI;UACjB,CAAC,CAAC;QACN;QAEAE,iBAAiB,CACdC,IAAI,CAAC,UAACC,MAAM,EAAK;UAChB9C,OAAO,CAAC8C,MAAM,CAAC;QACjB,CAAC,CAAC,CACDhC,KAAK,CAAC,UAACiC,GAAG,EAAK;UACdxC,MAAM,CAACwC,GAAG,CAAC;QACb,CAAC,CAAC;QACJ7B,aAAa,CAACJ,KAAK,CAAC,YAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC;MAEFC,MAAM,CAAC4B,aAAa,CAAC,YAAM;QACzB,IAAIF,OAAO,IAAI,CAACC,QAAQ,EAAE;UACxBM,OAAO,CAACC,IAAI,mBACMrB,IAAI,wMACtB,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MACEf,WAAW,EAAXA,WAAW;MACXK,aAAa,EAAbA;IACF,CACF,CAAC;EACH,CAAC;EAED,IAAIgC,QAAQ,GAAGtD,UAAU,CAACwB,SAAS,CAACE,KAAK;EACzC1B,UAAU,CAACwB,SAAS,CAACE,KAAK,GAAG,YAAY;IACvC;IACA,IAAI6B,OAAO,GAAG/C,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChC,IAAIgD,IAAI,GAAGD,OAAO,CAACC,IAAI;;IAEvB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAIC,0BAA0B,GAAGtC,MAAM,CAACC,UAAU,CAACsC,wBAAwB;IAC3E;IACA;IACA,IAAIC,uBAAuB,GAAG,CAAC;MAAEH,IAAI,EAAE,IAAI;MAAEI,OAAO,EAAE;IAAG,CAAC,CAAC;IAC3DzC,MAAM,CAACC,UAAU,CAACsC,wBAAwB,GAAGC,uBAAuB;IAEpE,IAAIT,MAAM;IACV,IAAI;MACFA,MAAM,GAAGI,QAAQ,CAAC5B,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;IAC1C,CAAC,SAAS;MACRW,MAAM,CAACC,UAAU,CAACsC,wBAAwB,GAAGD,0BAA0B;IACzE;IAEA,IAAIE,uBAAuB,CAAC,CAAC,CAAC,EAAE;MAC9B,IAAIE,aAAa,GAAGF,uBAAuB,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MAEzD,IAAIC,aAAa,EAAE;QACjBC,kBAAkB,CAACD,aAAa,EAAEL,IAAI,CAAC;MACzC;IACF;IAEA,OAAON,MAAM;EACf,CAAC;EAED,SAASY,kBAAkBA,CAACD,aAAa,EAAEL,IAAI,EAAE;IAC/CnD,aAAa,CAAC,UAACD,OAAO,EAAK;MACzB,IAAI2D,IAAI,GAAG5C,MAAM,CAACC,UAAU;MAC5B;MACA,IAAIoC,IAAI,EAAE;QACR;QACAO,IAAI,CAACL,wBAAwB,CAACM,IAAI,CAAC;UACjCR,IAAI,EAAE,IAAI;UACVI,OAAO,EAAE,CAACC,aAAa;QACzB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA;QACA,IACE/D,OAAO,CAACiE,IAAI,CAACL,wBAAwB,CAAC,IACtC3D,IAAI,CAACgE,IAAI,CAACL,wBAAwB,CAAC,CAACF,IAAI,EACxC;UACAO,IAAI,CAACL,wBAAwB,CAACM,IAAI,CAAC;YACjCR,IAAI,EAAE,KAAK;YACXI,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;QAEA7D,IAAI,CAACgE,IAAI,CAACL,wBAAwB,CAAC,CAACE,OAAO,CAACI,IAAI,CAACH,aAAa,CAAC;MACjE;;MAEA;MACA,IAAIE,IAAI,CAACL,wBAAwB,CAACjD,MAAM,KAAK,CAAC,EAC5CoD,aAAa,CAACI,WAAW,CAAC,CAAC;MAE7B7D,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACE,IAAI8D,SAAS,GAAG,KAAK;EACrB,IAAIC,YAAY,GAAGnE,UAAU,CAACwB,SAAS,CAAC4C,SAAS;EACjDpE,UAAU,CAACwB,SAAS,CAAC4C,SAAS,GAAG,YAAY;IAC3C,IAAI,IAAI,CAACC,OAAO,CAACC,YAAY,EAAE;MAC7B,OAAOH,YAAY,CAACzC,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;IAC5C;IAEA0D,SAAS,GAAG,IAAI;IAChB,IAAI;MACF,OAAOC,YAAY,CAACzC,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;IAC5C,CAAC,SAAS;MACR0D,SAAS,GAAG,KAAK;IACnB;EACF,CAAC;EAED,IAAIK,OAAO,GAAGvE,UAAU,CAACwB,SAAS,CAACgD,KAAK;EACxCxE,UAAU,CAACwB,SAAS,CAACgD,KAAK,GAAG,UAAUC,MAAM,EAAEC,WAAW,EAAE;IAAA,IAAAC,MAAA;IAC1D,IAAI,IAAI,CAACN,OAAO,CAACC,YAAY,EAAE;MAC7B,OAAOC,OAAO,CAAC7C,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;IACvC;IAEA,IAAI,CAAC0D,SAAS,IAAI,CAACQ,WAAW,EAAE;MAC9B,OAAOH,OAAO,CAACK,IAAI,CAAC,IAAI,EAAEH,MAAM,CAAC;IACnC;IAEAP,SAAS,GAAG,KAAK;IACjB7D,aAAa,CAAC,UAACD,OAAO,EAAK;MACzB,IAAI;QACFmE,OAAO,CAACK,IAAI,CAACD,MAAI,EAAEF,MAAM,CAAC;MAC5B,CAAC,SAAS;QACRrE,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC;EACJ,CAAC;EACD,IAAIyE,uCAAuC,GACzC7E,UAAU,CAACwB,SAAS,CAACsD,oCAAoC;EAC3D9E,UAAU,CAACwB,SAAS,CAACsD,oCAAoC,GAAG,YAAY;IAAA,IAAAC,UAAA,GAAAvE,SAAA;MAAAwE,MAAA;IACtE,IAAI,IAAI,CAACX,OAAO,CAACC,YAAY,EAAE;MAC7B,OAAOO,uCAAuC,CAACnD,KAAK,CAAC,IAAI,EAAElB,SAAS,CAAC;IACvE;IACAH,aAAa,CAAC,UAACD,OAAO,EAAK;MACzB,IAAI;QACFyE,uCAAuC,CAACnD,KAAK,CAACsD,MAAI,EAAExE,UAAS,CAAC;MAChE,CAAC,SAAS;QACRJ,OAAO,CAAC,CAAC;MACX;IACF,CAAC,CAAC;EACJ,CAAC;AACH,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"02d74dd8895716c7fbe6667411c872f2cf5439a9"}
