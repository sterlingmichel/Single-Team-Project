{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/smichel/Projects/Team-5-Project/database/packages/autoupdate/client_versions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"packages/autoupdate/client_versions.js","filename":"/Users/smichel/Projects/Team-5-Project/database/packages/autoupdate/client_versions.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/smichel/Projects/Team-5-Project/database","root":"/Users/smichel/Projects/Team-5-Project/database","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/smichel/Projects/Team-5-Project/database/packages/autoupdate/client_versions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/autoupdate/client_versions.js"}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      ClientVersions: () => ClientVersions\n    });\n    let Tracker;\n    module.link(\"meteor/tracker\", {\n      Tracker(v) {\n        Tracker = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ClientVersions {\n      constructor() {\n        this._versions = new Map();\n        this._watchCallbacks = new Set();\n      }\n\n      // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n      // After the store is registered, document updates reported by Livedata are\n      // merged with the documents in this `ClientVersions` instance.\n      createStore() {\n        return {\n          update: _ref => {\n            let {\n              id,\n              msg,\n              fields\n            } = _ref;\n            if (msg === \"added\" || msg === \"changed\") {\n              this.set(id, fields);\n            }\n          }\n        };\n      }\n      hasVersions() {\n        return this._versions.size > 0;\n      }\n      get(id) {\n        return this._versions.get(id);\n      }\n\n      // Adds or updates a version document and invokes registered callbacks for the\n      // added/updated document. If a document with the given ID already exists, its\n      // fields are merged with `fields`.\n      set(id, fields) {\n        let version = this._versions.get(id);\n        let isNew = false;\n        if (version) {\n          Object.assign(version, fields);\n        } else {\n          version = _objectSpread({\n            _id: id\n          }, fields);\n          isNew = true;\n          this._versions.set(id, version);\n        }\n        this._watchCallbacks.forEach(_ref2 => {\n          let {\n            fn,\n            filter\n          } = _ref2;\n          if (!filter || filter === version._id) {\n            fn(version, isNew);\n          }\n        });\n      }\n\n      // Registers a callback that will be invoked when a version document is added\n      // or changed. Calling the function returned by `watch` removes the callback.\n      // If `skipInitial` is true, the callback isn't be invoked for existing\n      // documents. If `filter` is set, the callback is only invoked for documents\n      // with ID `filter`.\n      watch(fn) {\n        let {\n          skipInitial,\n          filter\n        } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (!skipInitial) {\n          const resolved = Promise.resolve();\n          this._versions.forEach(version => {\n            if (!filter || filter === version._id) {\n              resolved.then(() => fn(version, true));\n            }\n          });\n        }\n        const callback = {\n          fn,\n          filter\n        };\n        this._watchCallbacks.add(callback);\n        return () => this._watchCallbacks.delete(callback);\n      }\n\n      // A reactive data source for `Autoupdate.newClientAvailable`.\n      newClientAvailable(id, fields, currentVersion) {\n        function isNewVersion(version) {\n          return version._id === id && fields.some(field => version[field] !== currentVersion[field]);\n        }\n        const dependency = new Tracker.Dependency();\n        const version = this.get(id);\n        dependency.depend();\n        const stop = this.watch(version => {\n          if (isNewVersion(version)) {\n            dependency.changed();\n            stop();\n          }\n        }, {\n          skipInitial: true\n        });\n        return !!version && isNewVersion(version);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ClientVersions","Tracker","__reifyWaitForDeps__","constructor","_versions","Map","_watchCallbacks","Set","createStore","update","_ref","id","msg","fields","set","hasVersions","size","get","version","isNew","Object","assign","_id","forEach","_ref2","fn","filter","watch","skipInitial","arguments","length","undefined","resolved","Promise","resolve","then","callback","add","delete","newClientAvailable","currentVersion","isNewVersion","some","field","dependency","Dependency","depend","stop","changed","__reify_async_result__","_reifyError","self","async"],"sources":["packages/autoupdate/client_versions.js"],"sourcesContent":["import { Tracker } from \"meteor/tracker\";\n\nexport class ClientVersions {\n  constructor() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  createStore() {\n    return {\n      update: ({ id, msg, fields }) => {\n        if (msg === \"added\" || msg === \"changed\") {\n          this.set(id, fields);\n        }\n      }\n    };\n  }\n\n  hasVersions() {\n    return this._versions.size > 0;\n  }\n\n  get(id) {\n    return this._versions.get(id);\n  }\n\n  // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  set(id, fields) {\n    let version = this._versions.get(id);\n    let isNew = false;\n\n    if (version) {\n      Object.assign(version, fields);\n    } else {\n      version = {\n        _id: id,\n        ...fields\n      };\n\n      isNew = true;\n      this._versions.set(id, version);\n    }\n\n    this._watchCallbacks.forEach(({ fn, filter }) => {\n      if (! filter || filter === version._id) {\n        fn(version, isNew);\n      }\n    });\n  }\n\n  // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  watch(fn, { skipInitial, filter } = {}) {\n    if (! skipInitial) {\n      const resolved = Promise.resolve();\n\n      this._versions.forEach((version) => {\n        if (! filter || filter === version._id) {\n          resolved.then(() => fn(version, true));\n        }\n      });\n    }\n\n    const callback = { fn, filter };\n    this._watchCallbacks.add(callback);\n\n    return () => this._watchCallbacks.delete(callback);\n  }\n\n  // A reactive data source for `Autoupdate.newClientAvailable`.\n  newClientAvailable(id, fields, currentVersion) {\n    function isNewVersion(version) {\n      return (\n        version._id === id &&\n        fields.some((field) => version[field] !== currentVersion[field])\n      );\n    }\n\n    const dependency = new Tracker.Dependency();\n    const version = this.get(id);\n\n    dependency.depend();\n\n    const stop = this.watch(\n      (version) => {\n        if (isNewVersion(version)) {\n          dependency.changed();\n          stop();\n        }\n      },\n      { skipInitial: true }\n    );\n\n    return !! version && isNewVersion(version);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"638d94e5ec58dfaf0ad7d587690036138de4d01e"}
